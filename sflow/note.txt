[root@dev-r630-03 ~]# ovs-vsctl list sflow
_uuid               : 1a79913e-670d-4cf8-982e-e4e96621cc25
agent               : "eno1"
external_ids        : {}
header              : 128
polling             : 10
sampling            : 10
targets             : ["10.75.205.14:8087"]

tcpdump -ni eno1 udp port 8087

[root@dev-r630-03 ~]# sudo ovs-vsctl -- --id=@sflow create sflow agent=eno1 target=\"10.75.205.14:8087\" header=128 sampling=10 polling=10 -- set bridge br sflow=@sflow
1a79913e-670d-4cf8-982e-e4e96621cc25

ovs-vsctl -- clear Bridge br sflow

sudo ovs-vsctl -- --id=@sflow create sflow agent=eno1 target=\"10.75.205.13:8087\" header=128 sampling=10 polling=10 -- set bridge br sflow=@sflow

ovs-vsctl -- --id=@sflow create sflow agent=eno1 target=\"10.75.205.14:6343\" header=128 sampling=10 polling=10 -- set bridge br sflow=@sflow


crash> rd -8 0xffff8c4d81cac29c 0x54
ffff8c4d81cac29c:  54 00 06 00 0c 00 04 00 01 58 25 93 99 99 99 19   T........X%.....
ffff8c4d81cac2ac:  44 00 02 00 08 00 01 00 09 d1 07 aa 34 00 02 00   D...........4...
ffff8c4d81cac2bc:  01 00 00 00 03 00 00 00 02 f2 cd 6b e5 4c f6 99   ...........k.L..
ffff8c4d81cac2cc:  30 38 63 bf 2e 63 eb d1 00 00 00 00 48 00 00 00   08c..c......H...
ffff8c4d81cac2dc:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
ffff8c4d81cac2ec:  04 00 04 00                                       ....
crash>


enum ovs_userspace_attr {
        OVS_USERSPACE_ATTR_UNSPEC,
1        OVS_USERSPACE_ATTR_PID,       /* u32 Netlink PID to receive upcalls. */
2        OVS_USERSPACE_ATTR_USERDATA,  /* Optional user-specified cookie. */
3        OVS_USERSPACE_ATTR_EGRESS_TUN_PORT,  /* Optional, u32 output port
                                              * to get tunnel info. */
4        OVS_USERSPACE_ATTR_ACTIONS,   /* Optional flag to get actions. */
        __OVS_USERSPACE_ATTR_MAX
};

         0x54    0xc                 0x44
crash> # actions:sample(sample=10.0%,actions(      userspace(pid=2852638985,  sFlow(vid=0,pcp=0,output=72),  actions)    )),enp4s0f0_1

/* user_action_cookie is passed as argument to OVS_ACTION_ATTR_USERSPACE. */
struct user_action_cookie {
    uint16_t type;              /* enum user_action_cookie_type. */
    ofp_port_t ofp_in_port;     /* OpenFlow in port, or OFPP_NONE. */
    struct uuid ofproto_uuid;   /* UUID of ofproto-dpif. */

    union {
        struct {
            /* USER_ACTION_COOKIE_SFLOW. */
            ovs_be16 vlan_tci;      /* Destination VLAN TCI. */
            uint32_t output;        /* SFL_FLOW_SAMPLE_TYPE 'output' value. */
        } sflow;
    };
};


/* The first action is always 'OVS_SAMPLE_ATTR_ARG'. */

                          OVS_ACTION_ATTR_SAMPLE
ffff8c4d81cac29c:  (54 00 06 00 (0c 00 04 00 01 58 25 93 99 99 99 19)   T........X%.....
                                     OVS_SAMPLE_ATTR_ARG

                                     OVS_USERSPACE_ATTR_PID(aa07d109)  
ffff8c4d81cac2ac:  (44 00 02 00 (08 00 01 00 09 d1 07 aa)           (34 00 02 00   D...........4...
                          OVS_ACTION_ATTR_USERSPACE                        OVS_ACTION_ATTR_USERSPACE

                               port=3      uuid 16 bytes
ffff8c4d81cac2bc:  01 00 00 00 03 00 00 00 02 f2 cd 6b e5 4c f6 99   ...........k.L..
                   USER_ACTION_COOKIE_SFLOW

                                           vlan_tci
ffff8c4d81cac2cc:  30 38 63 bf 2e 63 eb d1 00 00 00 00 48 00 00 00   08c..c......H...
                                                       output=72


ffff8c4d81cac2dc:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00)   ................

ffff8c4d81cac2ec:  04 00 04 00))
                         OVS_USERSPACE_ATTR_ACTIONS




crash> rd -8 0xffff8c4d7c6fd71c 0x5c
ffff8c4d7c6fd71c:  54 00 06 00 0c 00 04 00 01 58 25 93 99 99 99 19   T........X%.....
ffff8c4d7c6fd72c:  44 00 02 00 08 00 01 00 83 2d 23 d0 34 00 02 00   D........-#.4...
ffff8c4d7c6fd73c:  01 00 00 00 02 00 00 00 02 f2 cd 6b e5 4c f6 99   ...........k.L..
ffff8c4d7c6fd74c:  30 38 63 bf 2e 63 eb d1 00 00 00 00 49 00 00 00   08c..c......I...
ffff8c4d7c6fd75c:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
ffff8c4d7c6fd76c:  04 00 04 00 08 00 01 00 03 00 00 00               ............



a[root@dev-r630-04 ~]# trace tcf_sample_init -K
TIME     PID     TID     COMM            FUNC
5.173285 4273    4273    tc              tcf_sample_init
        tcf_sample_init+0x1 [act_sample]
        tcf_action_init+0x115 [kernel]
        tcf_exts_validate+0xcb [kernel]
        mall_change+0x168 [cls_matchall]
        tc_new_tfilter+0x861 [kernel]
        rtnetlink_rcv_msg+0x369 [kernel]
        netlink_rcv_skb+0x50 [kernel]
        rtnetlink_rcv+0x15 [kernel]
        netlink_unicast+0x1a8 [kernel]
        netlink_sendmsg+0x233 [kernel]
        sock_sendmsg+0x65 [kernel]
        ____sys_sendmsg+0x215 [kernel]
        ___sys_sendmsg+0x81 [kernel]
        __sys_sendmsg+0x5c [kernel]
        __x64_sys_sendmsg+0x1f [kernel]
        do_syscall_64+0x5a [kernel]
        entry_SYSCALL_64_after_hwframe+0x44 [kernel]


===ct===

CONFIG_NET_TC_SKB_EXT
mlx5e_tc_rep_update_skb

[root@dev-r630-04 ~]# trace nf_flow_offload_add -K
TIME     PID     TID     COMM            FUNC
2.697775 0       0       swapper/5       nf_flow_offload_add
        nf_flow_offload_add+0x1 [nf_flow_table]
        tcf_ct_act+0x579 [act_ct]
        tcf_action_exec+0x82 [kernel]
        fl_classify+0x6d4 [cls_flower]
        tcf_classify_ingress+0x81 [kernel]
        __netif_receive_skb_core+0x441 [kernel]
        __netif_receive_skb_list_core+0x126 [kernel]
        netif_receive_skb_list_internal+0x1f6 [kernel]
        gro_normal_list.part.0+0x1e [kernel]
        napi_complete_done+0x91 [kernel]
        mlx5e_napi_poll+0x1a0 [mlx5_core]
        net_rx_action+0x13b [kernel]
        __softirqentry_text_start+0xf5 [kernel]
        irq_exit+0xdf [kernel]
        do_IRQ+0x5a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xc2 [kernel]
        cpuidle_enter+0x2e [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1cd [kernel]
        cpu_startup_entry+0x20 [kernel]
        start_secondary+0x15a [kernel]
        secondary_startup_64+0xa4 [kernel]

mlx5_tc_ct_block_flow_offload

3.341207 21000   21000   kworker/0:0     mlx5_fc_query_cached
        mlx5_fc_query_cached+0x1 [mlx5_core]
        nf_flow_offload_tuple.isra.0+0xd4 [nf_flow_table]
        flow_offload_work_handler+0x15e [nf_flow_table]
        process_one_work+0x240 [kernel]
        worker_thread+0x50 [kernel]
        kthread+0x109 [kernel]
        ret_from_fork+0x35 [kernel]

mlx5_tc_ct_priv



tcf_ct_act
	tcf_ct_flow_table_process_conn
		tcf_ct_flow_table_add
			flow_offload_add
				nf_flow_offload_add

flow_offload_work_handler(FLOW_CLS_REPLACE)
	flow_offload_work_add
		flow_offload_rule_add
			flow_offload_tuple_add
			flow_offload_tuple_add

6.494420 15108   15108   kworker/13:1    mlx5_eswitch_add_offloaded_rule
        mlx5_eswitch_add_offloaded_rule
        mlx5_tc_ct_block_flow_offload
        nf_flow_offload_tuple
        flow_offload_work_handler
        process_one_work+0x240 [kernel]
        worker_thread+0x50 [kernel]
        kthread+0x109 [kernel]
        ret_from_fork+0x35 [kernel]



[Wed Apr  8 14:27:24 2020] nf_flow_offload_gc_step: expried: 0, dying: 0, teardown: 1

nf_flow_offload_gc_step
	nf_flow_offload_del
		NF_FLOW_HW_DYING
		flow_offload_queue_work(offload)
			schedule_work(&nf_flow_offload_work)

flow_offload_work_handler(FLOW_CLS_DESTROY)
	flow_offload_work_del(FLOW_OFFLOAD_DIR_ORIGINAL)
	flow_offload_work_delFLOW_OFFLOAD_DIR_REPLY)
	set_bit(NF_FLOW_HW_DEAD)

7.037005 8055    8055    kworker/4:1     mlx5_eswitch_del_offloaded_rule
        mlx5_eswitch_del_offloaded_rule+0x1 [mlx5_core]
        mlx5_tc_ct_entry_del_rules+0x29 [mlx5_core]
        mlx5_tc_ct_block_flow_offload
        nf_flow_offload_tuple
        flow_offload_tuple_del
        flow_offload_work_handler
        process_one_work+0x240 [kernel]
        worker_thread+0x50 [kernel]
        kthread+0x109 [kernel]
        ret_from_fork+0x35 [kernel]

[root@dev-r630-04 ~]# trace flow_offload_teardown -K
TIME     PID     TID     COMM            FUNC
8.002926 0       0       swapper/11      flow_offload_teardown
        flow_offload_teardown+0x1 [nf_flow_table]
        tcf_ct_act+0x6ea [act_ct]
        tcf_action_exec+0x82 [kernel]
        fl_classify+0x6d4 [cls_flower]
        tcf_classify_ingress+0x81 [kernel]
        __netif_receive_skb_core+0x441 [kernel]
        __netif_receive_skb_list_core+0x126 [kernel]
        netif_receive_skb_list_internal+0x1f6 [kernel]
        gro_normal_list.part.0+0x1e [kernel]
        napi_complete_done+0x91 [kernel]
        mlx5e_napi_poll+0x1a0 [mlx5_core]
        net_rx_action+0x13b [kernel]
        __softirqentry_text_start+0xf5 [kernel]
        irq_exit+0xdf [kernel]
        do_IRQ+0x5a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xc2 [kernel]
        cpuidle_enter+0x2e [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1cd [kernel]
        cpu_startup_entry+0x20 [kernel]
        start_secondary+0x15a [kernel]
        secondary_startup_64+0xa4 [kernel]




19.41299 3798    30693   handler66       __mlx5_tc_ct_flow_offload
        __mlx5_tc_ct_flow_offload+0x1 [mlx5_core]
        mlx5e_tc_offload_fdb_rules+0x6b [mlx5_core]
        mlx5e_tc_add_fdb_flow+0x179 [mlx5_core]
        __mlx5e_add_fdb_flow+0x16a [mlx5_core]
        mlx5e_tc_add_flow+0x170 [mlx5_core]
        mlx5e_configure_flower+0x2c8 [mlx5_core]
        mlx5e_rep_setup_tc_cls_flower+0x39 [mlx5_core]
        mlx5e_rep_setup_tc_cb+0x40 [mlx5_core]
        tc_setup_cb_add+0xdb [kernel]
        fl_hw_replace_filter+0x17a [cls_flower]
        fl_change+0xc0e [cls_flower]
        tc_new_tfilter+0x861 [kernel]
        rtnetlink_rcv_msg+0x369 [kernel]
        netlink_rcv_skb+0x50 [kernel]
        rtnetlink_rcv+0x15 [kernel]
        netlink_unicast+0x1a8 [kernel]
        netlink_sendmsg+0x233 [kernel]
        sock_sendmsg+0x65 [kernel]
        ____sys_sendmsg+0x215 [kernel]
        ___sys_sendmsg+0x81 [kernel]
        __sys_sendmsg+0x5c [kernel]
        __x64_sys_sendmsg+0x1f [kernel]
        do_syscall_64+0x5a [kernel]
        entry_SYSCALL_64_after_hwframe+0x44 [kernel]

===question===

1. What is FW level support 
mlx5_tc_ct_init_check_support()
	err_msg = "firmware level support is missing";
