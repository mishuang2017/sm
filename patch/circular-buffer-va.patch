diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c b/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
index b54766b81..6119c0951 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
@@ -594,6 +594,8 @@ netdev_tx_t mlx5e_xmit(struct sk_buff *skb, struct net_device *dev)
 	struct mlx5e_txqsq *sq;
 	u16 pi;
 
+	mlx5e_log("%s: %lx", __func__, (long)skb);
+
 	sq = priv->txq2sq[skb_get_queue_mapping(skb)];
 	mlx5e_sq_fetch_wqe(sq, &wqe, &pi);
 
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/main.c b/drivers/net/ethernet/mellanox/mlx5/core/main.c
index 661bd89d3..b8ae38136 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@ -53,6 +53,7 @@
 #include <linux/mlx5/mlx5_ifc.h>
 #include <linux/mlx5/vport.h>
 #include <linux/pm.h>
+#include <stdarg.h>
 #ifdef CONFIG_RFS_ACCEL
 #include <linux/cpu_rmap.h>
 #endif
@@ -2891,6 +2892,47 @@ static void mlx5_remove_core_dir(void)
 	}
 }
 
+struct mutex mlx5e_buf_lock;
+
+#define MLX5E_LOG_BUF_LEN   (16*PAGE_SIZE)
+
+char __mlx5e_log_buf[MLX5E_LOG_BUF_LEN] __aligned(4);
+char *mlx5e_log_buf = __mlx5e_log_buf;
+u32 mlx5e_log_buf_len = MLX5E_LOG_BUF_LEN;
+
+u16 mlx5e_log_next_seq = 0;
+u32 mlx5e_log_next_idx = 0;
+
+void mlx5e_log(char *fmt, ...)
+{
+	char va_buf[1024] = {0};
+	char buf[1024] = {0};
+	va_list argptr;
+	size_t len;
+	int cnt;
+
+	va_start(argptr, fmt);
+	cnt = vsnprintf(va_buf, 1024, fmt, argptr);
+	va_end(argptr);
+	if (cnt > 1000)
+		return;
+
+	snprintf(buf, 1024, "%d: %s\n", mlx5e_log_next_seq++, va_buf);
+	len = strlen(buf);
+
+	if (len + mlx5e_log_next_idx > mlx5e_log_buf_len) {
+		memset(mlx5e_log_buf, 0, mlx5e_log_buf_len - mlx5e_log_next_idx - 1);
+		mlx5e_log_next_idx = 0;
+		mlx5e_log_buf = __mlx5e_log_buf;
+	}
+
+	mutex_lock(&mlx5e_buf_lock);
+	memcpy(mlx5e_log_buf, buf, len);
+	mlx5e_log_buf += len;
+	mlx5e_log_next_idx += len;
+	mutex_unlock(&mlx5e_buf_lock);
+}
+
 static int __init init(void)
 {
 	int err;
@@ -2918,6 +2960,8 @@ static int __init init(void)
 		goto err_core_dir;
 	}
 
+	mutex_init(&mlx5e_buf_lock);
+
 	return 0;
 
 err_core_dir:
@@ -2938,6 +2982,7 @@ static void __exit cleanup(void)
 
 	mlx5_remove_core_dir();
 	mlx5_unregister_debugfs();
+	mutex_destroy(&mlx5e_buf_lock);
 }
 
 module_init(init);
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
index b35ab46d4..3a5f359b4 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
@@ -349,6 +349,7 @@ int mlx5_icmd_access_register(struct mlx5_core_dev *dev,
 
 void mlx5e_init(void);
 void mlx5e_cleanup(void);
+void mlx5e_log(char *fmt, ...);
 
 int mlx5_modify_other_hca_cap_roce(struct mlx5_core_dev *mdev,
 				   int function_id, bool value);
