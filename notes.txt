===namespace===

https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/systemtap_beginners_guide/index

[root@dev-r630-04 ~]# lsns
        NS TYPE   NPROCS   PID USER   COMMAND
4026531835 cgroup    358     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026531836 pid       358     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026531837 user      358     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026531838 uts       358     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026531839 ipc       358     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026531840 mnt       351     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026531861 mnt         1   104 root   kdevtmpfs
4026532009 net       355     1 root   /usr/lib/systemd/systemd --switched-root --system --deserialize 24
4026532912 mnt         1   773 root   /usr/lib/systemd/systemd-udevd
4026532962 mnt         1  1157 chrony /usr/sbin/chronyd
4026533015 mnt         1  1737 root   /usr/sbin/ypbind -n
4026533526 mnt         2 22595 root   bash
4026533718 net         2 22595 root   bash
4026533814 mnt         1 29264 root   bash
4026533815 net         1 29264 root   bash

crash> list -H net_namespace_list -o net.list
ffffffff820d5900
ffff880ec2a798c0
ffff881031fee300
ffff880f5f640000
crash> p &init_net
$4 = (struct net *) 0xffffffff820d5900 <init_net>

crash> task_struct.nsproxy ffff880f7faac880
    nsproxy = 0xffff88103419c4d0
crash>  struct nsproxy 0xffff88103419c4d0
struct nsproxy {
  count = {
    counter = 0x1
  },
  uts_ns = 0xffffffff82012280 <init_uts_ns>,
  ipc_ns = 0xffffffff8208b2e0 <init_ipc_ns>,
  mnt_ns = 0xffff880f44c80400,
  pid_ns_for_children = 0xffffffff82040de0 <init_pid_ns>,
  net_ns = 0xffff880ec2a798c0,
  cgroup_ns = 0xffffffff82056840 <init_cgroup_ns>
}

struct nsproxy init_nsproxy

struct task_struct init_task
    .nsproxy        = &init_nsproxy,

===printk===

printk
vprintk_default
vprintk_emit
vprintk_store
log_output
log_store

log_buf

static char __log_buf[__LOG_BUF_LEN] __aligned(LOG_ALIGN);
static char *log_buf = __log_buf;
static u32 log_buf_len = __LOG_BUF_LEN;

log_next_seq
log_next_idx

===frag===

commit 7257b535ab8e5fafd811c5f6788205eefdd44948
Author: Ben Pfaff <blp@nicira.com>
Date:   Wed Oct 19 21:33:44 2011 -0700

    Implement new fragment handling policy.

    Until now, OVS has handled IP fragments more awkwardly than necessary.  It
    has not been possible to match on L4 headers, even in fragments with offset
    0 where they are actually present.  This means that there was no way to
    implement ACLs that treat, say, different TCP ports differently, on
    fragmented traffic; instead, all decisions for fragment forwarding had to
    be made on the basis of L2 and L3 headers alone.

    This commit improves the situation significantly.  It is still not possible
    to match on L4 headers in fragments with nonzero offset, because that
    information is simply not present in such fragments, but this commit adds
    the ability to match on L4 headers for fragments with zero offset.  This
    means that it becomes possible to implement ACLs that drop such "first
    fragments" on the basis of L4 headers.  In practice, that effectively
    blocks even fragmented traffic on an L4 basis, because the receiving IP
    stack cannot reassemble a full packet when the first fragment is missing.

    This commit works by adding a new "fragment type" to the kernel flow match
    and making it available through OpenFlow as a new NXM field named
    NXM_NX_IP_FRAG.  Because OpenFlow 1.0 explicitly says that the L4 fields
    are always 0 for IP fragments, it adds a new OpenFlow fragment handling
    mode that fills in the L4 fields for "first fragments".  It also enhances
    ovs-ofctl to allow users to configure this new fragment handling mode and
    to parse the new field.

    Signed-off-by: Ben Pfaff <blp@nicira.com>
    Bug #7557.




commit 83e866067ea67807e573c64fc6ee69d47f6d5b7c
Author: Roi Dayan <roid@mellanox.com>
Date:   Mon Mar 12 14:58:47 2018 +0200

    netdev-tc-offloads: Add support for IP fragmentation

    Add support for frag no, first and later.

    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Shahar Klein <shahark@mellanox.com>
    Reviewed-by: Paul Blakey <paulb@mellanox.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>



https://redmine.mellanox.com/issues/1774992

TCA_FLOWER_KEY_FLAGS_IS_FRAGMENT
FLOW_NW_FRAG_ANY

1 with ovs. which will pass with your fix
1 with tc only which will keep failing until we fix ct in the kernel probably as i think it should work
talked with Paul.   frag packet dont have ports
we need src ip dst ip proto and src/dst ports for CT
we dont have src/dst ports in fragmented later packets
This conversation is being saved. You'll see it soon in your Outlook Inbox folder. 
so offload will never happen for us but should work with tc sw

===udev===

mlx5e_rep_get_phys_port_name
phys_switch_id_show

udevadm test /sys/class/net/eth0

net_class_attrs

17473   17473   ip              device_rename
        device_rename      1 [kernel]
        do_setlink      a1 [kernel]
        rtnl_newlink      558 [kernel]
        rtnetlink_rcv_msg      27c [kernel]
        netlink_rcv_skb      54 [kernel]
        rtnetlink_rcv      15 [kernel]
        netlink_unicast      1ab [kernel]
        netlink_sendmsg      2d1 [kernel]
        sock_sendmsg      3e [kernel]
        ___sys_sendmsg      280 [kernel]
        __sys_sendmsg      63 [kernel]
        __x64_sys_sendmsg      1f [kernel]
        do_syscall_64      5a [kernel]
        entry_SYSCALL_64_after_hwframe      44 [kernel]

 0xffffffff815c9a70 : dev_change_name        0/0x280 [kernel]
 0xffffffff815dc2f9 : rtnl_setlink        c9/0x140 [kernel]
 0xffffffff815dd3e7 : rtnetlink_rcv_msg        167/0x380 [kernel]
 0xffffffff81603fab : netlink_rcv_skb        ab/0xc0 [kernel]
 0xffffffff815d9405 : rtnetlink_rcv        15/0x20 [kernel]
 0xffffffff81603698 : netlink_unicast        f8/0x1c0 [kernel]
 0xffffffff81603a7f : netlink_sendmsg        31f/0x690 [kernel]
 0xffffffff815a60c6 : sock_sendmsg        b6/0xf0 [kernel]
 0xffffffff815a6651 : SYSC_sendto        121/0x1c0 [kernel]
 0xffffffff815a758e : SyS_sendto        e/0x10 [kernel]
 0xffffffff81712eaa : tracesys        9d/0xc3 [kernel]
 0x7f01a45a7ca3
parms: dev=0xffff88080af00000 newname=0xffff880c0c2efaf8
execname: systemd-udevd
ts: 14, 9
 0x7f01a45a7ca3 [/usr/lib64/libpthread-2.17.so        eca3/0x218000]

http://linux.dell.com/files/biosdevname/
http://linux.dell.com/files/whitepapers/consistent_network_device_naming_in_linux.pdf


# udevadm info --query=property --name /dev/sda
DEVLINKS=/dev/disk/by-id/scsi-36847beb0f962180020e608c514fe9c96 /dev/disk/by-id/wwn-0x6847beb0f962180020e608c514fe9c96 /dev/disk/by-path/pci-0000:03:00.0-scsi-0:2:0:0
DEVNAME=/dev/sda
DEVPATH=/devices/pci0000:00/0000:00:01.0/0000:03:00.0/host0/target0:2:0/0:2:0:0/block/sda
DEVTYPE=disk
ID_BUS=scsi
ID_MODEL=PERC_H330_Mini
ID_MODEL_ENC=PERC\x20H330\x20Mini\x20\x20
ID_PART_TABLE_TYPE=dos
ID_PATH=pci-0000:03:00.0-scsi-0:2:0:0
ID_PATH_TAG=pci-0000_03_00_0-scsi-0_2_0_0
ID_REVISION=4.27
ID_SCSI=1
ID_SCSI_SERIAL=00969cfe14c508e620001862f9b0be47
ID_SERIAL=36847beb0f962180020e608c514fe9c96
ID_SERIAL_SHORT=6847beb0f962180020e608c514fe9c96
ID_TYPE=disk
ID_VENDOR=DELL
ID_VENDOR_ENC=DELL\x20\x20\x20\x20
ID_WWN=0x6847beb0f9621800
ID_WWN_VENDOR_EXTENSION=0x20e608c514fe9c96
ID_WWN_WITH_EXTENSION=0x6847beb0f962180020e608c514fe9c96
MAJOR=8
MINOR=0
SUBSYSTEM=block
TAGS=:systemd:
USEC_INITIALIZED=77440

udevadm info -a --path=/sys/class/net/enp4s0f0

[root@dev-r630-03 devices]# udevadm info /sys/class/net/enp4s0f1
P: /devices/pci0000:00/0000:00:02.0/0000:04:00.1/net/enp4s0f1
E: DEVPATH=/devices/pci0000:00/0000:00:02.0/0000:04:00.1/net/enp4s0f1
E: ID_BUS=pci
E: ID_MM_CANDIDATE=1
E: ID_MODEL_FROM_DATABASE=MT28800 Family [ConnectX-5 Ex]
E: ID_MODEL_ID=0x1019
E: ID_NET_DRIVER=mlx5_core
E: ID_NET_LINK_FILE=/lib/systemd/network/99-default.link
E: ID_NET_NAME=enp4s0f1
E: ID_NET_NAME_MAC=enx248a0788279b
E: ID_NET_NAME_PATH=enp4s0f1
E: ID_OUI_FROM_DATABASE=Mellanox Technologies, Inc.
E: ID_PATH=pci-0000:04:00.1
E: ID_PATH_TAG=pci-0000_04_00_1
E: ID_PCI_CLASS_FROM_DATABASE=Network controller
E: ID_PCI_SUBCLASS_FROM_DATABASE=Ethernet controller
E: ID_VENDOR_FROM_DATABASE=Mellanox Technologies
E: ID_VENDOR_ID=0x15b3
E: IFINDEX=43
E: INTERFACE=enp4s0f1
E: SUBSYSTEM=net
E: SYSTEMD_ALIAS=/sys/subsystem/net/devices/enp4s0f1 /sys/subsystem/net/devices/enp4s0f1
E: TAGS=:systemd:
E: USEC_INITIALIZED=4239194592

[root@dev-r630-03 devices]# udevadm info /sys/class/net/enp4s0f
/sys/class/net/enp4s0f0np0    /sys/class/net/enp4s0f0np0_0  /sys/class/net/enp4s0f0np0_1  /sys/class/net/enp4s0f0np0_2  /sys/class/net/enp4s0f1
[root@dev-r630-03 devices]# udevadm info /sys/class/net/enp4s0f0np0
P: /devices/pci0000:00/0000:00:02.0/0000:04:00.0/net/enp4s0f0np0
E: DEVPATH=/devices/pci0000:00/0000:00:02.0/0000:04:00.0/net/enp4s0f0np0
E: ID_BUS=pci
E: ID_MM_CANDIDATE=1
E: ID_MODEL_FROM_DATABASE=MT28800 Family [ConnectX-5 Ex]
E: ID_MODEL_ID=0x1019
E: ID_NET_DRIVER=mlx5e_rep
E: ID_NET_LINK_FILE=/lib/systemd/network/99-default.link
E: ID_NET_NAME=enp4s0f0np0
E: ID_NET_NAME_MAC=enx248a0788279a
E: ID_NET_NAME_PATH=enp4s0f0np0
E: ID_OUI_FROM_DATABASE=Mellanox Technologies, Inc.
E: ID_PATH=pci-0000:04:00.0
E: ID_PATH_TAG=pci-0000_04_00_0
E: ID_PCI_CLASS_FROM_DATABASE=Network controller
E: ID_PCI_SUBCLASS_FROM_DATABASE=Ethernet controller
E: ID_VENDOR_FROM_DATABASE=Mellanox Technologies
E: ID_VENDOR_ID=0x15b3
E: IFINDEX=74
E: INTERFACE=enp4s0f0np0
E: NAME=enp4s0f0np0
E: SUBSYSTEM=net
E: SYSTEMD_ALIAS=/sys/subsystem/net/devices/enp4s0f0np0 /sys/subsystem/net/devices/enp4s0f0np0
E: TAGS=:systemd:
E: USEC_INITIALIZED=5852898643

===block===

fl_change
fl_hw_replace_filter
tc_setup_cb_call
tcf_block_cb_call


mlx5e_rep_setup_tc_cb_egdev
mlx5e_rep_setup_tc_cb


mlx5e_rep_setup_tc_cb_egdev
rep->rep_if[rep_type].load(esw->dev, rep); -> mlx5e_vport_rep_load
esw_offloads_load_reps_type
esw_offloads_load_reps
[170553.596281]  esw_offloads_init        444/0x730 [mlx5_core]
[170553.597416]  mlx5_eswitch_enable_sriov        b5/0x910 [mlx5_core]
[170553.598556]  ? tree_put_node        64/0x90 [mlx5_core]
[170553.599706]  ? tree_remove_node        12/0x30 [mlx5_core]
[170553.600860]  ? mlx5_destroy_flow_table        85/0x2d0 [mlx5_core]
[170553.602021]  ? tree_put_node        64/0x90 [mlx5_core]
[170553.603184]  mlx5_devlink_eswitch_mode_set        72/0x1d0 [mlx5_core]
[170553.604139] IPv6: ADDRCONF(NETDEV_UP): enp4s0f0_0: link is not ready
[170553.604371]  devlink_nl_cmd_eswitch_set_doit        46/0xb0 [devlink]
[170553.606164] IPv6: ADDRCONF(NETDEV_CHANGE): enp4s0f0_0: link becomes ready
[170553.607272]  genl_family_rcv_msg        1e4/0x390
[170553.607277]  genl_rcv_msg        47/0x90
[170553.607282]  ? genl_family_rcv_msg        390/0x390
[170553.610948] enp4s0f0_1: renamed from eth0
[170553.611594]  netlink_rcv_skb        4d/0x130
[170553.611597]  genl_rcv        24/0x40
[170553.611600]  netlink_unicast        196/0x230
[170553.611605]  netlink_sendmsg        2ae/0x3a0
[170553.619277]  sock_sendmsg        36/0x40
[170553.620300]  __sys_sendto        10e/0x140
[170553.621297]  ? __sys_recvmsg        5b/0xa0
[170553.622263]  ? __sys_recvmsg        5b/0xa0
[170553.623204]  __x64_sys_sendto        24/0x30
[170553.624112]  do_syscall_64        5b/0x180
[170553.624989]  entry_SYSCALL_64_after_hwframe        44/0xa9


 0xffffffffa02bed90 : mlx5e_configure_flower          0/0xfa0 [mlx5_core]
 0xffffffff81681d8b : tc_setup_cb_call          6b/0x160 [kernel]
 0xffffffffa0d2d8c6 : fl_change          1186/0x0 [cls_flower]
 0xffffffff816843c5 : tc_new_tfilter          395/0x680 [kernel]
 0xffffffff81658386 : rtnetlink_rcv_msg          136/0x330 [kernel]
 0xffffffff8168c61d : netlink_rcv_skb          4d/0x130 [kernel]
 0xffffffff8168beb6 : netlink_unicast          196/0x230 [kernel]
 0xffffffff8168c1fe : netlink_sendmsg          2ae/0x3a0 [kernel]
 0xffffffff81622aa6 : sock_sendmsg          36/0x40 [kernel]
 0xffffffff8162305f : ___sys_sendmsg          26f/0x2d0 [kernel]
 0xffffffff816243ae : __sys_sendmsg          5e/0xa0 [kernel] (inexact)
 0xffffffff8100422b : do_syscall_64          5b/0x180 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe          44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: priv=0xffff880fcbd40880 f=0xffffc900017476f8 flags=0x1
execname: handler18
ts: 10, 4
 0x7f6a6e63fee4 : sendmsg          54/0xb0 [/usr/lib64/libpthread-2.26.so]
 0x537991 : nl_sock_transact_multiple__          121/0x490 [/usr/sbin/ovs-vswitchd]
 0x537dbc : nl_sock_transact_multiple.part.8          bc/0x1a0 [/usr/sbin/ovs-vswitchd]
 0x537ee1 : nl_sock_transact          41/0xc0 [/usr/sbin/ovs-vswitchd]
 0x538da0 : nl_transact          40/0x60 [/usr/sbin/ovs-vswitchd]
 0x53b9e5 : tc_replace_flower          375/0xef0 [/usr/sbin/ovs-vswitchd]
 0x534e2c : netdev_tc_flow_put          d4c/0x1650 [/usr/sbin/ovs-vswitchd]
 0x527031 : dpif_netlink_operate 
 0x476428 : dpif_operate          a8/0x260 [/usr/sbin/ovs-vswitchd]
 0x43d591 : recv_upcalls          6f1/0x870 [/usr/sbin/ovs-vswitchd]
 0x43d752 : udpif_upcall_handler          42/0x70 [/usr/sbin/ovs-vswitchd]
 0x4e9f8d : ovsthread_wrapper          5d/0x70 [/usr/sbin/ovs-vswitchd]
 0x7f6a6e63550b : start_thread          db/0x3c0 [/usr/lib64/libpthread-2.26.so]
 0x7f6a6de1a16f : clone          3f/0x60 [/usr/lib64/libc-2.26.so]

mlx5e_rep_setup_tc_cb

 0xffffffffa02b8ee0 : mlx5e_rep_setup_tc_cls_flower          0/0x30 [mlx5_core]
 0xffffffff81681d8b : tc_setup_cb_call          6b/0x160 [kernel]
 0xffffffffa0d2d8c6 : fl_change          1186/0x0 [cls_flower]
 0xffffffff816843c5 : tc_new_tfilter          395/0x680 [kernel]
 0xffffffff81658386 : rtnetlink_rcv_msg          136/0x330 [kernel]
 0xffffffff8168c61d : netlink_rcv_skb          4d/0x130 [kernel]
 0xffffffff8168beb6 : netlink_unicast          196/0x230 [kernel]
 0xffffffff8168c1fe : netlink_sendmsg          2ae/0x3a0 [kernel]
 0xffffffff81622aa6 : sock_sendmsg          36/0x40 [kernel]
 0xffffffff8162305f : ___sys_sendmsg          26f/0x2d0 [kernel]
 0xffffffff816243ae : __sys_sendmsg          5e/0xa0 [kernel] (inexact)
 0xffffffff8100422b : do_syscall_64          5b/0x180 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe          44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: priv=0xffff880fcbd40880 cls_flower=0xffffc900017776f8 flags=0x1
execname: handler20
ts: 1, 1
 0x7f6a6e63fee4 : sendmsg          54/0xb0 [/usr/lib64/libpthread-2.26.so]
 0x537991 : nl_sock_transact_multiple__          121/0x490 [/usr/sbin/ovs-vswitchd]
 0x537dbc : nl_sock_transact_multiple.part.8          bc/0x1a0 [/usr/sbin/ovs-vswitchd]
 0x537ee1 : nl_sock_transact          41/0xc0 [/usr/sbin/ovs-vswitchd]
 0x538da0 : nl_transact          40/0x60 [/usr/sbin/ovs-vswitchd]
 0x53b9e5 : tc_replace_flower          375/0xef0 [/usr/sbin/ovs-vswitchd]
 0x534e2c : netdev_tc_flow_put          d4c/0x1650 [/usr/sbin/ovs-vswitchd]
 0x527031 : dpif_netlink_operate.part.35          221/0x520 [/usr/sbin/ovs-vswitchd]
 0x476428 : dpif_operate          a8/0x260 [/usr/sbin/ovs-vswitchd]
 0x43d591 : recv_upcalls.isra.24          6f1/0x870 [/usr/sbin/ovs-vswitchd]
 0x43d752 : udpif_upcall_handler          42/0x70 [/usr/sbin/ovs-vswitchd]
 0x4e9f8d : ovsthread_wrapper          5d/0x70 [/usr/sbin/ovs-vswitchd]
 0x7f6a6e63550b : start_thread          db/0x3c0 [/usr/lib64/libpthread-2.26.so]
 0x7f6a6de1a16f : clone          3f/0x60 [/usr/lib64/libc-2.26.so]

 0xffffffffa02b91e0 : mlx5e_rep_setup_tc         0/0x60 [mlx5_core]
 0xffffffff81682560 : tcf_block_get_ext         260/0x410 [kernel]
 0xffffffff816809ab : qdisc_create         1ab/0x4c0 [kernel]
 0xffffffff81680e72 : tc_modify_qdisc         1b2/0x770 [kernel]
 0xffffffff81658386 : rtnetlink_rcv_msg         136/0x330 [kernel]
 0xffffffff8168c61d : netlink_rcv_skb         4d/0x130 [kernel]
 0xffffffff8168beb6 : netlink_unicast         196/0x230 [kernel]
 0xffffffff8168c1fe : netlink_sendmsg         2ae/0x3a0 [kernel]
 0xffffffff81622aa6 : sock_sendmsg         36/0x40 [kernel]
 0xffffffff8162305f : ___sys_sendmsg         26f/0x2d0 [kernel]
 0xffffffff816243ae : __sys_sendmsg         5e/0xa0 [kernel] (inexact)
 0xffffffff8100422b : do_syscall_64         5b/0x180 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe         44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: dev=0xffff881002f40000 type=0x5 type_data=0xffffc900015a79d8
execname: ovs-vswitchd
ts: 7, 3
 0x7f6a6e63fee4 : sendmsg         54/0xb0 [/usr/lib64/libpthread-2.26.so]
 0x537991 : nl_sock_transact_multiple__         121/0x490 [/usr/sbin/ovs-vswitchd]
 0x537dbc : nl_sock_transact_multiple.part.8         bc/0x1a0 [/usr/sbin/ovs-vswitchd]
 0x537f52 : nl_sock_transact         b2/0xc0 [/usr/sbin/ovs-vswitchd]
 0x538da0 : nl_transact         40/0x60 [/usr/sbin/ovs-vswitchd]
 0x53b21c : tc_add_del_ingress_qdisc         6c/0xc0 [/usr/sbin/ovs-vswitchd]
 0x535ab7 : netdev_tc_init_flow_api         47/0x1e0 [/usr/sbin/ovs-vswitchd]
 0x498019 : netdev_ports_insert         1e9/0x240 [/usr/sbin/ovs-vswitchd]
 0x474e8b : dpif_port_add         db/0x160 [/usr/sbin/ovs-vswitchd]
 0x4288aa : port_add         6a/0x140 [/usr/sbin/ovs-vswitchd]
 0x41bebe : ofproto_port_add         2e/0x110 [/usr/sbin/ovs-vswitchd]
 0x40a005 : bridge_add_ports__         395/0x870 [/usr/sbin/ovs-vswitchd]
 0x40be84 : bridge_reconfigure         384/0x32c0 [/usr/sbin/ovs-vswitchd]
 0x40fbc9 : bridge_run         229/0x1930 [/usr/sbin/ovs-vswitchd]
 0x4069d5 : main         2d5/0x490 [/usr/sbin/ovs-vswitchd]
 0x7f6a6dd45f2a : __libc_start_main         ea/0x1c0 [/usr/lib64/libc-2.26.so]
 0x40791a : _start         2a/0x30 [/usr/sbin/ovs-vswitchd]

===udp===

commit 5c3c6081b246b05ee5bb2fc1759a7c0c6a0b7c3b
Merge: 6093ec2dc313 d9d30adf5677
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Jul 17 09:53:05 2017 -0700

    Merge branch 'net-ufo-remove'

    David S. Miller says:

    ====================
    net: Remove UDP Fragmentation Offload support

    This is a patch series, based upon some discussions with various
    developers, that removes UFO offloading.

    Very few devices support this operation, it's usefullness is
    quesitonable at best, and it adds a non-trivial amount of
    complexity to our data paths.

    v2: Delete more code thanks to feedback from Willem.
    ====================

    Signed-off-by: David S. Miller <davem@davemloft.net>

===netfilter===

modprobe br_netfilter
br_nf_forward_ip

br_handle_frame
netdev_frame_hook

static const struct nf_hook_ops br_nf_ops[] = {

===simx===

yum install virt-manager libvirt libvirt-python libvirt-python python-virtinst
/mswg/release/simx/latest/install.sh
rpm -ql simx-qenu
/opt/simx/bin/manage_virt_manager_device_support.py add
/opt/simx/bin/manage_vm_simx_support.py -n vm1

[root@dev-r630-04 simx]# ./install.sh

[*] Printing build information

simx-qemu-4.5-3836

Package:       simx-qemu-4.5-3836.el7.x86_64.rpm
Time:          20200205-180019
GIT URL:       /mswg/git/simx.git
GIT branch:    master
GIT commit:    23f97bc7dcfe7bebfa8b1e6261d1650a3f175b0a
Lib version:   e962ba8ad6ea0733e6aa68be62fe2bb200751111

===perf===

perf stat -e cycles:k,instructions:k -B --cpu=0-15 sleep 2

===outlook===

Click the File tab.
Click Options.
In the left pane, click Mail.
In the right pane, under Replies and forwards, check the Preface comments with box, and type the text you want to use to identify your comments. 

===asm===

 %rdi, %rsi, %rdx, %rcx, %r8 and %r9 are the 

===kdb===

rd

===tmux===

ctl + H/L to resize the page

https://github.com/drmad/tmux-git

tmux show-buffer
tmux save-buffer foo.txt

tmux list-buffers
tmux show-buffer -b n
tmux save-buffer -b n foo.txt

c-a shift+space:  adjust pane v to h or h to v.

Prefix + # will list all the paste buffers. Prefix + = will let you select which paste buffer to use.

ConEmu:

win+alt+p configuration

c-w o close all other vim windows

===kernel===

/proc/config.gz

===rcu===

rcu_gp_kthread
	swait_event_interruptible

RCU_SOFTIRQ

rcu_process_callbacks

rcu_init(void)
	open_softirq(RCU_SOFTIRQ, rcu_process_callbacks);

crash> rcu_sched_data
PER-CPU DATA TYPE:
  struct rcu_data rcu_sched_data;
PER-CPU ADDRESSES:
  [0]: ffff8807fe01c7c0
  [1]: ffff8807fe05c7c0
  [2]: ffff8807fe09c7c0
  [3]: ffff8807fe0dc7c0
  [4]: ffff8807fe11c7c0
  [5]: ffff8807fe15c7c0
  [6]: ffff8807fe19c7c0
  [7]: ffff8807fe1dc7c0
crash> rcu_preempt_data
PER-CPU DATA TYPE:
  struct rcu_data rcu_preempt_data;
PER-CPU ADDRESSES:
  [0]: ffff8807fe01c4c0
  [1]: ffff8807fe05c4c0
  [2]: ffff8807fe09c4c0
  [3]: ffff8807fe0dc4c0
  [4]: ffff8807fe11c4c0
  [5]: ffff8807fe15c4c0
  [6]: ffff8807fe19c4c0
  [7]: ffff8807fe1dc4c0

crash> rcu_data.completed,gpnum rcu_preempt_data:a
[0]: ffff8807fe01c4c0
  completed = 0x1a94eb
  gpnum = 0x1a94eb
[1]: ffff8807fe05c4c0
  completed = 0x1a94eb
  gpnum = 0x1a94eb
[2]: ffff8807fe09c4c0
  completed = 0x1a94eb
  gpnum = 0x1a94eb
[3]: ffff8807fe0dc4c0
  completed = 0x1a94ed
  gpnum = 0x1a94ed
[4]: ffff8807fe11c4c0
  completed = 0x1a94ed
  gpnum = 0x1a94ed
[5]: ffff8807fe15c4c0
  completed = 0x1a94ed
  gpnum = 0x1a94ed
[6]: ffff8807fe19c4c0
  completed = 0x1a94ea
  gpnum = 0x1a94eb
[7]: ffff8807fe1dc4c0
  completed = 0x1a94ed
  gpnum = 0x1a94ed

crash> rcu_data.cpu rcu_preempt_data:a
[0]: ffff8807fe01c4c0
  cpu = 0x0
[1]: ffff8807fe05c4c0
  cpu = 0x1
[2]: ffff8807fe09c4c0
  cpu = 0x2
[3]: ffff8807fe0dc4c0
  cpu = 0x3
[4]: ffff8807fe11c4c0
  cpu = 0x4
[5]: ffff8807fe15c4c0
  cpu = 0x5
[6]: ffff8807fe19c4c0
  cpu = 0x6
[7]: ffff8807fe1dc4c0
  cpu = 0x7

rcu_init_one
rcu_process_callbacks

/* synchronize_rcu - wait until a grace period has elapsed. */
synchronize_rcu

https://www.slideshare.net/vh21/yet-another-introduction-of-linux-rcu
http://www.rdrop.com/~paulmck/RCU/

Hierarchical RCU
https://lwn.net/Articles/305782/


list -H rcu_struct_flavors -o rcu_state.flavors -s rcu_state.gpnum

/* Values for rcu_state structure's gp_state field. */
#define RCU_GP_IDLE      0      /* Initial state and no GP in progress. */
#define RCU_GP_WAIT_GPS  1      /* Wait for grace-period start. */
#define RCU_GP_DONE_GPS  2      /* Wait done for grace-period start. */
#define RCU_GP_WAIT_FQS  3      /* Wait for force-quiescent-state time. */
#define RCU_GP_DOING_FQS 4      /* Wait done for force-quiescent-state time. */
#define RCU_GP_CLEANUP   5      /* Grace-period cleanup started. */
#define RCU_GP_CLEANED   6      /* Grace-period cleanup complete. */

rcu_gp_kthread_wake wakes up the following kthread

/* Body of kthread that handles grace periods. */
rcu_gp_kthread

__call_rcu_core
__note_gp_changes

p rcu_state_p
rcu_state.rda 0xffffffff81c49080
rcu_data 0x1c3c0:a
rcu_data 0x1c3c0:a | grep completed

p rcu_state_p
$5 = (struct rcu_state * const) 0xffffffff81c48140 <rcu_sched_state>

struct rcu_state  0xffffffff81c48140

output *(struct rcu_state *)rcu_state_p

p rcu_num_nodes
p rcu_num_lvls

list -l rcu_state.flavors  -H rcu_struct_flavors -s rcu_state

p rcu_preempt_data
p rcu_sched_data
p rcu_bh_data

p rcu_preempt_data:all
p rcu_preempt_data:all | grep -w completed

list -H rcu_struct_flavors
ffffffff81c49c70
ffffffff81c4b530
ffffffff81c4a8f0
crash> sym ffffffff81c49c70
ffffffff81c49c70 (D) rcu_preempt_state                    bf0
crash> sym ffffffff81c4b530
ffffffff81c4b530 (D) rcu_sched_state                    bf0
crash> sym ffffffff81c4a8f0
ffffffff81c4a8f0 (D) rcu_bh_state                    bf0

http://linuxgazette.net/133/saha.html

task_struct.tasks init_task -o
list -l task_struct.tasks  -H ffffffff81c10870 -s task_struct
list -l task_struct.tasks  -H ffffffff81c10870 -s task_struct.cpu

__call_rcu

===icmpv6===

 0xffffffff81743f0d : icmpv6_echo_reply              1cd/0x440 [kernel]
 0xffffffff817447ca : icmpv6_rcv              46a/0x550 [kernel]
 0xffffffff8171e00c : ip6_input_finish              cc/0x4d0 [kernel]
 0xffffffff8171e451 : ip6_input              41/0xd0 [kernel]
 0xffffffff8171de36 : ip6_rcv_finish              46/0xb0 [kernel]
 0xffffffff8171e8c2 : ipv6_rcv              3e2/0x630 [kernel]
 0xffffffff816480a6 : __netif_receive_skb_core              3f6/0xb90 [kernel]

===ipv6===

 0xffffffff815d9080 : ip6_fragment              0/0xb00 [kernel]
 0xffffffff815d9c58 : ip6_finish_output              d8/0xf0 [kernel]
 0xffffffff815d9cc7 : ip6_output              57/0x100 [kernel]
 0xffffffff8161110d : ip6_local_out_sk              2d/0x40 [kernel]
 0xffffffff81611135 : ip6_local_out              15/0x20 [kernel]
 0xffffffff815da1bd : ip6_send_skb              1d/0x70 [kernel]
 0xffffffff815da249 : ip6_push_pending_frames              39/0x40 [kernel]
 0xffffffff815f6dd3 : rawv6_sendmsg              823/0x950 [kernel]
 0xffffffff815a0f44 : inet_sendmsg              64/0xb0 [kernel]
 0xffffffff81510d10 : sock_sendmsg              b0/0xf0 [kernel]
 0xffffffff81511281 : SYSC_sendto              121/0x1c0 [kernel]
 0xffffffff81511d0e : SyS_sendto              e/0x10 [kernel]
 0xffffffff81645b12 : tracesys              dd/0xe2 [kernel]
 0x7fc3e50ae2e3
parms: sk=0xffff8807e9613f00 skb=0xffff881050d9a300 output=0xffffffff815d75d0
execname: ping6

 0xffffffffa07727e0 : br_nf_dev_queue_xmit              0/0xa0 [bridge]
 0xffffffffa0772a81 : br_nf_post_routing              201/0x3a0 [bridge]
 0xffffffff8155c750 : nf_iterate              70/0xb0 [kernel]
 0xffffffff8155c838 : nf_hook_slow              a8/0x110 [kernel]
 0xffffffffa076ab16 : br_forward_finish              96/0xb0 [bridge]
 0xffffffffa0772cf9 : br_nf_forward_finish              d9/0x1f0 [bridge]
 0xffffffffa0773063 : br_nf_forward_ip              253/0x410 [bridge]
 0xffffffff8155c750 : nf_iterate              70/0xb0 [kernel]
 0xffffffff8155c838 : nf_hook_slow              a8/0x110 [kernel]
 0xffffffffa076ac1e : __br_forward              ee/0x130 [bridge]
 0xffffffffa076b00b : br_forward              8b/0xa0 [bridge]
 0xffffffffa076bfa5 : br_handle_frame_finish              175/0x420 [bridge]
 0xffffffffa0773575 : br_nf_pre_routing_finish_ipv6              e5/0x1b0 [bridge]
 0xffffffffa0774025 : br_nf_pre_routing              5d5/0x730 [bridge]
 0xffffffff8155c750 : nf_iterate              70/0xb0 [kernel]
 0xffffffff8155c838 : nf_hook_slow              a8/0x110 [kernel]
 0xffffffffa076c45a : br_handle_frame              20a/0x2d0 [bridge]
 0xffffffff8152a4e2 : __netif_receive_skb_core              1e2/0x7d0 [kernel]
 0xffffffff8152aae8 : __netif_receive_skb              18/0x60 [kernel]
 0xffffffff8152ab70 : netif_receive_skb              40/0xc0 [kernel]
parms: sk=0x0 skb=0xffff8807d7405c00

br_nf_pre_routing_ipv6

 0xffffffff815e7250 : ip6_route_input              0/0xd0 [kernel]
 0xffffffff815da4c3 : ip6_rcv_finish              93/0xb0 [kernel]
 0xffffffff815dac91 : ipv6_rcv              301/0x540 [kernel]
 0xffffffff8152a882 : __netif_receive_skb_core              582/0x7d0 [kernel]
 0xffffffff8152aae8 : __netif_receive_skb              18/0x60 [kernel]
 0xffffffff8152ab70 : netif_receive_skb              40/0xc0 [kernel]
 0xffffffff8152b6e0 : napi_gro_receive              80/0xb0 [kernel]
 0xffffffffa06f5bba : mlx5e_handle_rx_cqe_mpwrq              58a/0x900 [mlx5_core]
 0xffffffffa06f5fe0 : mlx5e_poll_rx_cq              b0/0x8e0 [mlx5_core]
 0xffffffffa06f7461 : mlx5e_napi_poll              d1/0x470 [mlx5_core]
 0xffffffff8152afa2 : net_rx_action              152/0x240 [kernel]
 0xffffffff81084b0f : __do_softirq              ef/0x280 [kernel]
 0xffffffff8164721c : call_softirq              1c/0x30 [kernel]
 0xffffffff81016fc5 : do_softirq              65/0xa0 [kernel]
 0xffffffff81084ea5 : irq_exit              115/0x120 [kernel]
 0xffffffff81647db8 : do_IRQ              58/0xf0 [kernel]
 0xffffffff8163d0ed : ret_from_intr              0/0x15 [kernel]
parms: skb=0xffff8807dc64ee00
execname: swapper/2
ts: 14
<no user backtrace at kernel.function("ip6_route_input@net/ipv6/route.c:988")>

===gdb===

p *array@len

(gdb) disassemble /m
Dump of assembler code for function mlx5e_xmit:
439     {
=> 0xffffffffc0275b10 <+0>:     nopl   0x0(%rax,%rax,1)
   0xffffffffc0275bb2 <+162>:   push   %rbp
   0xffffffffc0275bb3 <+163>:   mov    %rdi,%rsi
   0xffffffffc0275bbc <+172>:   mov    %rsp,%rbp

440             struct mlx5e_priv *priv = netdev_priv(dev);
441             struct mlx5e_tx_wqe *wqe;
442             struct mlx5e_txqsq *sq;
443             u16 pi;
444
445             sq = priv->txq2sq[skb_get_queue_mapping(skb)];
   0xffffffffc0275b15 <+5>:     movzwl 0x8c(%rdi),%eax
   0xffffffffc0275b1c <+12>:    mov    0x8c0(%rsi,%rax,8),%rax

446             mlx5e_sq_fetch_wqe(sq, &wqe, &pi);
447
448             /* might send skbs and update wqe and pi */
449             skb = mlx5e_accel_handle_tx(skb, sq, dev, &wqe, &pi);
450             if (unlikely(!skb))
   0xffffffffc0275bad <+157>:   test   %rdi,%rdi
   0xffffffffc0275bb0 <+160>:   je     0xffffffffc0275bdf <mlx5e_xmit+207>
   0xffffffffc0275bd4 <+196>:   test   %rdi,%rdi
   0xffffffffc0275bdd <+205>:   jne    0xffffffffc0275bb2 <mlx5e_xmit+162>

451                     return NETDEV_TX_OK;
   0xffffffffc0275bdf <+207>:   xor    %eax,%eax

452
453             return mlx5e_sq_xmit(sq, skb, wqe, pi);
   0xffffffffc0275bb6 <+166>:   mov    %r9d,%ecx
   0xffffffffc0275bb9 <+169>:   mov    %rax,%rdi
   0xffffffffc0275bbf <+175>:   callq  0xffffffffc0275050 <mlx5e_sq_xmit>

454     }
   0xffffffffc0275bc4 <+180>:   pop    %rbp
   0xffffffffc0275bc5 <+181>:   retq
   0xffffffffc0275be1 <+209>:   retq
   0xffffffffc0275be2:  nopl   0x0(%rax)
   0xffffffffc0275be6:  nopw   %cs:0x0(%rax,%rax,1)

End of assembler dump.

#0  mlx5e_xmit (skb=0xffff88105638d600, dev=0xffff881055900000) at drivers/net/ethernet/mellanox/mlx5/core/en_tx.c:439
#1  0xffffffff816af0e8 in __netdev_start_xmit (more=<optimized out>, dev=<optimized out>, skb=<optimized out>, ops=<optimized out>) at ./include/linux/netdevice.h:4376
(More stack frames follow...)
(gdb) disassemble 0xffffffff816af0e8

no arg, disassemble current code
(gdb) disassemble

(gdb) bt 1
#0  mlx5e_xmit (skb=0xffff88105638d600, dev=0xffff881055900000) at drivers/net/ethernet/mellanox/mlx5/core/en_tx.c:439
# edit file
edit mlx5e_xmit
or
edit 439

To display the backtrace for several or all of the threads
(gdb) thread apply all bt

Print only the innermost n frames
bt 2

Print only the outermost n frames
bt -2

Print the values of the local variables
bt full

bt full 2

(gdb) tbreak
temporary break

info program
info regsiters

(gdb) info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0xffffffffc027dc00 in mlx5e_handle_rx_cqe_mpwrq at drivers/net/ethernet/mellanox/mlx5/core/en_rx.c:1200
        breakpoint already hit 1 time
(gdb) d 1

(gdb) x/16xh 0xffff88875d92e040
0xffff88875d92e040:     0xffff  0xffff  0xffff  0x2502  0x14d0  0x0201  0xa888  0xe803
0xffff88875d92e050:     0x0608  0x0100  0x0008  0x0406  0x0100  0x2502  0x14d0  0x0201

x 是 examine 的缩写

n表示要显示的内存单元的个数

f表示显示方式, 可取如下值
x 按十六进制格式显示变量。
d 按十进制格式显示变量。
u 按十进制格式显示无符号整型。
o 按八进制格式显示变量。
t 按二进制格式显示变量。
a 按十六进制格式显示变量。
i 指令地址格式
c 按字符格式显示变量。
f 按浮点数格式显示变量。

u表示一个地址单元的长度
b表示单字节，
h表示双字节，
w表示四字节，
g表示八字节

generate-core-file [file]
gcore [file]

# don't print address of a string
set print addr off
# print long string
set print elements 0
# get rid of '<repeats n times>'
set print repeats unlimited

set print pretty on

info threads
thread 10

https://sourceware.org/gdb/wiki/FAQ

set height 0
b find_match_wc
print/x *flow

ptype struct shash_node

explore all_ofproto_dpifs

===chrome===

chrome://settings/content

===core===

https://sigquit.wordpress.com/2009/03/13/the-core-pattern/

mkdir -p /tmp/cores
chmod a+rwx /tmp/cores
echo "/tmp/cores/core.%e.%p.%h.%t" > /proc/sys/kernel/core_pattern

coredumpctl list

ulimit -c unlimited
echo "core" > /proc/sys/kernel/core_pattern

gcc -o main -g a.c
gdb main /tmp/core-main-10815 

===idr===

#define __GFP_BITS_SHIFT 26
#define ROOT_IS_IDR     ((__force gfp_t)(1 << __GFP_BITS_SHIFT))

idr_get_next

===rtnl===

rtnetlink_rcv_msg
{
	RTNL_FLAG_DOIT_UNLOCKED
}

/* control path */
static void rtnetlink_rcv (struct sk_buff *skb)
{
        rtnl_lock();
        netlink_rcv_skb(skb, &rtnetlink_rcv_msg);
        rtnl_unlock();
}

/* fast path */
netif_receive_skb_internal(struct sk_buff *skb)
{
	rcu_read_lock();
	ret = __netif_receive_skb(skb);
	rcu_read_unlock();
}

rtnetlink_init
rtnl_msg_handlers

rtnetlink_rcv_msg

crash> rtnl_link ffff880c88496ab8
struct rtnl_link {
  doit = 0xffffffff8163b320 <tc_ctl_tfilter>,
  dumpit = 0x0,
  calcit = 0x0
}

===olddefconfig===

CONFIG_LOCALVERSION_AUTO

CONFIG_PANIC_ON_OOPS

# systemtap
MODVERSION
UPROBE

# tc
CLS_FLOWER

# crash
STRICT_DEVMEM

CONFIG_NET_CLS=y
CONFIG_NET_CLS_ACT=y

CONFIG_NET_CLS_FLOWER=m

CONFIG_NET_ACT_MIRRED=m
CONFIG_NET_ACT_TUNNEL_KEY=m
CONFIG_NET_ACT_PEDIT=m
CONFIG_NET_ACT_GACT=m
CONFIG_NET_ACT_CSUM=m
CONFIG_NET_ACT_VLAN=m
CONFIG_NET_ACT_SKBEDIT=m

CONFIG_VXLAN=m

CONFIG_OPENVSWITCH=m
CONFIG_OPENVSWITCH_VXLAN=m

===gcc===

yum install libmpc-devel mpfr-devel gmp-devel
yum install zlib-devel*
wget ftp://ftp.gnu.org/pub/gnu/gcc/gcc-5.4.0/gcc-5.4.0.tar.bz2
./contrib/download_prerequisites
http://en.librehat.com/blog/build-gcc-5-dot-2-on-rhel-6/

mkdir gcc-build
cd gcc-build
../configure --prefix=/usr/local	\
             --disable-multilib		\
             --enable-languages=c,c++	\
             --enable-libstdcxx-threads	\
             --enable-libstdcxx-time	\
             --enable-shared		\
             --enable-__cxa_atexit	\
             --disable-libunwind-exceptions	\
             --disable-libada			\
             --host x86_64-redhat-linux-gnu	\
             --build x86_64-redhat-linux-gnu	\
             --with-default-libstdcxx-abi=gcc4-compatible


===switchdev===

Use "depends NET_SWITCHDEV" in driver's Kconfig to ensure switchdev model
support is built for driver.

https://www.kernel.org/doc/Documentation/networking/switchdev.txt

===yum===

yum provides ifconfig
yum whatprovides ifconfig
yum install net-tools

===selinux===

/etc/sysconfig/selinux

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=disabled
# SELINUXTYPE= can take one of three two values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted

setenforce 0
# getenforce
Permissive
service openvswitch restart

===netns===

struct task_struct {
        /* Namespaces: */
        struct nsproxy                  *nsproxy;

crash>  nsproxy init_nsproxy
struct nsproxy {
  count = {
    counter = 0x1f9
  },
  uts_ns = 0xffffffff81c102a0 <init_uts_ns>,
  ipc_ns = 0xffffffff81cc2da0 <init_ipc_ns>,
  mnt_ns = 0xffff88017fc2e700,
  pid_ns_for_children = 0xffffffff81c581e0 <init_pid_ns>,
  net_ns = 0xffffffff81d1ba80 <init_net>,
  cgroup_ns = 0xffffffff81c8e8e0 <init_cgroup_ns>
}

struct net.dev_base_head init_net -o
list net_device.dev_list  -H ffffffff81d24d58 -s net_device.name

===workqueue===

workqueue_struct.pwqs
pool_workqueue.pool
worker_pool.worker


[22] p tc_filter_wq
[24] workqueue_struct.pwqs 0xffff9a289b323a00 -o
[26] list -H ffff9a289b323a00 -s pool_workqueue.pool -l pool_workqueue.pwqs_node
[28] worker_pool 0xffff9a289f500000 -o
[29] list -H ffff9a289f5002a0
[30] list -H ffff9a289f5002a0 -s worker -l worker.node
[31] list -H ffff9a289f5002a0 -s worker.id -l worker.node
[32] list -H ffff9a289f5002a0 -s worker.desc -l worker.node


st queue_delayed_work_on

crash> delayed_work  0xffff880236927b00
struct delayed_work {
  work = {
    data = {
      counter = 0x1
    },
    entry = {
      next = 0xffff880236927b08,
      prev = 0xffff880236927b08
    },
    func = 0xffffffffa020cad0 <mlx5e_vport_update_handler>
  },
  timer = {
    entry = {
      next = 0x0,
      pprev = 0xffff88023fc125f0
    },
    expires = 0x1060f17e8,
    function = 0xffffffff810a7850 <delayed_work_timer_fn>,
    data = 0xffff880236927b00,
    flags = 0x28200000
  },
  wq = 0xffff88017fc06400,
  cpu = 0x2000
}

struct workqueue_struct *system_wq __read_mostly;	cpu_pwqs
	struct pool_workqueue	per CPU			pool
		struct worker_pool			worklist

crash> system_wq
system_wq = $2 = (struct workqueue_struct *) 0xffff88017fc08400
crash> workqueue_struct.cpu_pwqs 0xffff88017fc08400
  cpu_pwqs = 0x1ea00
crash> pool_workqueue.pool 0x1ea00:a
[0]: ffff88066781ea00
  pool = 0xffff88066781aac0
[1]: ffff880c6701ea00
  pool = 0xffff880c6701aac0
[2]: ffff88066785ea00
  pool = 0xffff88066785aac0
[3]: ffff880c6705ea00
  pool = 0xffff880c6705aac0
[4]: ffff88066789ea00
  pool = 0xffff88066789aac0
[5]: ffff880c6709ea00
  pool = 0xffff880c6709aac0
[6]: ffff8806678dea00
  pool = 0xffff8806678daac0
[7]: ffff880c670dea00
  pool = 0xffff880c670daac0
[8]: ffff88066791ea00
  pool = 0xffff88066791aac0
[9]: ffff880c6711ea00
  pool = 0xffff880c6711aac0
[10]: ffff88066795ea00
  pool = 0xffff88066795aac0
[11]: ffff880c6715ea00
  pool = 0xffff880c6715aac0
[12]: ffff88066799ea00
  pool = 0xffff88066799aac0
[13]: ffff880c6719ea00
  pool = 0xffff880c6719aac0
[14]: ffff8806679dea00
  pool = 0xffff8806679daac0
[15]: ffff880c671dea00
  pool = 0xffff880c671daac0

INIT_DELAYED_WORK
__INIT_DELAYED_WORK

schedule_delayed_work
queue_delayed_work
queue_delayed_work_on
__queue_delayed_work
__queue_work
	struct worker_pool
		worklist

===vm===

virsh net-destroy  default
virsh net-undefine default

https://www.cyberciti.biz/faq/linux-kvm-libvirt-dnsmasq-dhcp-static-ip-address-configuration-for-guest-os/

  <cputune>
    <vcpupin vcpu='0' cpuset='0'/>
    <vcpupin vcpu='1' cpuset='1'/>
    <vcpupin vcpu='2' cpuset='2'/>
    <vcpupin vcpu='3' cpuset='3'/>
  </cputune>

virtio

    <interface type='bridge'>
      <mac address='52:54:00:60:78:03'/>
      <source bridge='br0'/>
      <virtualport type='openvswitch'/>
      <model type='virtio'/>
      <address type='pci' domain='0x0000' bus='0x01' slot='0x08' function='0x0'/>
    </interface>

srvio

    <hostdev mode='subsystem' type='pci' managed='yes'>
      <source>
        <address domain='0x0000' bus='0x03' slot='0x00' function='0x2'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x09' function='0x0'/>
    </hostdev>

virsh net-list
virsh net-dumpxml default
virsh dumpxml vm1 | grep -i '<mac'
virsh net-edit default
virsh net-destroy default
virsh net-start default
systemctl restrart libvirtd.service

<host mac='' name='' ip=''/>

<network>
  <name>default</name>
  <uuid>e346291e-f86b-4f2f-a16e-654136441805</uuid>
  <forward mode='nat'/>
  <bridge name='virbr0' stp='on' delay='0'/>
  <mac address='52:54:00:12:fe:35'/>
  <ip address='192.168.122.1' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.122.100' end='192.168.122.254'/>
      <host mac='52:54:00:a0:cc:19' name='centos7' ip='192.168.122.2'/>
      <host mac='52:54:00:f7:a1:c8' name='puffy' ip='192.168.122.3'/>
      <host mac='52:54:00:4c:40:1c' name='xenial' ip='192.168.122.4'/>
    </dhcp>
  </ip>
</network>

      <host mac='52:54:00:5b:63:ef' name='vm1' ip='192.168.122.2'/>

ip link set $link vf 3 state enable

https://www.cyberciti.biz/faq/linux-kvm-libvirt-dnsmasq-dhcp-static-ip-address-configuration-for-guest-os/


1、添加ttyS0的安全许可，允许root登录:

# echo "ttyS0" >> /etc/securetty

2、在/etc/grub.conf文件中为内核添加参数:

console=ttyS0
风松
3、在/etc/inittab中添加agetty:

S0:12345:respawn:/sbin/agetty ttyS0 115200

4、重启客户机:、


hairpin

    <interface type='bridge'>
      <mac address='52:54:00:c2:9e:45'/>
      <source bridge='br0'/>
      <model type='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>

    <interface type='bridge'>
      <mac address='52:54:00:85:89:89'/>
      <source bridge='br0'/>
      <model type='connectx5'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x08' function='0x0'/>
    </interface>

  <qemu:commandline>
    <qemu:env name='MLX5_CONFIG_FILE' value='/opt/simx/cfg/simx-qemu.cfg'/>
    <qemu:env name='MLXSW_CONFIG_FILE' value='/opt/simx/cfg/simx-sw-qemu.cfg'/>
  </qemu:commandline>

===python===

python2 -m pip install jsonschema

sudo yum -y install https://centos7.iuscommunity.org/ius-release.rpm
sudo yum -y install python36u

===win===

dxdiag

===serial===

crash> bt 4400
PID: 4400   TASK: ffff8a939032dc00  CPU: 15  COMMAND: "echo"
 #0 [ffffac9fc7d7bc90] __schedule at ffffffffa88a3266
 #1 [ffffac9fc7d7bd28] schedule at ffffffffa88a38cc
 #2 [ffffac9fc7d7bd38] schedule_preempt_disabled at ffffffffa88a3b9e
 #3 [ffffac9fc7d7bd48] __mutex_lock at ffffffffa88a5351
 #4 [ffffac9fc7d7bdd8] __mutex_lock_interruptible_slowpath at ffffffffa88a5733
 #5 [ffffac9fc7d7bdf8] mutex_lock_interruptible at ffffffffa88a5771
 #6 [ffffac9fc7d7be10] tty_write_lock at ffffffffa84e720c
 #7 [ffffac9fc7d7be30] tty_write at ffffffffa84e7f29
 #8 [ffffac9fc7d7be90] __vfs_write at ffffffffa827c7cb
 #9 [ffffac9fc7d7bea0] vfs_write at ffffffffa827fd31
#10 [ffffac9fc7d7bed8] ksys_write at ffffffffa827ffec
#11 [ffffac9fc7d7bf20] __x64_sys_write at ffffffffa828008a
#12 [ffffac9fc7d7bf30] do_syscall_64 at ffffffffa800263a
#13 [ffffac9fc7d7bf50] entry_SYSCALL_64_after_hwframe at ffffffffa8a0008c
    RIP: 00007f068079c7a4  RSP: 00007ffed5d6ffc8  RFLAGS: 00000246
    RAX: ffffffffffffffda  RBX: 0000000000000003  RCX: 00007f068079c7a4
    RDX: 0000000000000003  RSI: 000056463a98a280  RDI: 0000000000000001
    RBP: 000056463a98a280   R8: 0000000000000003   R9: 0000000000000077
    R10: 0000000000000000  R11: 0000000000000246  R12: 0000000000000003
    R13: 0000000000000001  R14: 00007f0680a67740  R15: 0000000000000003
    ORIG_RAX: 0000000000000001  CS: 0033  SS: 002b

io_serial_in
io_serial_out

serial8250_default_handle_irq

serial8250_start_tx

 0xffffffff9650d380 : serial8250_start_tx    0/0x1a0 [kernel]
 0xffffffff9650469b : __uart_start.isra.13    4b/0x50 [kernel]
 0xffffffff96506516 : uart_start    66/0xf0 [kernel]
 0xffffffff965065ae : uart_flush_chars    e/0x10 [kernel]
 0xffffffff964e8c09 : n_tty_write    239/0x480 [kernel]
 0xffffffff964e4394 : tty_write    1b4/0x320 [kernel]
 0xffffffff96278f9b : __vfs_write    1b/0x40 [kernel]
 0xffffffff9627c501 : vfs_write    b1/0x1a0 [kernel]
 0xffffffff9627c7bc : ksys_write    5c/0xe0 [kernel]
 0xffffffff9627c85a : __x64_sys_write    1a/0x20 [kernel]
 0xffffffff9600263a : do_syscall_64    5a/0x170 [kernel]
 0xffffffff96a0008c : entry_SYSCALL_64_after_hwframe    44/0xa9 [kernel]
 0xffffffff96a0008c : entry_SYSCALL_64_after_hwframe    44/0xa9 [kernel]
parms: port=0xffffffff9787c800
execname: bash
ts: 11, 3
 0x7fb0b8229924 : __write    14/0xa0 [/usr/lib64/libc-2.26.so]
 0x7fb0b81bbd6d : _IO_file_write@@GLIBC_2.2.5    2d/0xc0 [/usr/lib64/libc-2.26.so]
 0x7fb0b81bb04f : new_do_write    5f/0x160 [/usr/lib64/libc-2.26.so]
 0x7fb0b81bcf59 : _IO_do_write@@GLIBC_2.2.5    19/0x30 [/usr/lib64/libc-2.26.so]
 0x7fb0b81bd353 : _IO_file_overflow@@GLIBC_2.2.5    103/0x210 [/usr/lib64/libc-2.26.so]
 0x562ad5ad739e [/usr/bin/bash    8c39e/0x104000]

# stty -F /dev/ttyS0
speed 38400 baud; line = 0;
cin = 1; time = 0;
-brkint -icrnl -imaxbel
-opost -onlcr
-isig -icanon -iexten -echo
[root@dev-r630-04 tty]#

 0xffffffff81494ec0 : serial8250_start_tx              0/0x1a0 [kernel]
 0xffffffff8148c1b5 : __uart_start.isra.10              45/0x50 [kernel]
 0xffffffff8148dc02 : uart_start              62/0xe0 [kernel]
 0xffffffff8148dc8e : uart_flush_chars              e/0x10 [kernel]
 0xffffffff8146f8f5 : n_tty_write              235/0x470 [kernel]
 0xffffffff8146bfbf : tty_write              1af/0x310 [kernel]
 0xffffffff8122fad7 : __vfs_write              37/0x170 [kernel]
 0xffffffff812310f1 : vfs_write              b1/0x1a0 [kernel]
 0xffffffff812327a5 : sys_write              55/0xc0 [kernel]
 0xffffffff81003ac7 : do_syscall_64              67/0x140 [kernel]
 0xffffffff8175e767 : return_from_SYSCALL_64              0/0x6a [kernel]
 0x0 (inexact)
parms: port=0xffffffff820685e0
execname: bash
ts: 151
 0x7f4c02ab67a4 : __write              14/0xa0 [/usr/lib64/libc-2.26.so]
 0x7f4c02a48c8d : _IO_file_write@@GLIBC_2.2.5              2d/0xc0 [/usr/lib64/libc-2.26.so]
 0x7f4c02a47f6f : new_do_write              5f/0x160 [/usr/lib64/libc-2.26.so]
 0x7f4c02a49e79 : _IO_do_write@@GLIBC_2.2.5              19/0x30 [/usr/lib64/libc-2.26.so]
 0x7f4c02a4a273 : _IO_file_overflow@@GLIBC_2.2.5              103/0x210 [/usr/lib64/libc-2.26.so]
 0x1d084a6f45 : rl_crlf              15/0x20 [/usr/bin/bash]
 0x1d084a21d9 : _rl_update_final              29/0xe0 [/usr/bin/bash]
 0x1d084a87fa : rl_newline              6a/0xc0 [/usr/bin/bash]
 0x1d0848e181 : _rl_dispatch_subseq              211/0x630 [/usr/bin/bash]
 0x1d0848e673 : readline_internal_char              c3/0x230 [/usr/bin/bash]
 0x1d0848ede5 : readline              45/0x90 [/usr/bin/bash]
 0x1d0841377c : yy_readline_get              9c/0x1c0 [/usr/bin/bash]
 0x1d08415b6d : shell_getc              29d/0x820 [/usr/bin/bash]
 0x1d08418b7a : read_token.constprop.8              9a/0x2d20 [/usr/bin/bash]
 0x1d0841c2e8 : yyparse              428/0x2d10 [/usr/bin/bash]
 0x1d08412ef6 : parse_command              36/0xe0 [/usr/bin/bash]
 0x1d08412ff8 : read_command              58/0x120 [/usr/bin/bash]
 0x1d084131d7 : reader_loop              117/0x350 [/usr/bin/bash]
 0x1d08411d98 : main              fd8/0x1770 [/usr/bin/bash]
 0x7f4c029f0f2a : __libc_start_main              ea/0x1c0 [/usr/lib64/libc-2.26.so]

serial8250_start_tx

# cat /proc/tty/drivers
/dev/tty             /dev/tty        5       0 system:/dev/tty
/dev/console         /dev/console    5       1 system:console
/dev/ptmx            /dev/ptmx       5       2 system
/dev/vc/0            /dev/vc/0       4       0 system:vtmaster
usbserial            /dev/ttyUSB   188 0-511 serial
serial               /dev/ttyS       4 64-95 serial
pty_slave            /dev/pts      136 0-1048575 pty:slave
pty_master           /dev/ptm      128 0-1048575 pty:master
unknown              /dev/tty        4 1-63 console

# cat /proc/tty/driver/*
serinfo:1.0 driver revision:
0: uart:16550A port:000003F8 irq:4 tx:37 rx:0 CTS
1: uart:16550A port:000002F8 irq:3 tx:0 rx:0
2: uart:unknown port:000003E8 irq:4
3: uart:unknown port:000002E8 irq:3
usbserinfo:1.0 driver:2.0

# dmesg | grep ttyS
[    1.368938] 00:02: ttyS1 at I/O 0x2f8 (irq = 3, base_baud = 115200) is a 16550A
[    1.390401] 00:03: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A

===dpdk===

rdma-core-devel-43mlnx1-1.44100.x86_64

[root@sw-mtx-003 dpdk]# git remote -v
origin  https://github.com/DPDK/dpdk.git (fetch)
origin  https://github.com/DPDK/dpdk.git (push)
[root@sw-mtx-003 dpdk]# git branch
  master
  v18.02
  v18.02-rc4
* v18.08-rc3


echo 1024 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages

show port stats all

app/test-pmd/flowgen.c

yum install numactl-devel libpcap-devel

RHEL 7.5

OFED 4.5 GA
./mlnxofedinstall --upstream-libs --dpdk --with-mft --with-kernel-mft 

dpdk 17.11.4

export RTE_SDK=`pwd`
export RTE_TARGET=x86_64-native-linuxapp-gcc
make install T=x86_64-native-linuxapp-gcc -j32

./x86_64-native-linuxapp-gcc/app/testpmd  -l 0-2 -n 4  -m=1024  -w 0000:00:0a.0 -- -i --rxq=2 --txq=2  --nb-cores=2
./x86_64-native-linuxapp-gcc/app/testpmd -c 0xf -n 4 -w 0000:00:0a.0,txq_inline=896 --socket-mem=2048,0 -- --rxq=4 --txq=4 --nb-cores=3 -i set fwd macswap

-----

Yu:
./x86_64-native-linuxapp-gcc/app/testpmd -l 0-8 -n 4 --socket-mem=1024,1024 -w af:00.0 -w af:00.1 -- -i 

Yu:
export RTE_SDK=/root/test/dpdk
export RTE_TARGET=x86_64-native-linuxapp-gcc

Yu:
mkdir -p /mnt/huge_2M
mount -t hugetlbfs -o pagesize=2M none /mnt/huge_2M/
echo 8192 > /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
mkdir -p /mnt/huge_1G
mount -t hugetlbfs -o pagesize=1G none /mnt/huge_1G/
echo 16 > /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages

make config T=x86_64-native-linuxapp-gcc
make -j T=x86_64-native-linuxapp-gcc
export RTE_SDK=/root/dpdk-stable-17.11.3
export RTE_TARGET=x86_64-native-linuxapp-gcc

./build/app/testpmd -l 0-8 -n 4 --socket-mem=1024,1024 -w 04:00.0 -w 04:00.3 -- -i

testpmd> set fwd flowgen
Set flowgen packet forwarding mode
testpmd> start
flowgen packet forwarding - ports=2 - cores=1 - streams=2 - NUMA support enabled, MP over anonymous pages disabled
Logical Core 1 (socket 1) forwards packets on 2 streams:
  RX P=0/Q=0 (socket 0) -> TX P=1/Q=0 (socket 0) peer=02:00:00:00:00:01
  RX P=1/Q=0 (socket 0) -> TX P=0/Q=0 (socket 0) peer=02:00:00:00:00:00

  flowgen packet forwarding packets/burst=32
  packet len=64 - nb packet segments=1
  nb forwarding cores=1 - nb forwarding ports=2
  port 0:
  CRC stripping enabled
  RX queues=1 - RX desc=128 - RX free threshold=0
  RX threshold registers: pthresh=0 hthresh=0  wthresh=0
  TX queues=1 - TX desc=512 - TX free threshold=0
  TX threshold registers: pthresh=0 hthresh=0  wthresh=0
  TX RS bit threshold=0 - TXQ flags=0x0
  port 1:
  CRC stripping enabled
  RX queues=1 - RX desc=128 - RX free threshold=0
  RX threshold registers: pthresh=0 hthresh=0  wthresh=0
  TX queues=1 - TX desc=512 - TX free threshold=0
  TX threshold registers: pthresh=0 hthresh=0  wthresh=0
  TX RS bit threshold=0 - TXQ flags=0x0
testpmd> show port stats 0

  ######################## NIC statistics for port 0  ########################
  RX-packets: 2          RX-missed: 0          RX-bytes:  156
  RX-errors: 0
  RX-nombuf:  0
  TX-packets: 40146912   TX-errors: 0          TX-bytes:  2408814720

  Throughput (since last show)
  Rx-pps:            0
  Tx-pps:            0
  ############################################################################

===mlx5_ib===

mlx5_ib_create_rwq_ind_table
mlx5_ib_create_flow
mlx5_ib_create_qp

mlx5_ib_arm_cq
mlx5_ib_update_xlt
mlx5_ib_post_send_wait
mlx5_ib_post_send
mlx5_ib_cq_comp
mlx5_ib_poll_cq
mlx5_ib_umr_done


/usr/local/bin/stap -v -d /usr/lib64/libpthread-2.17.so -d mlx5_ib  -d /usr/lib64/libibverbs.so.1.1.16.0  -d /usr/lib64/libmlx5.so.1.3.16.0  -d /home1/chrism/dpdk-18.05/build/app/testpmd ./mlx5_ib_post_send.stp

 0xffffffffc0a6ccd0 : mlx5_ib_post_send            0/0x1420 [mlx5_ib]
 0x0 (inexact)
parms:
execname: testpmd
ts: 4
 0x7fab7d77e79d : __write_nocancel            24/0x57 [/usr/lib64/libpthread-2.17.so]
 0x7fab7e70984c : ibv_cmd_reg_mr            8c/0x130 [/usr/lib64/libibverbs.so.1.1.16.0]
 0x7fab7e4f9bfb : mlx5_reg_mr            6b/0xb0 [/usr/lib64/libmlx5.so.1.3.16.0]
 0x7fab7e712008 : ibv_reg_mr@@IBVERBS_1.1            38/0x70 [/usr/lib64/libibverbs.so.1.1.16.0]
 0x477e3e : mlx5_mr_lookup_dev            b0a/0xd4c [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x740f67 : mlx5_mr_update_mp_cb            b7/0xd0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x51f651 : rte_mempool_mem_iter            31/0x50 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x7415d0 : mlx5_mr_update_mp            30/0x40 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x73a8c5 : mlx5_dev_start            2d5/0x610 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x4fdfbd : rte_eth_dev_start            8d/0x330 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x481eac : start_port            1bc/0x600 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x47a24f : main            52f/0xa90 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x7fab7d3c5445 [/usr/lib64/libc-2.17.so            22445/0x3cd000]

 0xffffffffc0a6c3f0 : mlx5_ib_create_qp            0/0x20 [mlx5_ib]
 0x0 (inexact)
parms:
execname: testpmd
ts: 4
 0x7f371a3f179d : __write_nocancel            24/0x57 [/usr/lib64/libpthread-2.17.so]
 0x7f371b37dbad : ibv_cmd_create_qp_ex2            18d/0x310 [/usr/lib64/libibverbs.so.1.1.16.0]
 0x7f371b16ddfd : create_qp            c1d/0xd40 [/usr/lib64/libmlx5.so.1.3.16.0]
 0x747aaf : mlx5_flow_create_drop_queue            19f/0x4a0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x721709 : mlx5_pci_probe            2009/0x25f0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x55350f : pci_probe_all_drivers.part.1            13f/0x1d0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x55364e : rte_pci_probe            ae/0x160 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x53505c : rte_bus_probe            4c/0xb0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x524465 : rte_eal_init            1205/0x13d0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x479d64 : main            44/0xa90 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x7f371a038445 [/usr/lib64/libc-2.17.so            22445/0x3cd000]

 0xffffffffc0a6c3f0 : mlx5_ib_create_qp            0/0x20 [mlx5_ib]
 0x0 (inexact)
parms:
execname: testpmd
ts: 5
 0x7f371a3f179d : __write_nocancel            24/0x57 [/usr/lib64/libpthread-2.17.so]
 0x7f371b37dbad : ibv_cmd_create_qp_ex2            18d/0x310 [/usr/lib64/libibverbs.so.1.1.16.0]
 0x7f371b16ddfd : create_qp            c1d/0xd40 [/usr/lib64/libmlx5.so.1.3.16.0]
 0x7275e4 : mlx5_hrxq_new            144/0x3f0 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x746202 : mlx5_flow_list_create.isra.12            342/0xa90 [/home1/chrism/dpdk-18.05/build/app/testpmd]
 0x748ff2 : mlx5_ctrl_flow            2f2/0x370 [/home1/chrism/dpdk-18.05/build/app/testpmd]

===iso===

https://mirrors.huaweicloud.com/fedora/releases/31/Server/x86_64/iso/Fedora-Server-dvd-x86_64-31-1.9.iso

===sig===

 0xffffffff812ae300 : do_coredump              0/0xeb0 [kernel]
 0xffffffff8109b95a : get_signal              29a/0x610 [kernel]
 0xffffffff8102dd77 : do_signal              37/0x680 [kernel]
 0xffffffff810035fe : exit_to_usermode_loop              6e/0xb0 [kernel]
 0xffffffff81003a1b : prepare_exit_to_usermode              8b/0x90 [kernel]
 0xffffffff818009b4 : swapgs_restore_regs_and_return_to_usermode              0/0x87 [kernel]

===fw===

Use mlxfwmanager to find the psid:

  Part Number:      MCX512A-ACA_Ax

/.autodirect/mswg/release/BUILDS/fw-4119/fw-4119-rel-16_26_1200-build-001/etc/bin/fw-ConnectX5-rel-16_26_1200-MCX512A-ACA_Ax-UEFI-14.19.14-FlexBoot-3.5.803.bin

mlxburn -fw /swgwork/maozn/fw_for_SNIC_fast_linkup_testing_based_on_14_23_1020_19112018.mlx  -c ast_linkup_fw_Tencent_SNIC_20181101_take3.ini -wrimage fw-ConnectX-4Lx-rel-14_23_1020_Inspur_CX4lx_2P_25G_BP_Ax-UEFI-14.16.17-FlexBoot-3.5.504_2018_11_20.bin

[root@dev-r630-03 bin]# cat /sys/class/infiniband/mlx5_0//fw_pages
4

git clone ssh://chrism@gerrit.mtl.com:29418/golan_fw.git

mlxfwup -d 04:00.0 -f 14.21.2030

[root@dev-r630-04 network-scripts]# grep -i 0x29cdba /mswg/release/BUILDS/fw-4117/fw-4117-rel-14_21_0412-build-001/etc/syndrome_list.log
BAD_PARAM           | 0x29CDBA |  set_flow_table_entry: an FTE with flow counter in FDB must has fully match on dmac

https://github.com/Mellanox/mstflint

mlxconfig -d 02:00.0 q | egrep "SRIOV_EN|NUM_OF_VFS"

mlxconfig -d 03:00.0 set SRIOV_EN=1 NUM_OF_VFS=2

fwtrace -d 03:00.0   --tracer_mode FIFO -i all -s -m CMD_IF  -l 0 | grep modify_esw_vport_context

ConnectX-5
mount 10.4.0.102:/vol/mswg/mswg /mswg/
yes|sudo mlxburn -d $pci -fw /mswg/release/fw-4119/last_revision/fw-ConnectX5.mlx -conf_dir /mswg/release/fw-4119/last_revision
yes|sudo mlxburn -d $pci -fw /root/fw-ConnectX5.mlx -conf_dir /mswg/release/fw-4119/last_revision
sudo mlxfwreset -d 02:00.0 reset

yes|sudo mlxburn -d 02:00.0 -fw /mswg/release/fw-4119/last_revision/fw-ConnectX5.mlx -conf_dir /mswg/release/fw-4119/last_revision
fw-4119-rel-16_21_0338

ConnectX-4
yes|sudo mlxburn -d 03:00.0 -fw /mswg/release/fw-4115/last_revision/fw-ConnectX4.mlx -conf_dir /mswg/release/fw-4115/last_revision
sudo mlxfwreset -d 03:00.0 reset

ConnectX-4 Lx
yes|sudo mlxburn -d 02:00.0 -fw /mswg/release/fw-4117/last_revision/fw-ConnectX4Lx.mlx -conf_dir /mswg/release/fw-4117/last_revision
sudo mlxfwreset -d 02:00.0 reset

flint -d 02:00.0 -i /tmp/2.bin b
/.autodirect/fwgwork/rabiel/workdir/shomron/golan_fw

mlxburn -d d8:00.0 -i 1.bin	# no burn

/mswg/release/BUILDS/fw-4119/fw-4119-rel-16_21_0338-build-001/etc/syndrome_list.log

===gerrit===

https://wikinox.mellanox.com/display/SW/Code+review+with+Gerrit

put commit-msg in .git/hooks/ of the workspace, not in home dir ~/.git/hooks
git rebase -i  HEAD~5	# change pick to edit
git commit --amend	# Will generate the Change-Id
git rebase --continue
git push origin HEAD:refs/for/asap2-direct-3.3-next/port-mirroring

git push origin HEAD:refs/for/backport-mlnx_ofed_4_2_asap/backport-idr
git push origin HEAD:refs/for/mlnx_ofed_4_2_asap/icmp6-frag-issue

git push origin HEAD:refs/for/mlnx_ofed_4_7_3/0-counter-issue-for-bond

git push origin HEAD:refs/for/mlnx_ofed_4_7_3/0-counter-issue
git push origin HEAD:refs/for/mlnx_ofed_4_7_3/nic_netdev_cleanup_fix

git push origin HEAD:refs/for/mlnx_ofed_4_6_3_bd_te/fix_syndrome_for_tap

git push origin HEAD:refs/for/mlnx_ofed_4_6_3_bd_te/fix_access_reg_syndrome

git push origin HEAD:refs/for/master/stats-update

git push origin HEAD:refs/for/net-mlx5/fix-ppcnt-syndrome-issue

If commit was abandoned, don't reuse the change-id. Otherwise, will fail to push

git push origin HEAD:refs/for/mlnx_ofed_5_0/kernel-5.4-perf-issue

===git===

git remote update # update all branches

git checkout -b branch_name remote_name/branch_name


echo "# bin" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:mishuang2017/bin.git
git push -u origin master

git remote add origin git@github.com:mishuang2017/binit
git push -u origin master

git log --oneline | grep -m1 "Don't add decap"

# How to remove local untracked files from the current Git branch
git clean -n
git clean -fd

# from now to c00f5a7, but not including it
git format-patch -o ~/bp/9/ c00f5a7..

$ git slog --after "20/01/2019 16:00" --no-decorate
d30aca876c44 en_tc: Organize debug code
4b495001c51e rtnetlink: disable the call trace from dump_ifinfo. Not real fix.
a2702e2027f9 nft_gen_flow_offload: Fix gc_step reschedule

git cherry-pick ....
git mergetool
git cherry-pick --continue

git log --tags --source --author=viro --oneline fs/namei.c

from commit to commit
git slog <since_hash>^..HEAD

only add modifed files
git add -u

# add new created files
git add -A .

git show 1234 --name-only

git push ssh2 HEAD:refs/for/mlnx_ofed_4_4/port-mirroring

a. Declare to which commit/backport should this changed be fixup to:
git commit --fixup <commit id>

git log --author=mellanox --oneline v2.9.0..

git remote add stable git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git
git fetch stable linux-4.9.y
git checkout FETCH_HEAD
git checkout -b linux-4.9.y

git reset --merge

git rebase -i commit-id
change pick to drop
http://blog.csdn.net/dongfengkuayue/article/details/54599703

git log origin/asap2-direct-3.4-next --oneline --author=.*@mellanox.com

# How do I discard unstaged changes in Git?
git checkout -- .

git remote add roid https://github.com/roidayan/linux.git
git fetch roid asap2-direct-3.4-next 
git checkout FETCH_HEAD
git checkout -b asap2-direct-3.4-next

git remote rename origin sm
git remote add origin ssh://chrism@l-gerrit.lab.mtl.com:29418/upstream/linux
git fetch origin net
git checkout FETCH_HEAD
git checkout -b net

gitdir=$(git rev-parse --git-dir); scp -p -P 29418 chrism@l-gerrit.mtl.labs.mlnx:hooks/commit-msg ${gitdir}/hooks/
git commit --amend

git branch --set-upstream-to=remotes/roid/asap2-direct-3.3-next idr_for_asap_direct_3.3_build

git remote remove 14
git remote add 14 chrism@10.12.205.14:/home1/chrism/linux

git reset --merge

git rebase -i HEAD~3

scripts/checkpatch.pl
scripts/get_maintainer.pl

git revert
git can fetch tags (get fetch --tags) to make sure you have all tags and then "git checkout v4.12"

I usually fetch tags from linus so I wont have trash tags from Mellanox gerrit
git remote add linus git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
git fetch --tags linus
git checkout v4.12
git checkout -b poc-v4.12


git log --name-status --oneline

git remote set-url origin ssh://chrism@l-gerrit.lab.mtl.com:29418/upstream/linux
git remote set-url origin git://github.com/crash-utility/crash.git

ssh-keygen -t rsa -C "chrism@mellanox.com"

https://burzalodowa.wordpress.com/2013/10/05/how-to-send-patches-with-git-send-email/


git format-patch -o $dir -5 HEAD

git format-patch --cover-letter --subject-prefix="INTERNAL RFC net-next v7" -o $patch_dir -3

git send-email --dry-run --cc internal --to jiri $patch_dir/*.patch --suppress-cc=all

git send-email --dry-run --to=netdev@vger.kernel.org --cc jiri@resnulli.us $patch_dir/*.patch --suppress-cc=all

git send-email --dry-run --to=netdev@vger.kernel.org --cc gerlitz.or@gmail.com $patch_dir/*.patch --suppress-cc=all
git send-email --dry-run --to=netdev@vger.kernel.org --cc gerlitz.or@gmail.com --cc stephen@networkplumber.org --cc dsahern@gmail.com \
	--cc marcelo.leitner@gmail.com --cc phil@nwl.cc $patch_dir/*.patch --suppress-cc=all

git send-email --to internal --cc mark -cc paul --cc roid --cc matan --cc jiri --cc guy --cc or --cc jhs@mojatatu.com --cc alex.aring@gmail.com --cc mrv@mojatatu.com $patch_dir/*.patch --suppress-cc=all

git send-email --dry-run --to blp@ovn.org --to fbl@sysclose.org --to ovs-dev@openvswitch.org --cc simon.horman@netronome.com --cc roid@mellanox.com /labhome/chrism/ovs/vxlan7/0001-netdev-vport-Use-the-dst_port-in-tunnel-netdev-name.patch


Jamal Hadi Salim <jhs@mojatatu.com> 
alex.aring@gmail.com 
mrv@mojatatu.com 

git commit --amend
git push origin HEAD:refs/for/net-next/fix-cx4-rep

git cherry-pick 8d60bbc
git slog -1 --abbrev=12 a6f402e4990145252ce4fde59b273fa7e4f91e1b


git remote -v
davem   git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git (fetch)
davem   git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git (push)
linux-stable    git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git (fetch)
linux-stable    git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git (push)
origin  ssh://chrism@l-gerrit.lab.mtl.com:29418/upstream/linux (fetch)
origin  ssh://chrism@l-gerrit.lab.mtl.com:29418/upstream/linux (push)

# hg update -u
git fetch origin          # updates origin/master
git merge origin/master   # updates your local master

[root@bjglab-18 ~]# cd linux-net-next
[root@bjglab-18 linux-net-next]# cat .git/config
[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote "origin"]
        url = git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
        remote = origin
        merge = refs/heads/master

git clone  git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git

git fetch origin
git reset --hard origin/master

IDR
git log  v4.13..v4.14 net/sched/cls_flower.c

git slog v4.10..v4.11 drivers/net/ethernet/mellanox/mlx5/core/
git slog v4.11.. drivers/net/ethernet/mellanox/mlx5/core/


git pull origin master

git log -l --pretty=oneline include/linux/sched.h

git checkout -b branch_name
git branch

git commit -a

git format-patch master --stdout

git checkout master

git apply --stat fix_empty_poster.patch
git apply --check fix_empty_poster.patch
git am --signoff fix_empty_poster.patch

git diff --patch
git apply name.patch

git show --patch HEAD^
git show --patch HEAD~3

git checkout --track origin/serverfix

git reset --hard 71c27777543ccfcb0376dcdd8f6777df055ef479

git log --author="chrism@mellanox.com"

===mod===

modprobe --dump-modversions  

4.10.2
[root@bjglab-19 cache]# modprobe --dump-modversions ./d9/typequery_d9bc8fdff5b4cfdb289633ee7841b60b_713.ko
0x11db8ac0      module_layout

4.11.0-rc3+
[root@bjglab-19 openvswitch]# modprobe --dump-modversions openvswitch.ko  | head -1
0xbc2ed244      module_layout

systemtap
0xc994c4bd      module_layout

mo[root@bjglab-19 hello]# modv hello.ko | head -1
0xc994c4bd      module_layout

hello on 4.10.2 kernel source
[root@bjglab-19 hello]# modv hello.ko
0x11db8ac0      module_layout
0x27e1a049      printk
0xbdfb6dbb      __fentry__

===act_vlan===

fl_set_parms

fl_lookup return value
crash> cls_fl_filter  ffff880590f10c00
  exts = {
    type = 0,
    nr_actions = 2,
    actions = 0xffff880585738600,
    action = 3,
    police = 0
  },
crash> rd 0xffff880585738600 2
ffff880585738600:  ffff880585738900 ffff880585738a00   ..s.......s.....
crash> tc_action  ffff880585738900 -x
struct tc_action {
  ops = 0xffffffffa091d040,
  type = 0x0,
  order = 0x1,
  list = {
    next = 0xffff880585738a10,
    prev = 0xffffc90008fff8f0
  },
  hinfo = 0xffff8806055fc900,
  tcfa_head = {
    next = 0x0,
    pprev = 0xffff88065c485428
  },
  tcfa_index = 0x25,
  tcfa_refcnt = 0x1,
  tcfa_bindcnt = 0x1,
  tcfa_capab = 0x0,
  tcfa_action = 0x3,
  tcfa_tm = {
    install = 0x1001c663f,
    lastuse = 0x1035f4089,
    expires = 0x0,
    firstuse = 0x1001cc3e9
  },
  tcfa_bstats = {
    bytes = 0x674237,
    packets = 0xc4c7
  },
  tcfa_qstats = {
    qlen = 0x0,
    backlog = 0x0,
    drops = 0x0,
    requeues = 0x0,
    overlimits = 0x0
  },
  tcfa_rate_est = 0x0,
  tcfa_lock = {
    {
      rlock = {
        raw_lock = {
          val = {
            counter = 0x0
          }
        }
      }
    }
  },
  tcfa_rcu = {
    next = 0x0,
    func = 0x0
  },
  cpu_bstats = 0x0,
  cpu_qstats = 0x0,
  act_cookie = 0x0
}
crash> tc_action_ops  0xffffffffa091d040
struct tc_action_ops {
  head = {
    next = 0xffffffffa0922060,
    prev = 0xffffffff81d29ce0 <act_base>
  },
  kind = "vlan\000\000\000\000\000\000\000\000\000\000\000",
  type = 12,
  size = 216,
  owner = 0xffffffffa091d0c0,
  act = 0xffffffffa091b590,
  dump = 0xffffffffa091b3a0,
  cleanup = 0x0,
  lookup = 0xffffffffa091b370,
  init = 0xffffffffa091b070,
  walk = 0xffffffffa091b040,
  stats_update = 0x0,
  get_dev = 0x0
}
crash> dis 0xffffffffa091b590
0xffffffffa091b590 <tcf_vlan>:  nopl   0x0(%rax,%rax,1) [FTRACE NOP]
crash> tc_action  ffff880585738a00 -x
struct tc_action {
  ops = 0xffffffffa0922060,
  type = 0x0,
  order = 0x2,
  list = {
    next = 0xffffc90008fff8f0,
    prev = 0xffff880585738910
  },
  hinfo = 0xffff8805a41cc0e0,
  tcfa_head = {
    next = 0x0,
    pprev = 0xffff880558a84b20
  },
  tcfa_index = 0x24,
  tcfa_refcnt = 0x1,
  tcfa_bindcnt = 0x1,
  tcfa_capab = 0x0,
  tcfa_action = 0x4,
  tcfa_tm = {
    install = 0x1001c663f,
    lastuse = 0x1035fb1dc,
    expires = 0x0,
    firstuse = 0x1001cc3e9
  },
  tcfa_bstats = {
    bytes = 0x0,
    packets = 0x0
  },
  tcfa_qstats = {
    qlen = 0x0,
    backlog = 0x0,
    drops = 0x0,
    requeues = 0x0,
    overlimits = 0x0
  },
  tcfa_rate_est = 0x0,
  tcfa_lock = {
    {
      rlock = {
        raw_lock = {
          val = {
            counter = 0x0
          }
        }
      }
    }
  },
  tcfa_rcu = {
    next = 0x0,
    func = 0x0
  },
  cpu_bstats = 0x60f398812800,
  cpu_qstats = 0x60f39881280c,
  act_cookie = 0x0
}
crash> tc_action_ops  0xffffffffa0922060
struct tc_action_ops {
  head = {
    next = 0xffffffff81d29ce0 <act_base>,
    prev = 0xffffffffa091d040
  },
  kind = "mirred\000\000\000\000\000\000\000\000\000",
  type = 8,
  size = 240,
  owner = 0xffffffffa0922100,
  act = 0xffffffffa09203c0,
  dump = 0xffffffffa0920240,
  cleanup = 0xffffffffa09201c0,
  lookup = 0xffffffffa0920190,
  init = 0xffffffffa0920730,
  walk = 0xffffffffa09200a0,
  stats_update = 0xffffffffa0920000,
  get_dev = 0xffffffffa0920070
}
crash> dis 0xffffffffa09203c0
0xffffffffa09203c0 <tcf_mirred>:        nopl   0x0(%rax,%rax,1) [FTRACE NOP]



static int tcf_vlan(struct sk_buff *skb, const struct tc_action *a,
                    struct tcf_result *res)
static int tcf_mirred(struct sk_buff *skb, const struct tc_action *a,
                      struct tcf_result *res)

struct tcf_proto {
        /* Fast access part */
        struct tcf_proto __rcu  *next;
        void __rcu              *root;
        int                     (*classify)(struct sk_buff *,
                                            const struct tcf_proto *,
                                            struct tcf_result *);
tcf_action_exec

0       0       swapper/13      skb_vlan_push
        skb_vlan_push     1 [kernel]
        tcf_action_exec     7b [kernel]
        fl_classify     2e1 [kernel]
        tcf_classify     60 [kernel]
        __netif_receive_skb_core     5d4 [kernel]
        __netif_receive_skb_one_core     3b [kernel]
        __netif_receive_skb     18 [kernel]
        netif_receive_skb_internal     45 [kernel]
        napi_gro_receive     120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq     279 [kernel]
        mlx5e_poll_rx_cq     dd [kernel]
        mlx5e_napi_poll     bb [kernel]
        net_rx_action     14d [kernel]
        __softirqentry_text_start     de [kernel]
        irq_exit     df [kernel]
        do_IRQ     8a [kernel]
        ret_from_intr     0 [kernel]
        finish_task_switch     80 [kernel]
        __schedule     24e [kernel]
        schedule_idle     22 [kernel]
        do_idle     161 [kernel]
        cpu_startup_entry     1d [kernel]
        start_secondary     16f [kernel]
        secondary_startup_64     a4 [kernel]

 0xffffffff81618f70 : skb_vlan_pop                    0/0xc0 [kernel]
 0xffffffffa010064c : tcf_vlan                    bc/0x250 [act_vlan]
 0xffffffff8165e250 : tcf_action_exec                    60/0x80 [kernel]
 0xffffffffa00627e1 : fl_classify                    1e1/0x210 [cls_flower]
 0xffffffff81659888 : tcf_classify                    78/0x120 [kernel]
 0xffffffff8162b242 : __netif_receive_skb_core                    612/0x9e0 [kernel]
 0xffffffff8162b628 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff8162c2e0 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8162ce9d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa092d06a : mlx5e_handle_rx_cqe_mpwrq                    58a/0x820 [mlx5_core]
 0xffffffffa092d383 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa092e0a3 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
 0xffffffff8162c840 : net_rx_action                    260/0x3c0 [kernel]
 0xffffffff81755a39 : __do_softirq                    c9/0x28c [kernel]
 0xffffffff810955e9 : irq_exit                    d9/0xf0 [kernel]
 0xffffffff81754bb1 : do_IRQ                    51/0xd0 [kernel]
 0xffffffff81752a13 : ret_from_intr                    0/0x1b [kernel]
 0x0 (inexact)
parms: skb=0xffff880587a57300


crash> net_device.ingress_cl_list ffff880661b70000
  ingress_cl_list = 0xffff8805eebb6d20
crash> tcf_proto  0xffff8805eebb6d20
struct tcf_proto {
  next = 0xffff880babc0d3c0,
  root = 0xffff88055f148c00,
  classify = 0xffffffffa0915600,
  protocol = 0x81,
  prio = 3221159936,
  classid = 4294901760,
  q = 0xffff880590f11800,
  data = 0x0,
  ops = 0xffffffffa0918000,
  rcu = {
    next = 0x0,
    func = 0x0
  }
}
crash> cls_fl_head 0xffff88055f148c00
struct cls_fl_head {
  ht = {
    tbl = 0xffff88055f148400,
    nelems = {
      counter = 1
    },
    key_len = 6,
    elasticity = 16,
    p = {
      nelem_hint = 0,
      key_len = 24,
      key_offset = 24,
      head_offset = 0,
      insecure_max_entries = 0,
      max_size = 0,
      min_size = 4,
      nulls_base = 0,
      insecure_elasticity = false,
      automatic_shrinking = true,
      locks_mul = 32,
      hashfn = 0xffffffff8139cdd0 <rhashtable_jhash2>,
      obj_hashfn = 0x0,
      obj_cmpfn = 0x0
    },
crash> cls_fl_head 0xffff88055f148c00 -o
struct cls_fl_head {
  [ffff88055f148c00] struct rhashtable ht;
  [ffff88055f148cc0] struct fl_flow_mask mask;
  [ffff88055f148d68] struct flow_dissector dissector;
  [ffff88055f148d90] u32 hgen;
  [ffff88055f148d94] bool mask_assigned;
  [ffff88055f148d98] struct list_head filters;
  [ffff88055f148da8] struct rhashtable_params ht_params;
        union {
  [ffff88055f148e00]     struct work_struct work;
  [ffff88055f148e00]     struct callback_head rcu;
        };
}
SIZE: 544
crash> fl_flow_mask  ffff88055f148cc0 -x
struct fl_flow_mask {
    basic = {
      n_proto = 0xffff,
      ip_proto = 0x0,
      padding = 0x0
    },
    eth = {
      dst = "\377\377\377\377\377\377",
      src = "\377\377\377\377\377\377"
    },
  range = {
    start = 0x10,
    end = 0x28
  },
crash> cls_fl_head.dissector 0xffff88055f148c00
  dissector = {
    used_keys = 579,

crash> eval 579
hexadecimal: 243
    decimal: 579
      octal: 1103
     binary: 0000000000000000000000000000000000000000000000000000001001000011

    offset = {4, 20, 0, 0, 0, 0, 24, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0}
  }
crash> fl_flow_key -o
struct fl_flow_key {
    [0] int indev_ifindex;
    [4] struct flow_dissector_key_control control;
   [12] struct flow_dissector_key_control enc_control;
   [20] struct flow_dissector_key_basic basic;
   [24] struct flow_dissector_key_eth_addrs eth;	<===
   [36] struct flow_dissector_key_vlan vlan;		<===
        union {
   [40]     struct flow_dissector_key_ipv4_addrs ipv4;
   [40]     struct flow_dissector_key_ipv6_addrs ipv6;
        };
   [72] struct flow_dissector_key_ports tp;
   [76] struct flow_dissector_key_icmp icmp;
   [80] struct flow_dissector_key_arp arp;
  [104] struct flow_dissector_key_keyid enc_key_id;
        union {
  [108]     struct flow_dissector_key_ipv4_addrs enc_ipv4;
  [108]     struct flow_dissector_key_ipv6_addrs enc_ipv6;
        };
  [140] struct flow_dissector_key_ports enc_tp;
}

FLOW_DISSECTOR_KEY_ETH_ADDRS
FLOW_DISSECTOR_KEY_VLAN



UDP send

fl_classify
	skb_flow_dissect
		__skb_flow_dissect
	fl_lookup
	tcf_exts_exec
		tcf_action_exec()
			for (i = 0; i < nr_actions; i++) {
				const struct tc_action *a = actions[i];
				ret = a->ops->act(skb, a, res);



 0xffffffffa09536e0 : mlx5e_xmit                    0/0x30 [mlx5_core]
 0xffffffff8162dd41 : dev_hard_start_xmit                    a1/0x210 [kernel]
 0xffffffff81658105 : sch_direct_xmit                    105/0x1b0 [kernel]
 0xffffffff8162e3cf : __dev_queue_xmit                    42f/0x630 [kernel]
 0xffffffff8162e5e0 : dev_queue_xmit                    10/0x20 [kernel]
 0xffffffffa0920604 : tcf_mirred                    244/0x2c0 [act_mirred]

 0xffffffff8165e250 : tcf_action_exec                    60/0x80 [kernel]
 0xffffffffa09157e1 : fl_classify                    1e1/0x210 [cls_flower]
 0xffffffff81659888 : tc_classify                    78/0x120 [kernel]
 0xffffffff8162b242 : __netif_receive_skb_core                    612/0x9e0 [kernel]
 0xffffffff8162b628 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff8162c2e0 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8162ce9d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa0955776 : mlx5e_handle_rx_cqe_rep                    666/0x9c0 [mlx5_core]
 0xffffffffa0956373 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa0957093 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
 0xffffffff8162c840 : net_rx_action                    260/0x3c0 [kernel]
 0xffffffff81755a39 : __do_softirq                    c9/0x28c [kernel]
 0xffffffff810955e9 : irq_exit                    d9/0xf0 [kernel]
 0xffffffff81754bb1 : do_IRQ                    51/0xd0 [kernel]
parms: skb=0xffff880c62f08000 dev=0xffff880661b70000

napi_gro_receive
napi_skb_finish
netif_receive_skb_internal

 0xffffffff816192e0 : skb_vlan_push                    0/0x1c0 [kernel]
 0xffffffffa091b78b : tcf_vlan                    1fb/0x250 [act_vlan]
 0xffffffff8165e250 : tcf_action_exec                    60/0x80 [kernel]
 0xffffffffa09157e1 : fl_classify                    1e1/0x210 [cls_flower]
 0xffffffff81659888 : tcf_classify                    78/0x120 [kernel]
 0xffffffff8162b242 : __netif_receive_skb_core                    612/0x9e0 [kernel]
 0xffffffff8162b628 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff8162c2e0 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8162ce9d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa0955776 : mlx5e_handle_rx_cqe_rep                    666/0x9c0 [mlx5_core]
 0xffffffffa0956373 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa0957093 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
 0xffffffff8162c840 : net_rx_action                    260/0x3c0 [kernel]
 0xffffffff81755a39 : __do_softirq                    c9/0x28c [kernel]
 0xffffffff810955e9 : irq_exit                    d9/0xf0 [kernel]
 0xffffffff81754bb1 : do_IRQ                    51/0xd0 [kernel]
 0xffffffff81752a13 : ret_from_intr                    0/0x1b [kernel]
 0x0 (inexact)
parms: skb=0xffff880c61303100 vlan_proto=0x81 vlan_tci=0x34
execname: swapper/10

===tc_insert===

esw_create_offloads_fdb_tables
esw_create_offloads_fast_fdb_table
mlx5_create_auto_grouped_flow_table

===iproute2===

Iproute2 development is closely tied to Linux kernel networking
development. Most new features require a kernel and a utility component.

Please submit both to the Linux networking mailing list
   <netdev@vger.kernel.org>

The current source is in the git repository:
    git://git.kernel.org/pub/scm/linux/kernel/git/shemminger/iproute2.git

The master branch contains the source corresponding to the current
code in the mainline Linux kernel (ie follows Linus). The net-next
branch is a temporary branch that tracks the code intended for the
next release; it corresponds with networking development branch in
the kernel.

===tc===

        if (answer == NULL)
                n->nlmsg_flags |= NLM_F_ACK;
        if (answer != NULL && *answer == NULL)
                n->nlmsg_flags |= NLM_F_ACK;


static void rtnetlink_rcv(struct sk_buff *skb)
{
        rtnl_lock();
        netlink_rcv_skb(skb, &rtnetlink_rcv_msg);
        rtnl_unlock();
}

netlink_rcv_skb
	while
                if (nlh->nlmsg_flags & NLM_F_ACK || err)
                        netlink_ack(skb, nlh, err, &extack);

/* Process one rtnetlink message. */

static int rtnetlink_rcv_msg(struct sk_buff *skb, struct nlmsghdr *nlh,
                             struct netlink_ext_ack *extack)



ovs:
tc_add_del_ingress_qdisc

tc:
tc_modify_qdisc


tc filter del dev $link parent ffff: prio 1 handle 0x1 flower 


 0xffffffffa09bd060 : fl_get                    0/0x10 [cls_flower]
 0xffffffff81666ad0 : tc_ctl_tfilter                    580/0x970 [kernel]
 0xffffffff8164b17c : rtnetlink_rcv_msg                    ac/0x240 [kernel]
 0xffffffff8166e7ed : netlink_rcv_skb                    ed/0x120 [kernel]
 0xffffffff81645158 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff8166df51 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166e2d2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
 0xffffffff816141e8 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff81614b3a : ___sys_sendmsg                    27a/0x290 [kernel]
 0xffffffff81616194 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff816161e2 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
 0xffffffff8175bbe7 : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: tp=0xffff880562717900 handle=0x0
execname: tc
ts: 77
 0x7fbdc2f617a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x432194 : __rtnl_talk                    c4/0x3f0 [/home1/chrism/iproute2/tc/tc]
 0x40abfb : tc_filter_modify                    2db/0x710 [/home1/chrism/iproute2/tc/tc]
 0x407d15 : batch                    a5/0x170 [/home1/chrism/iproute2/tc/tc]
 0x7fbdc2e8ab35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x4078be : _start                    29/0x2b [/home1/chrism/iproute2/tc/tc]


net_device ingress_cl_list

tcf_chain_tp_insert tcf_chain_tp_find
 0xffffffff81666d6f : tc_ctl_tfilter                    81f/0x970 [kernel]
 0xffffffff8164b17c : rtnetlink_rcv_msg                    ac/0x240 [kernel]
 0xffffffff8166e7ed : netlink_rcv_skb                    ed/0x120 [kernel]
 0xffffffff81645158 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff8166df51 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166e2d2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
 0xffffffff816141e8 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff81614b3a : ___sys_sendmsg                    27a/0x290 [kernel]
 0xffffffff81616194 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff816161e2 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
 0xffffffff8175bbe7 : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: chain=? chain=? tp=? chain_info=?
execname: tc
ts: 3
 0x7fda306167a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x432194 : __rtnl_talk                    c4/0x3f0 [/home1/chrism/iproute2/tc/tc]
 0x40abfb : tc_filter_modify                    2db/0x710 [/home1/chrism/iproute2/tc/tc]
 0x407d15 : batch                    a5/0x170 [/home1/chrism/iproute2/tc/tc]
 0x7fda3053fb35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x4078be : _start                    29/0x2b [/home1/chrism/iproute2/tc/tc]


 0xffffffffa0ab81f0 : __fl_delete                    0/0xb0 [cls_flower]
 0xffffffffa0ab87a3 : fl_destroy                    43/0xa0 [cls_flower]
 0xffffffff8163a5a4 : tcf_proto_destroy                    14/0x40 [kernel]
 0xffffffff8163a5fb : tcf_chain_flush                    2b/0x40 [kernel]
 0xffffffff8163a65d : tcf_chain_destroy                    4d/0x60 [kernel]
 0xffffffff8163a69c : tcf_block_put                    2c/0x50 [kernel]
 0xffffffffa095c1b5 : ingress_destroy                    15/0x20 [sch_ingress]
 0xffffffff8163582d : qdisc_destroy                    5d/0xb0 [kernel]
 0xffffffff81638d6c : notify_and_destroy                    2c/0x30 [kernel]
 0xffffffff81638ecf : qdisc_graft                    15f/0x380 [kernel]
 0xffffffff816398df : tc_get_qdisc                    18f/0x230 [kernel]
 0xffffffff816202ae : rtnetlink_rcv_msg                    ee/0x220 [kernel]
 0xffffffff816439f7 : netlink_rcv_skb                    e7/0x120 [kernel]
 0xffffffff8161a9d8 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff8164316c : netlink_unicast                    18c/0x240 [kernel]
 0xffffffff816434e5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
 0xffffffff815e9f18 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff815ea9f6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
 0x0 (inexact)
parms: tp=0xffff880c0bc43e40 f=0xffff880c39feba00
execname: tc
ts: 21
 0x7fb68130e7d0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x432284 : __rtnl_talk                    c4/0x3f0 [/auto/mtbcswgwork/chrism/iproute2/tc/tc]
 0x4088c7 : tc_qdisc_modify                    307/0x730 [/auto/mtbcswgwork/chrism/iproute2/tc/tc]
 0x407670 : main                    100/0x3b5 [/auto/mtbcswgwork/chrism/iproute2/tc/tc]
 0x7fb681237b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x40794e : _start                    29/0x2b [/auto/mtbcswgwork/chrism/iproute2/tc/tc]

__fl_delete
	call_rcu(&f->rcu, fl_destroy_filter);

 0xffffffff8163c7e8 : __tcf_hash_release                    58/0xc0 [kernel]
 0xffffffff8163cf52 : tcf_action_destroy                    62/0x90 [kernel]
 0xffffffff8163add2 : tcf_exts_destroy                    92/0xd0 [kernel]
 0xffffffffa0ab81dd : fl_destroy_filter                    1d/0x30 [cls_flower]
 0xffffffff810eb92c : rcu_process_callbacks                    1bc/0x4d0 [kernel]
 0xffffffff81730fad : __do_softirq                    ed/0x278 [kernel]
 0xffffffff8108b1b6 : irq_exit                    b6/0xc0 [kernel]
 0xffffffff81730a8d : smp_apic_timer_interrupt                    3d/0x50 [kernel]
 0xffffffff8172f3d3 : apic_timer_interrupt                    93/0xa0 [kernel]

GACT_TAB_MASK

 0xffffffff81667090 : tcf_hash_insert                    0/0x60 [kernel]
 0xffffffffa08b3301 : tcf_gact_init                    161/0x1f0 [act_gact]
 0xffffffff816680b7 : tcf_action_init_1                    237/0x3a0 [kernel]
 0xffffffff816682db : tcf_action_init                    bb/0x180 [kernel]
 0xffffffff816657a1 : tcf_exts_validate                    c1/0x110 [kernel]
 0xffffffffa08aca07 : fl_set_parms                    a7/0xa40 [cls_flower]
 0xffffffffa08ad5c0 : fl_change                    220/0x0 [cls_flower]
 0xffffffff81666d44 : tc_ctl_tfilter                    7f4/0x970 [kernel]
 0xffffffff8164b17c : rtnetlink_rcv_msg                    ac/0x240 [kernel]
 0xffffffff8166e7ed : netlink_rcv_skb                    ed/0x120 [kernel]
 0xffffffff81645158 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff8166df51 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166e2d2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
 0xffffffff816141e8 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff81614b3a : ___sys_sendmsg                    27a/0x290 [kernel]
 0xffffffff81616194 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff816161e2 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
 0xffffffff8175bbe7 : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: tn=0xffff8806a44ce4f0 a=0xffff8806a53e6100
execname: tc
ts: 13
 0x7f7e995c47a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x432194 : __rtnl_talk                    c4/0x3f0 [/home1/chrism/iproute2/tc/tc]
 0x40abfb : tc_filter_modify                    2db/0x710 [/home1/chrism/iproute2/tc/tc]
 0x407d15 : batch                    a5/0x170 [/home1/chrism/iproute2/tc/tc]
 0x7f7e994edb35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x4078be : _start                    29/0x2b [/home1/chrism/iproute2/tc/tc]


    tc -s filter show dev $link ingress

 0xffffffffa0a2acd0 : mlx5e_stats_flower                    0/0x210 [mlx5_core]
 0xffffffffa0a19bb8 : mlx5e_ndo_setup_tc                    58/0x80 [mlx5_core]
 0xffffffffa08abe0c : fl_dump                    56c/0xb70 [cls_flower]
 0xffffffff81665ffd : tcf_fill_node                    14d/0x1d0 [kernel]
 0xffffffff81666449 : tcf_node_dump                    49/0x50 [kernel]
 0xffffffffa08ab114 : fl_walk                    64/0x80 [cls_flower]
 0xffffffff816662e5 : tc_dump_tfilter                    265/0x380 [kernel]
 0xffffffff8166b6fc : netlink_dump                    12c/0x290 [kernel]
 0xffffffff8166cb76 : __netlink_dump_start                    186/0x1f0 [kernel]
 0xffffffff8164b218 : rtnetlink_rcv_msg                    148/0x240 [kernel]
 0xffffffff8166e7ed : netlink_rcv_skb                    ed/0x120 [kernel]
 0xffffffff81645158 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff8166df51 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166e2d2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
 0xffffffff816141e8 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff81614b3a : ___sys_sendmsg                    27a/0x290 [kernel]
 0xffffffff81616194 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff816161e2 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
 0xffffffff8175bbe7 : return_from_SYSCALL_64                    0/0x6a [kernel]
parms: priv=0xffff880c9a9c08c0 f=0xffffc900096238a0
execname: tc
ts: 38
 0x7f5fd0cfd7a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x433440 : rtnl_dump_request                    b0/0xc0 [/usr/sbin/tc]
 0x40b844 : tc_filter_list                    144/0x4f0 [/usr/sbin/tc]
 0x407cb0 : main                    100/0x3b5 [/usr/sbin/tc]
 0x7f5fd0c26b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x407f8e : _start                    29/0x2b [/usr/sbin/tc]


 0xffffffffa09aa730 : tcf_mirred_init                    0/0x0 [act_mirred]
 0xffffffff8165ed69 : tcf_action_init_1                    199/0x2a0 [kernel]
 0xffffffff8165ef21 : tcf_action_init                    b1/0x180 [kernel]
 0xffffffff8165ca76 : tcf_exts_validate                    c6/0x110 [kernel]
 0xffffffffa00cf917 : fl_set_parms                    a7/0x950 [cls_flower]
 0xffffffffa00d03dc : fl_change                    21c/0x0 [cls_flower]
 0xffffffff8165d85c : tc_ctl_tfilter                    33c/0x790 [kernel]
 0xffffffff816433f4 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
 0xffffffff81665287 : netlink_rcv_skb                    a7/0xc0 [kernel]
 0xffffffff8163d208 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff81664c41 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166502e : netlink_sendmsg                    32e/0x3b0 [kernel]
 0xffffffff8160cb68 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff8160d4b9 : ___sys_sendmsg                    279/0x290 [kernel]
 0xffffffff8160dec4 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff8160df12 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
 0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: net=0xffffffff81d24c40 nla=0xffff8806164b7cb0 est=0x0 a=0xffffc9000832b650 ovr=0x0 bind=0x1
execname: tc
ts: 9
 0x7fc18f0037a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x432194 : __rtnl_talk                    c4/0x3f0 [/home1/chrism/iproute2/tc/tc]
 0x40abfb : tc_filter_modify                    2db/0x710 [/home1/chrism/iproute2/tc/tc]
 0x4075e0 : main                    100/0x3b5 [/home1/chrism/iproute2/tc/tc]
 0x7fc18ef2cb35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x4078be : _start                    29/0x2b [/home1/chrism/iproute2/tc/tc]


/* tca flags definitions */
#define TCA_CLS_FLAGS_SKIP_HW   (1 << 0) /* don't offload filter to HW */
#define TCA_CLS_FLAGS_SKIP_SW   (1 << 1) /* don't use filter in SW */
#define TCA_CLS_FLAGS_IN_HW     (1 << 2) /* filter is offloaded to HW */
#define TCA_CLS_FLAGS_NOT_IN_HW (1 << 3) /* filter isn't offloaded to HW */

skip_hw
crash> cls_fl_filter.flags 0xffff880635bf3200 -x
  flags = 0x9
skip_sw
crash> cls_fl_filter.flags 0xffff880c614e8a00
  flags = 6

userland:

do_filter
	tc_filter_modify
		flower_parse_opt
			flower_print_eth_addr
		rtnl_talk

tc_action_modify
parse_gact
action_a2n

 0x7fefe95917a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
 0x432b64 : __rtnl_talk                    c4/0x3f0 [/home1/chrism/iproute2/tc/tc]
 0x40b2cb : tc_filter_modify                    2db/0x710 [/home1/chrism/iproute2/tc/tc]
 0x407cb0 : main                    100/0x3b5 [/home1/chrism/iproute2/tc/tc]
 0x7fefe94bab35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x407f8e : _start                    29/0x2b [/home1/chrism/iproute2/tc/tc]

kernel:


tc_ctl_tfilter
	nlmsg_parse
		nla_parse

/*
 *  <------- NLA_HDRLEN ------> <-- NLA_ALIGN(payload)-->
 * +---------------------+- - -+- - - - - - - - - -+- - -+
 * |        Header       | Pad |     Payload       | Pad |
 * |   (struct nlattr)   | ing |                   | ing |
 * +---------------------+- - -+- - - - - - - - - -+- - -+
 *  <-------------- nlattr->nla_len -------------->
 */

struct nlattr {
        __u16           nla_len;
        __u16           nla_type;
};

nla_parse_nested
	nla_parse

fl_set_key

fl_check_assign_mask
	fl_init_dissector

 0xffffffffa0061220 : fl_init_dissector                    0/0x310 [cls_flower]
 0xffffffffa00635a4 : fl_change                    444/0x0 [cls_flower]
 0xffffffff8165d85c : tc_ctl_tfilter                    33c/0x790 [kernel]
 0xffffffff816433f4 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
 0xffffffff81665287 : netlink_rcv_skb                    a7/0xc0 [kernel]
 0xffffffff8163d208 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff81664c41 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166502e : netlink_sendmsg                    32e/0x3b0 [kernel]
 0xffffffff8160cb68 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff8160d4b9 : ___sys_sendmsg                    279/0x290 [kernel]
 0xffffffff8160dec4 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff8160df12 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
 0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: head=0xffff88055eaff400 mask=0xffffc900081ef990
execname: tc


 0xffffffffa09134a0 : mlx5_add_flow_rules                    0/0x600 [mlx5_core]
 0xffffffffa091bdad : mlx5_eswitch_add_offloaded_rule                    11d/0x1d0 [mlx5_core]
 0xffffffffa0931a9d : mlx5e_configure_flower                    b7d/0xf20 [mlx5_core]
 0xffffffffa0922f13 : mlx5e_ndo_setup_tc                    e3/0x100 [mlx5_core]	mlx5e_setup_tc_cls_flower		mlx5e_setup_tc
 0xffffffffa006399c : fl_change                    83c/0x0 [cls_flower]
 0xffffffff8165d85c : tc_ctl_tfilter                    33c/0x790 [kernel]
 0xffffffff816433f4 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
 0xffffffff81665287 : netlink_rcv_skb                    a7/0xc0 [kernel]
 0xffffffff8163d208 : rtnetlink_rcv                    28/0x30 [kernel]
 0xffffffff81664c41 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166502e : netlink_sendmsg                    32e/0x3b0 [kernel]
 0xffffffff8160cb68 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff8160d4b9 : ___sys_sendmsg                    279/0x290 [kernel]
 0xffffffff8160dec4 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff8160df12 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
 0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: ft=0xffff88056b520000 spec=0xffff880b6adf0000 flow_act=0xffffc900090db7d0 dest=0xffffc900090db7e0 dest_num=0x2


mlx5e_ndo_setup_tc
	mlx5e_configure_flower
		parse_cls_flower
			__parse_cls_flower
		parse_tc_fdb_actions
			is_tcf_mirred_egress_redirect

fl_change
	fl_hw_replace_filter
		tc_can_offload
			if (!(dev->features & NETIF_F_HW_TC))
				return false;

 0xffffffffa091d700 : mlx5e_set_features                    0/0xd0 [mlx5_core]
 0xffffffff8162f46f : __netdev_update_features                    23f/0x690 [kernel]
 0xffffffff816308cc : ethtool_set_features                    cc/0x120 [kernel]
 0xffffffff816343f5 : dev_ethtool                    1235/0x1bd0 [kernel]
 0xffffffff81648821 : dev_ioctl                    181/0x520 [kernel]
 0xffffffff8160a4f2 : sock_do_ioctl                    42/0x50 [kernel]
 0xffffffff8160aa9d : sock_ioctl                    1ed/0x2d0 [kernel]
 0xffffffff81257e07 : do_vfs_ioctl                    a7/0x5e0 [kernel]
 0xffffffff812583b9 : SyS_ioctl                    79/0x90 [kernel]
 0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
 0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]
 0x0 (inexact)
parms: netdev=0xffff880b4b100000 features=0x403038214bb3
execname: ethtool
ts: 1aa01d
 0x7f6c79f72507 : ioctl                    7/0x30 [/usr/lib64/libc-2.17.so]
 0x405df1 : do_sfeatures                    351/0x5d0 [/usr/sbin/ethtool]
 0x4015f5 : main                    1a5/0x27f [/usr/sbin/ethtool]
 0x7f6c79ea5b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x4016f8 : _start                    29/0x31 [/usr/sbin/ethtool]

        .ndo_set_features        = mlx5e_set_features,

static const char netdev_features_strings[NETDEV_FEATURE_COUNT][ETH_GSTRING_LEN] = {
	[NETIF_F_HW_TC_BIT] =            "hw-tc-offload",
};

#define NETIF_F_HW_TC          __NETIF_F(HW_TC)
NETIF_F_HW_TC_BIT

[root@bjglab-18 ~]#     ethtool -K $link hw-tc-offload on;
crash> net_device.features ffff880b4b100000 -x
  features = 0x3038214bb3

NETIF_F_HW_TC_BIT

[root@bjglab-18 ~]#     ethtool -K $link hw-tc-offload off
crash> net_device.features ffff880b4b100000 -x
  features = 0x403038214bb3


The behavior of tc filters remains the same.  However a new tc action,
skbedit, has been added.  Assuming you wanted to route all traffic to a
specific host, for example 192.168.0.3, through a specific queue you could use
this action and establish a filter such as:

tc filter add dev p2p1 parent 1: protocol ip prio 1 u32 \
	match ip dst 1.1.1.19 \
	action skbedit queue_mapping 3

sch_htb.c
htb_enqueue

tc qdisc add dev p2p1 root handle 1: htb default 20
tc class add dev p2p1 parent 1:0 classid 1:10 htb rate 200kbit ceil 200kbit prio 1 mtu 1500
tc class add dev p2p1 parent 1:0 classid 1:20 htb rate 824kbit ceil 1024kbit prio 2 mtu 1500


Major number 0xffff is reserved for the ingress qdisc

tc filter show dev p2p1 protocol ip parent ffff:

http://wiki.linuxwall.info/doku.php/en:ressources:dossiers:networking:traffic_control

# tc qdisc add dev eth0 root handle 1: htb default 20
This command means “attach a root qdisc identified by id 1 to the device eth0, use htb as a scheduler and send everything to class 20 by default”.

[root@bjglab-18 workloads]# cat  /sys/class/net/p2p1/tx_queue_len
1000

===mirror===

[root@dev-r630-03 ~]# dmesg
[ 8810.091295] device enp4s0f2 left promiscuous mode
[ 8810.092263] del_rule: type: 1
[ 8810.095299] del_rule: type: 1
[ 8810.096406] del_rule: type: 1
[ 8811.243538] device enp4s0f3 left promiscuous mode
[ 8811.244519] del_rule: type: 1
[ 8811.247525] del_rule: type: 1
[ 8811.248724] del_rule: type: 1
[ 8823.338725] del_rule: type: 256
[ 8823.339581] mlx5_cmd_set_fte: id: 1, list_size: 0, action: 4
[ 8823.340352] mlx5_cmd_set_fte: id: 2, list_size: 1, action: 4
[ 8823.343783] del_rule: type: 0
[ 8823.344539] del_rule: type: 0
[ 8823.443766] del_rule: type: 256
[ 8823.444577] mlx5_cmd_set_fte: id: 1, list_size: 0, action: 4
[ 8823.445357] mlx5_cmd_set_fte: id: 65535, list_size: 1, action: 4
[ 8823.446739] del_rule: type: 0
[ 8823.447526] del_rule: type: 0
[ 8869.715394] fl_hw_replace_filter: is called
[ 8869.716272] mirror: 19
[ 8869.716963] mirror vport: 1
[ 8869.717644] redirect: 6
[ 8869.779828] mlx5_eswitch_add_offloaded_rule: dest[i].vport_num: 65535
[ 8869.783184] mlx5_cmd_set_fte: id: 1, list_size: 0, action: c
[ 8869.784006] mlx5_cmd_set_fte: id: 65535, list_size: 1, action: c
[ 8869.784803] mlx5_cmd_set_fte: flow_counter_id: 48
[ 8869.848272] fl_hw_replace_filter: is called
[ 8869.849232] mirror: 19
[ 8869.850068] mirror vport: 1
[ 8869.850837] redirect: 20
[ 8869.851582] mlx5_eswitch_add_offloaded_rule: dest[i].vport_num: 2
[ 8869.854352] mlx5_cmd_set_fte: id: 1, list_size: 0, action: c
[ 8869.855179] mlx5_cmd_set_fte: id: 2, list_size: 1, action: c
[ 8869.855937] mlx5_cmd_set_fte: flow_counter_id: 49 

https://redmine.mellanox.com/issues/1077699
Bug CD #1077699: Decapsulation in iterator entry will cause wrong IPv4/L4 Checksums on some iterations

tcf_mirred_init

fl_set_parms
	tcf_exts_init
		exts->action = TCA_FLOWER_ACT	(3)
		exts->police = 0
		tcf_action_init
	fl_set_key

TCA_ACT_MAX_PRIO

mlx5e_handle_csum

(gdb) print *(struct mirror *) 0x19e1400
$4 = {
  mbridge = 0x19f7cb0,
  idx = 0,
  aux = 0x19ff470,
  srcs = {
    map = {
      buckets = 0x19f32c0,
      one = 0x0,
      mask = 3,
      n = 4
    }
  },
  dsts = {
    map = {
      buckets = 0x19f4050,
      one = 0x0,
      mask = 3,
      n = 4
    }
  },
  vlans = {
    p = 0x0
  },
  out = 0x19e9390,
  out_vlan = 65535,
  snaplen = 0,
  dup_mirrors = 1,
  packet_count = 42,
  byte_count = 4192
}
(gdb) print *(struct mbundle *) 0x19e9390
$5 = {
  cmap_node = {
    next = {
      p = 0x0
    }
  },
  ofbundle = 0x19f4800,
  src_mirrors = 1,
  dst_mirrors = 1,
  mirror_out = 1
}
(gdb) print *(struct ofbundle *) 0x19f4800
$6 = {
  hmap_node = {
    hash = 2825527504,
    next = 0x19ef630
  },
  ofproto = 0x19d6bb0,
  aux = 0x19d5f80,
  name = 0x19f1300 "enp4s0f0_0",
  ports = {
    prev = 0x1a2f960,
    next = 0x1a2f960
  },
  vlan_mode = PORT_VLAN_ACCESS,
  qinq_ethtype = 34984,
  vlan = 50,
  trunks = 0x0,
  cvlans = 0x0,
  lacp = 0x0,
  bond = 0x0,
  use_priority_tags = false,
  protected = false,
  floodable = true
}

==list===

net_rx_action
	list_splice_init
	list_first_entry

==int===

alloc_comp_eqs
	mlx5_create_map_eq
		request_irq(mlx5_eq_int)

mlx5_eq_int
	mlx5_eq_cq_completion
		cq->comp	->	mlx5e_completion_event
			napi_schedule
				napi_schedule_prep
					set NAPIF_STATE_SCHED
					if NAPIF_STATE_SCHED is already set
						set NAPIF_STATE_MISSED
				__napi_schedule
					____napi_schedule
						__raise_softirq_irqoff(NET_RX_SOFTIRQ)

mlx5e_napi_poll
	mlx5e_poll_tx_cq
	mlx5e_poll_rx_cq
	napi_complete_done
		clear NAPIF_STATE_SCHED
		if NAPIF_STATE_MISSED is set
			__napi_schedule
	mlx5e_cq_arm

===trex===

ip netns exec n11 /usr/sbin/sshd -o PidFile=/run/sshd-oob.pid

https://blog.csdn.net/dreamer_20803826/article/details/88694974

sysctl -w kernel.sched_rt_runtime_us=-1

https://wikinox.mellanox.com/display/SW/AsapPerfTester
https://mellanox.cloud.panopto.eu/Panopto/Pages/Viewer.aspx?id=86a978fb-f69d-4bed-89f7-aa7e0141d095

===tcpdump===

ether proto 0x88cc

portrange 22-23

tcpdump -i $link src 192.168.1.14 and port 4000 and greater 100 -v -nn

FIN
tcpdump -i $rep2 "tcp[tcpflags] & (tcp-fin) != 0" -nn

tcpdump -i eth1 ether src 6c:41:6a:ac:11:42 -c 10

tcpdump host 192.1.1.4 -i ens8  -e

# incoming only
tcpdump src host 1.1.1.14 -e -xxx -i $vf2

# excluding arp
tcpdump ip src host 1.1.1.14 -e -xxx -i $vf2

[root@dev-r630-03 ~]#  tcpdump -nnvXSs 0 -c1 icmp -i $vf1
tcpdump: listening on enp4s0f2, link-type EN10MB (Ethernet), capture size 262144 bytes
11:09:34.861715 IP (tos 0x0, ttl 64, id 35562, offset 0, flags [none], proto ICMP (1), length 84)
    1.1.1.14 > 1.1.13.2: ICMP echo reply, id 19444, seq 653, length 64
        0x0000:  4500 0054 8aea 0000 4001 dfad 0101 010e  E..T....@.......
        0x0010:  0101 0d02 0000 3b8b 4bf4 028d dea1 0b5a  ......;.K......Z
        0x0020:  0000 0000 c024 0d00 0000 0000 1011 1213  .....$..........
        0x0030:  1415 1617 1819 1a1b 1c1d 1e1f 2021 2223  .............!"#
        0x0040:  2425 2627 2829 2a2b 2c2d 2e2f 3031 3233  $%&'()*+,-./0123
        0x0050:  3435 3637                                4567
1 packet captured
1 packet received by filter
0 packets dropped by kernel

# tcpdump -ttttnnvvS
2017-11-15 10:57:38.957580 IP (tos 0x0, ttl 64, id 34874, offset 0, flags [none], proto ICMP (1), length 84)
    1.1.1.14 > 1.1.13.2: ICMP echo reply, id 19356, seq 196, length 64
2017-11-15 10:57:39.981562 IP (tos 0x0, ttl 64, id 34875, offset 0, flags [none], proto ICMP (1), length 84)
    1.1.1.14 > 1.1.13.2: ICMP echo reply, id 19356, seq 197, length 64

[root@bjglab-18 ~]# tcpdump -nnepi p2p1
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on p2p1, link-type EN10MB (Ethernet), capture size 65535 bytes
02:56:39.260783 24:8a:07:88:27:ca > 24:8a:07:55:10:fc, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.3.18 > 192.168.3.19: ICMP echo request, id 9446, seq 3, length 64
02:56:39.260860 24:8a:07:55:10:fc > 24:8a:07:88:27:ca, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.3.19 > 192.168.3.18: ICMP echo reply, id 9446, seq 3, length 64
02:56:39.446350 24:8a:07:55:10:fc > 24:8a:07:88:27:ca, ethertype 802.1Q (0x8100), length 60: vlan 52, p 0, ethertype ARP, Request who-has 192.168.3.18 tell 192.168.3.19, length 42

tcpdump -i enp3s0f2 -vvv src host 192.168.2.19

tcpdump -i eth1 -XX
tcpdump: WARNING: eth1: no IPv4 address assigned
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth1, link-type EN10MB (Ethernet), capture size 65535 bytes
05:44:24.450946 IP 192.168.1.2 > localhost.localdomain: ICMP echo request, id 9955, seq 91, length 64
        0x0000:  5254 0060 7801 5254 0060 7802 8100 0034  RT.`x.RT.`x....4
        0x0010:  0800 4500 0054 28d3 4000 4001 8e82 c0a8  ..E..T(.@.@.....
        0x0020:  0102 c0a8 0101 0800 c7f9 26e3 005b 78bb  ..........&..[x.
        0x0030:  c758 0000 0000 03e1 0600 0000 0000 1011  .X..............
        0x0040:  1213 1415 1617 1819 1a1b 1c1d 1e1f 2021  ...............!
        0x0050:  2223 2425 2627 2829 2a2b 2c2d 2e2f 3031  "#$%&'()*+,-./01
        0x0060:  3233 3435 3637                           234567

tcpdump -i eth1 -Uw - | tcpdump -en -r - vlan 52
05:45:15.450943 52:54:00:60:78:01 > 52:54:00:60:78:02, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.1.1 > 192.168.1.2: ICMP echo reply, id 9955, seq 142, length 64
05:45:16.450896 52:54:00:60:78:02 > 52:54:00:60:78:01, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.1.2 > 192.168.1.1: ICMP echo request, id 9955, seq 143, length 64
05:45:16.450940 52:54:00:60:78:01 > 52:54:00:60:78:02, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.1.1 > 192.168.1.2: ICMP echo reply, id 9955, seq 143, length 64
05:45:17.450901 52:54:00:60:78:02 > 52:54:00:60:78:01, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.1.2 > 192.168.1.1: ICMP echo request, id 9955, seq 144, length 64
05:45:17.450945 52:54:00:60:78:01 > 52:54:00:60:78:02, ethertype 802.1Q (0x8100), length 102: vlan 52, p 0, ethertype IPv4, 192.168.1.1 > 192.168.1.2: ICMP echo reply, id 9955, seq 144, length 64

===vxlan===

execute_set_action
    skb_dst_set(skb)

vxlan_xmit
    skb_tunnel_info(skb)

0       0       swapper/7       udp_tun_rx_dst
        udp_tun_rx_dst  1 [kernel]
        udp_queue_rcv_one_skb  1d4 [kernel]
        udp_queue_rcv_skb  3f [kernel]
        udp_unicast_rcv_skb  77 [kernel]
        __udp4_lib_rcv  569 [kernel]
        udp_rcv  1a [kernel]
        ip_protocol_deliver_rcu  25 [kernel]
        ip_local_deliver_finish  45 [kernel]
        ip_local_deliver  df [kernel]
        ip_rcv_finish  84 [kernel]
        ip_rcv  c7 [kernel]
        __netif_receive_skb_one_core  57 [kernel]
        __netif_receive_skb  18 [kernel]
        netif_receive_skb_internal  45 [kernel]
        napi_gro_receive  120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq  26f [kernel]
        mlx5e_poll_rx_cq  dd [kernel]
        mlx5e_napi_poll  bb [kernel]
        net_rx_action  14d [kernel]
        __softirqentry_text_start  de [kernel]
        irq_exit  df [kernel]
        do_IRQ  8a [kernel]
        ret_from_intr  0 [kernel]
        cpuidle_enter_state  b4 [kernel]
        cpuidle_enter  17 [kernel]
        call_cpuidle  23 [kernel]
        do_idle  1e1 [kernel]
        cpu_startup_entry  1d [kernel]
        start_secondary  16f [kernel]
        secondary_startup_64  a4 [kernel]


0       0       swapper/7       vxlan_rcv
        vxlan_rcv  1 [kernel]
        udp_queue_rcv_skb  3f [kernel]
        udp_unicast_rcv_skb  77 [kernel]
        __udp4_lib_rcv  569 [kernel]
        udp_rcv  1a [kernel]
        ip_protocol_deliver_rcu  25 [kernel]
        ip_local_deliver_finish  45 [kernel]
        ip_local_deliver  df [kernel]
        ip_rcv_finish  84 [kernel]
        ip_rcv  c7 [kernel]
        __netif_receive_skb_one_core  57 [kernel]
        __netif_receive_skb  18 [kernel]
        netif_receive_skb_internal  45 [kernel]
        napi_gro_receive  120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq  26f [kernel]
        mlx5e_poll_rx_cq  dd [kernel]
        mlx5e_napi_poll  bb [kernel]
        net_rx_action  14d [kernel]
        __softirqentry_text_start  de [kernel]
        irq_exit  df [kernel]
        do_IRQ  8a [kernel]
        ret_from_intr  0 [kernel]
        cpuidle_enter_state  b4 [kernel]
        cpuidle_enter  17 [kernel]
        call_cpuidle  23 [kernel]
        do_idle  1e1 [kernel]
        cpu_startup_entry  1d [kernel]
        start_secondary  16f [kernel]
        secondary_startup_64  a4 [kernel]


static void gen_vxlan_header_ipv4(struct net_device *out_dev,
                                  char buf[], int encap_size,
                                  unsigned char h_dest[ETH_ALEN],
                                  u8 tos, u8 ttl,
                                  __be32 daddr,
                                  __be32 saddr,
                                  __be16 udp_dst_port,
                                  __be32 vx_vni)
{
        struct ethhdr *eth = (struct ethhdr *)buf;
        struct iphdr  *ip = (struct iphdr *)((char *)eth + sizeof(struct ethhdr));
        struct udphdr *udp = (struct udphdr *)((char *)ip + sizeof(struct iphdr));
        struct vxlanhdr *vxh = (struct vxlanhdr *)((char *)udp + sizeof(struct udphdr));

 0xffffffffa090cef0 : vxlan_rcv                    0/0xa30 [vxlan]
 0xffffffff816ab8fc : udp_queue_rcv_skb                    1ec/0x3b0 [kernel]
 0xffffffff816abf02 : __udp4_lib_rcv                    442/0xb50 [kernel]
 0xffffffff816aca0a : udp_rcv                    1a/0x20 [kernel]
 0xffffffff81678454 : ip_local_deliver_finish                    94/0x1e0 [kernel]
 0xffffffff8167875f : ip_local_deliver                    6f/0xe0 [kernel]
 0xffffffff816780fb : ip_rcv_finish                    db/0x3a0 [kernel]
 0xffffffff81678a77 : ip_rcv                    2a7/0x400 [kernel]
 0xffffffff81631160 : __netif_receive_skb_core                    380/0x9e0 [kernel]
 0xffffffff816317d8 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff81632490 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8163304d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa010bcd4 : mlx5e_handle_rx_cqe_mpwrq                    594/0x830 [mlx5_core]
 0xffffffffa010bff3 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa010cd13 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
 0xffffffff816329f0 : net_rx_action                    260/0x3c0 [kernel]
 0xffffffff8175b9b9 : __do_softirq                    c9/0x28c [kernel]
 0xffffffff81095599 : irq_exit                    d9/0xf0 [kernel]
 0xffffffff8175ab31 : do_IRQ                    51/0xd0 [kernel]
 0xffffffff81758993 : ret_from_intr                    0/0x1b [kernel]


vxlan_xmit_one
	vxlan_get_route
	vxlan_build_skb
		__skb_push
		struct vxlanhdr *vxh;
		vni=98=0x62
	udp_tunnel_xmit_skb
		__skb_push
		iptunnel_xmit
			ip_local_out
				dst_output

rt_dst_alloc
	rt->dst.output = ip_output;


 0xffffffffa093eff0 : vxlan_open                    0/0x0 [vxlan]
 0xffffffff81634fa9 : __dev_open                    c9/0x140 [kernel]
 0xffffffff816352bd : __dev_change_flags                    9d/0x160 [kernel]
 0xffffffff816353a9 : dev_change_flags                    29/0x60 [kernel]
 0xffffffffa094a176 : vxlan_tnl_create                    176/0x200 [vport_vxlan]
 0xffffffffa094a212 : vxlan_create                    12/0x30 [vport_vxlan]
 0xffffffffa091d2f8 : ovs_vport_add                    c8/0x120 [openvswitch]
 0xffffffffa0910c22 : new_vport                    12/0x50 [openvswitch]
 0xffffffffa09125a1 : ovs_vport_cmd_new                    151/0x2e0 [openvswitch]
 0xffffffff8166c046 : genl_family_rcv_msg                    1f6/0x3e0 [kernel]
 0xffffffff8166c274 : genl_rcv_msg                    44/0x90 [kernel]
 0xffffffff8166b557 : netlink_rcv_skb                    a7/0xc0 [kernel]
 0xffffffff8166bc08 : genl_rcv                    28/0x40 [kernel]
 0xffffffff8166af11 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff8166b2fe : netlink_sendmsg                    32e/0x3b0 [kernel]
 0xffffffff81612b78 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff816134c9 : ___sys_sendmsg                    279/0x290 [kernel]
 0xffffffff81613ed4 : __sys_sendmsg                    54/0x90 [kernel]
 0xffffffff81613f22 : sys_sendmsg                    12/0x20 [kernel]
 0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
parms: dev=0xffff880c1428e000
execname: ovs-vswitchd
ts: 270eba
 0x7efc6a6729fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
 0x514f28 : nl_sock_transact_multiple__                    f8/0x430 [/usr/local/sbin/ovs-vswitchd]
 0x51531e : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/local/sbin/ovs-vswitchd]
 0x515441 : nl_sock_transact                    41/0xc0 [/usr/local/sbin/ovs-vswitchd]
 0x5162b0 : nl_transact                    40/0x60 [/usr/local/sbin/ovs-vswitchd]
 0x50ac08 : dpif_netlink_vport_transact                    f8/0x280 [/usr/local/sbin/ovs-vswitchd]
 0x50b813 : dpif_netlink_port_add__                    1d3/0x4c0 [/usr/local/sbin/ovs-vswitchd]
 0x50bb36 : dpif_netlink_port_add                    36/0x60 [/usr/local/sbin/ovs-vswitchd]
 0x469c4c : dpif_port_add                    4c/0x100 [/usr/local/sbin/ovs-vswitchd]
 0x4254a8 : port_add                    b8/0x130 [/usr/local/sbin/ovs-vswitchd]
 0x41c851 : ofproto_port_add                    31/0xf0 [/usr/local/sbin/ovs-vswitchd]
 0x40b4f9 : bridge_add_ports__                    369/0x7e0 [/usr/local/sbin/ovs-vswitchd]
 0x40ceaf : bridge_reconfigure                    6af/0x3260 [/usr/local/sbin/ovs-vswitchd]
 0x410286 : bridge_run                    216/0x19d0 [/usr/local/sbin/ovs-vswitchd]
 0x4070e5 : main                    345/0x480 [/usr/local/sbin/ovs-vswitchd]
 0x7efc69dbab35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x407e63 : _start                    29/0x36 [/usr/local/sbin/ovs-vswitchd]

static const struct net_device_ops vxlan_netdev_ether_ops = {
        .ndo_init               = vxlan_init,
        .ndo_uninit             = vxlan_uninit,
        .ndo_open               = vxlan_open,
        .ndo_stop               = vxlan_stop,
        .ndo_start_xmit         = vxlan_xmit,
        .ndo_get_stats64        = ip_tunnel_get_stats64,
        .ndo_set_rx_mode        = vxlan_set_multicast_list,
        .ndo_change_mtu         = vxlan_change_mtu,
        .ndo_validate_addr      = eth_validate_addr,
        .ndo_set_mac_address    = eth_mac_addr,
        .ndo_fdb_add            = vxlan_fdb_add,
        .ndo_fdb_del            = vxlan_fdb_delete,
        .ndo_fdb_dump           = vxlan_fdb_dump,
        .ndo_fill_metadata_dst  = vxlan_fill_metadata_dst,
};

static const struct net_device_ops vxlan_netdev_raw_ops = {
        .ndo_init               = vxlan_init,
        .ndo_uninit             = vxlan_uninit,
        .ndo_open               = vxlan_open,
        .ndo_stop               = vxlan_stop,
        .ndo_start_xmit         = vxlan_xmit,
        .ndo_get_stats64        = ip_tunnel_get_stats64,
        .ndo_change_mtu         = vxlan_change_mtu,
        .ndo_fill_metadata_dst  = vxlan_fill_metadata_dst,
};

vxlan_open
vxlan_sock_add
__vxlan_sock_add
vxlan_socket_create
vxlan_create_sock
udp_sock_create
udp_sock_create4
	sock_create_kern
	kernel_bind
	kernel_connect

239.119.1.1


mlx5e_configure_flower
parse_tc_fdb_actions
mlx5e_attach_encap
mlx5e_create_encap_header_ipv4
	mlx5e_route_lookup_ipv4

mlx5_encap_alloc

vxlan_netdevice_event
vxlan_push_rx_ports
udp_tunnel_push_rx_port

        .ndo_udp_tunnel_add      = mlx5e_add_vxlan_port,
        .ndo_udp_tunnel_del      = mlx5e_del_vxlan_port,


__vxlan_sock_add
vxlan_socket_create
udp_tunnel_notify_add_rx_port
dev->netdev_ops->ndo_udp_tunnel_add
mlx5e_add_vxlan_port
mlx5e_vxlan_queue_work
mlx5e_vxlan_add_port
mlx5e_vxlan_core_add_port_cmd(MLX5_CMD_OP_ADD_VXLAN_UDP_DPORT)


 0xffffffffa019f600 : mlx5e_get_stats                    110/0x140 [mlx5_core]
 0xffffffffa1167d94 : __vxlan_sock_add                    1b4/0x400 [vxlan]
 0xffffffffa1168134 : vxlan_open                    154/0x250 [vxlan]
 0xffffffff8160fbc9 : __dev_open                    c9/0x140 [kernel]
 0xffffffff8160fedd : __dev_change_flags                    9d/0x160 [kernel]
 0xffffffff8160ffc9 : dev_change_flags                    29/0x60 [kernel]
 0xffffffffa1178179 : vxlan_tnl_create                    179/0x200 [vport_vxlan]
 0xffffffffa1178212 : vxlan_create                    12/0x30 [vport_vxlan]
 0xffffffffa114a178 : ovs_vport_add                    c8/0x120 [openvswitch]
 0xffffffffa113dbc2 : new_vport                    12/0x50 [openvswitch]
 0xffffffffa113f821 : ovs_vport_cmd_new                    151/0x2e0 [openvswitch]
 0xffffffff81647dbe : genl_family_rcv_msg                    20e/0x400 [kernel]
 0xffffffff81647ffc : genl_rcv_msg                    4c/0xa0 [kernel]
 0xffffffff816472dd : netlink_rcv_skb                    ed/0x120 [kernel]
 0xffffffff81647998 : genl_rcv                    28/0x40 [kernel]
 0xffffffff81646a41 : netlink_unicast                    181/0x240 [kernel]
 0xffffffff81646dc2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
 0xffffffff815ed248 : sock_sendmsg                    38/0x50 [kernel]
 0xffffffff815edb9a : ___sys_sendmsg                    27a/0x290 [kernel]
 0xffffffff815ef164 : __sys_sendmsg                    54/0x90 [kernel]
parms: netdev=0xffff880c66b20000 ti=0xffffc90000487742
execname: ovs-vswitchd
ts: 5
 0x7fd81ec8f9fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
 0x51a2e8 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
 0x51a6de : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/sbin/ovs-vswitchd]
 0x51a801 : nl_sock_transact                    41/0xc0 [/usr/sbin/ovs-vswitchd]
 0x51b670 : nl_transact                    40/0x60 [/usr/sbin/ovs-vswitchd]
 0x50c388 : dpif_netlink_vport_transact                    f8/0x280 [/usr/sbin/ovs-vswitchd]
 0x50cf93 : dpif_netlink_port_add__                    1d3/0x4c0 [/usr/sbin/ovs-vswitchd]
 0x50d2b6 : dpif_netlink_port_add                    36/0x60 [/usr/sbin/ovs-vswitchd]
 0x46997e : dpif_port_add                    4e/0x150 [/usr/sbin/ovs-vswitchd]
 0x425478 : port_add                    b8/0x130 [/usr/sbin/ovs-vswitchd]
 0x41c821 : ofproto_port_add                    31/0xf0 [/usr/sbin/ovs-vswitchd]
 0x40b4e9 : bridge_add_ports__                    369/0x7e0 [/usr/sbin/ovs-vswitchd]
 0x40ce9f : bridge_reconfigure                    6af/0x3260 [/usr/sbin/ovs-vswitchd]
 0x410296 : bridge_run                    226/0x19e0 [/usr/sbin/ovs-vswitchd]
 0x4070b5 : main                    315/0x450 [/usr/sbin/ovs-vswitchd]
 0x7fd81e3d7b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
 0x407e53 : _start                    29/0x36 [/usr/sbin/ovs-vswitchd]
11




 0xffffffffa0101330 : mlx5e_xmit                    0/0x30 [mlx5_core]
 0xffffffff81633ef1 : dev_hard_start_xmit                    a1/0x210 [kernel]
 0xffffffff8165e425 : sch_direct_xmit                    105/0x1b0 [kernel]
 0xffffffff8163457f : __dev_queue_xmit                    42f/0x630 [kernel]
 0xffffffff81634790 : dev_queue_xmit                    10/0x20 [kernel]
 0xffffffff816add68 : arp_xmit                    38/0xa0 [kernel]
 0xffffffff816ade15 : arp_send_dst.part.19                    45/0x50 [kernel]
 0xffffffff816aeb72 : arp_process                    6b2/0x720 [kernel]
 0xffffffff816aed40 : arp_rcv                    140/0x1c0 [kernel]
 0xffffffff81631160 : __netif_receive_skb_core                    380/0x9e0 [kernel]
 0xffffffff816317d8 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff81632490 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8163304d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa0103cd4 : mlx5e_handle_rx_cqe_mpwrq                    594/0x830 [mlx5_core]
 0xffffffffa0103ff3 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa0104d13 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
 0xffffffff816329f0 : net_rx_action                    260/0x3c0 [kernel]
 0xffffffff8175b9b9 : __do_softirq                    c9/0x28c [kernel]
 0xffffffff81095599 : irq_exit                    d9/0xf0 [kernel]
 0xffffffff8175ab31 : do_IRQ                    51/0xd0 [kernel]
parms: skb=0xffff88064a4a6900 dev=0xffff8805d5590000
execname: swapper/4
ts: 41483e
<no user backtrace at module("mlx5_core").function("mlx5e_xmit@drivers/net/ethernet/mellanox/mlx5/core/en_tx.c:398")>

 0xffffffffa0101330 : mlx5e_xmit                    0/0x30 [mlx5_core]
 0xffffffff81633ef1 : dev_hard_start_xmit                    a1/0x210 [kernel]
 0xffffffff8165e425 : sch_direct_xmit                    105/0x1b0 [kernel]
 0xffffffff8163457f : __dev_queue_xmit                    42f/0x630 [kernel]
 0xffffffff81634790 : dev_queue_xmit                    10/0x20 [kernel]
 0xffffffff8167bdbf : ip_finish_output2                    28f/0x390 [kernel]
 0xffffffff8167d3b6 : ip_finish_output                    136/0x1e0 [kernel]
 0xffffffff8167de66 : ip_output                    76/0xe0 [kernel]
 0xffffffff8167d5b5 : ip_local_out                    35/0x40 [kernel]

 0xffffffff816c669e : iptunnel_xmit                    13e/0x1a0 [kernel]
 0xffffffffa093342c : udp_tunnel_xmit_skb                    fc/0x110 [udp_tunnel]
 0xffffffffa093c6f7 : vxlan_xmit_one                    7e7/0xa50 [vxlan]
 0xffffffffa093e19f : vxlan_xmit                    33f/0xd50 [vxlan]

 0xffffffff81633ef1 : dev_hard_start_xmit                    a1/0x210 [kernel]
 0xffffffff81634653 : __dev_queue_xmit                    503/0x630 [kernel]
 0xffffffff81634790 : dev_queue_xmit                    10/0x20 [kernel]
 0xffffffffa091d93d : ovs_vport_send                    cd/0x180 [openvswitch]
 0xffffffffa090f163 : do_output                    53/0xf0 [openvswitch]
 0xffffffffa0910931 : do_execute_actions                    991/0xa40 [openvswitch]
 0xffffffffa0910a20 : ovs_execute_actions                    40/0x120 [openvswitch]
parms: skb=0xffff8805dde05500 dev=0xffff880c983d0000


 0xffffffffa093de60 : vxlan_xmit                    0/0xd50 [vxlan]
 0xffffffff81633ef1 : dev_hard_start_xmit                    a1/0x210 [kernel]
 0xffffffff81634653 : __dev_queue_xmit                    503/0x630 [kernel]
 0xffffffff81634790 : dev_queue_xmit                    10/0x20 [kernel]
 0xffffffffa091d93d : ovs_vport_send                    cd/0x180 [openvswitch]
 0xffffffffa090f163 : do_output                    53/0xf0 [openvswitch]
 0xffffffffa0910931 : do_execute_actions                    991/0xa40 [openvswitch]
 0xffffffffa0910a20 : ovs_execute_actions                    40/0x120 [openvswitch]
 0xffffffffa0914424 : ovs_dp_process_packet                    84/0x120 [openvswitch]
 0xffffffffa091d813 : ovs_vport_receive                    73/0xd0 [openvswitch]
 0xffffffffa091e263 : netdev_frame_hook                    d3/0x160 [openvswitch]
 0xffffffff81630fba : __netif_receive_skb_core                    1da/0x9e0 [kernel]
 0xffffffff816317d8 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff81632490 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8163304d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa01033e1 : mlx5e_handle_rx_cqe_rep                    671/0x9d0 [mlx5_core]
 0xffffffffa0103ff3 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa0104d13 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
 0xffffffff816329f0 : net_rx_action                    260/0x3c0 [kernel]
 0xffffffff8175b9b9 : __do_softirq                    c9/0x28c [kernel]
parms: skb=0xffff8805dde05100 dev=0xffff8805a6304000

 0xffffffffa0933330 : udp_tunnel_xmit_skb                    0/0x110 [udp_tunnel]
 0xffffffffa093c6f7 : vxlan_xmit_one                    7e7/0xa50 [vxlan]
 0xffffffffa093e19f : vxlan_xmit                    33f/0xd50 [vxlan]
 0xffffffff81633ef1 : dev_hard_start_xmit                    a1/0x210 [kernel]
 0xffffffff81634653 : __dev_queue_xmit                    503/0x630 [kernel]
 0xffffffff81634790 : dev_queue_xmit                    10/0x20 [kernel]
 0xffffffffa091d93d : ovs_vport_send                    cd/0x180 [openvswitch]
 0xffffffffa090f163 : do_output                    53/0xf0 [openvswitch]
 0xffffffffa0910931 : do_execute_/ctions                    991/0xa40 [openvswitch]
 0xffffffffa0910a20 : ovs_execute_actions                    40/0x120 [openvswitch]
 0xffffffffa0914424 : ovs_dp_process_packet                    84/0x120 [openvswitch]
 0xffffffffa091d813 : ovs_vport_receive                    73/0xd0 [openvswitch]
 0xffffffffa091e263 : netdev_frame_hook                    d3/0x160 [openvswitch]
 0xffffffff81630fba : __netif_receive_skb_core                    1da/0x9e0 [kernel]
 0xffffffff816317d8 : __netif_receive_skb                    18/0x60 [kernel]
 0xffffffff81632490 : netif_receive_skb_internal                    40/0xb0 [kernel]
 0xffffffff8163304d : napi_gro_receive                    cd/0x140 [kernel]
 0xffffffffa01033e1 : mlx5e_handle_rx_cqe_rep                    671/0x9d0 [mlx5_core]
 0xffffffffa0103ff3 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
 0xffffffffa0104d13 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
parms: rt=0xffff88057a869600 sk=0xffff8806a7116cc0 skb=0xffff880ca10f2500 src=0x1201a8c0 dst=0x1301a8c0 tos=0x0 ttl=0x40 df=0x40 src_port=0x10b4 dst_port=0xb512 xnet=0x0 nocheck=0x1

[root@bjglab-18 stap]# x 12b5
0x12b5 = 4789 = 4.68K = 0.00M = 0.00G
0000 0000 0000 0000 0001 0010 1011 0101


vxlan_vs_find_vni
	/* For flow based devices, map all packets to VNI 0 */
	if (vs->flags & VXLAN_F_COLLECT_METADATA)
		vni = 0;

===mlxsw===

MLXSW_TRAP_ID_MAX

===mi===

*#*#6484#*#*进入工程模式校准距离传感器

===netlink===

0xffffffffa08fca90 : fl_change                    0/0x0 [cls_flower]
0xffffffff8163c2c3 : tc_ctl_tfilter                    813/0x9a0 [kernel]
0xffffffff8162058c : rtnetlink_rcv_msg                    ac/0x240 [kernel]
0xffffffff81643ced : netlink_rcv_skb                    ed/0x120 [kernel]
0xffffffff8161a448 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81643451 : netlink_unicast                    181/0x240 [kernel]
0xffffffff816437d2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
0xffffffff815e9348 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815e9c9a : ___sys_sendmsg                    27a/0x290 [kernel]
0xffffffff815eb264 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff815eb2b2 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8172c767 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: net=0xffffffff81cd28c0 in_skb=0xffff8810336fb300 tp=0xffff880f234a05a0 base=0x0 handle=0x80000001 tca=0xffffc90007e2ba98 arg=0xffffc90007e2ba90 ovr=0x0
execname: tc
ts: 3
0x7f6fe9f0b7a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x4396d7 : __rtnl_talk                    d7/0x400 [/usr/sbin/tc]
0x40bd8d : tc_filter_modify                    3ed/0x800 [/usr/sbin/tc]
0x407e92 : main                    112/0x410 [/usr/sbin/tc]
0x7f6fe9e34b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4081b9 : _start                    29/0x30 [/usr/sbin/tc]

include/net/pkt_cls.h

tc_dump_tfilter walks all tcf_proto
fl_walk	        walks all cls_fl_filter
fl_dump         dumps all keys

0xffffffffa0a343b0 : tcf_gact_dump                     0/0x190 [act_gact]
0xffffffff8163c6b7 : tcf_action_dump_1                     d7/0x140 [kernel]
0xffffffff8163cb64 : tcf_action_dump                     94/0xf0 [kernel]
0xffffffff81639ed4 : tcf_exts_dump                     e4/0x1f0 [kernel]
0xffffffffa0a27c3a : fl_dump                     3ea/0xb70 [cls_flower]
0xffffffff8163a4ef : tcf_fill_node                     10f/0x180 [kernel]
0xffffffff8163a84a : TCF_node_dump                     3a/0x40 [kernel]
0xffffffffa0a27154 : fl_walk                     64/0x80 [cls_flower]
0xffffffff8163a6f3 : tc_dump_tfilter                     193/0x2b0 [kernel]
0xffffffff8163f9a2 : netlink_dump                     122/0x290 [kernel]
0xffffffff8164096f : __netlink_dump_start                     15f/0x190 [kernel]
0xffffffff8161fbfe : rtnetlink_rcv_msg                     1ae/0x220 [kernel]
0xffffffff81642987 : netlink_rcv_skb                     e7/0x120 [kernel]

0xffffffff8161a338 : rtnetlink_rcv                     28/0x30 [kernel]			# rtnl_lock/rtnl_unlock

static void rtnetlink_rcv(struct sk_buff *skb)
{
    rtnl_lock();
    netlink_rcv_skb(skb, &rtnetlink_rcv_msg);
    rtnl_unlock();
}

netlink_unicast
netlink_unicast_kernel
nlk->netlink_rcv

0xffffffff816420fc : netlink_unicast                     18c/0x240 [kernel]
0xffffffff81642475 : netlink_sendmsg                     2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                     38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                      2b6/0x2d0 [kernel]
0x0 (inexact)
parms: skb=0xffff880b0e767600 a=0xffff880b8d667300 bind=0x0 ref=0x0
execname: tc
ts: 1
0x7f88d8cea7d0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x433440 : rtnl_dump_request                    b0/0xc0 [/usr/sbin/tc]
0x40b844 : tc_filter_list                    144/0x4f0 [/usr/sbin/tc]
0x407cb0 : main                    100/0x3b5 [/usr/sbin/tc]
0x7f88d8c13b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x407f8e : _start                    29/0x2b [/usr/sbin/tc]



https://tools.ietf.org/html/rfc3549

Process ID (PID): 32 bits
The PID of the process sending the message.  The PID is used by the
kernel to multiplex to the correct sockets.  A PID of zero is used
when sending messages to user space from the kernel.


net/netlink/af_netlink.c
struct netlink_table *nl_table __read_mostly;
struct netlink_table *nl_table

p nl_table

NETLINK_ROUTE

output *(struct netlink_table *) nl_table

hash -a 0xffff88102aa1e180 -s netlink_sock -m node -p | grep portid
portid = 0x578007b7,
dst_portid = 0x0,
portid = 0xad0007b7,
dst_portid = 0x0,
portid = 0x18f9,
dst_portid = 0x0,


5d1
5040
510e
510f

tc:
rtnl_open_byproto

to get portid:
call netlink_autobind()

0xffffffff8165d490 : netlink_autobind.isra.37                    0/0x100 [kernel]
0xffffffff8165df14 : netlink_bind                    1b4/0x250 [kernel]
0xffffffff816035c2 : SYSC_bind                    d2/0x110 [kernel]
0xffffffff81604e5e : SyS_bind                    e/0x10 [kernel]
0xffffffff81003a77 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8174b327 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: sock=?
execname: tc
ts: 254
0x7f0d7aca3427 : bind                    7/0x30 [/usr/lib64/libc-2.17.so]
0x439af9 : rtnl_open_byproto                    d9/0x1f0 [/usr/sbin/tc]
0x40863b : batch                    6b/0x1c0 [/usr/sbin/tc]
0x7f0d7abccb35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4081b9 : _start                    29/0x30 [/usr/sbin/tc]


0xffffffff8165dfe6 : netlink_release                    36/0x510 [kernel]
0xffffffff81601d3f : sock_release                    1f/0x80 [kernel]
0xffffffff81601db2 : sock_close                    12/0x20 [kernel]
0xffffffff8122dd21 : __fput                    e1/0x210 [kernel]
0xffffffff8122de8e : ____fput                    e/0x10 [kernel]
0xffffffff810a6363 : task_work_run                    83/0xa0 [kernel]
0xffffffff81082b81 : exit_to_usermode_loop                    66/0x92 [kernel]
0xffffffff81003b4a : do_syscall_64                    13a/0x150 [kernel]
0xffffffff8174b327 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: sk=?
execname: tc
ts: 2
0x7f38a8248ba0 : __close_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x439a0f : rtnl_close                    f/0x20 [/usr/sbin/tc]
0x4086ea : batch                    11a/0x1c0 [/usr/sbin/tc]
0x7f38a8181b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4081b9 : _start                    29/0x30 [/usr/sbin/tc]

address family:	AF_NETLINK
protocl:	NETLINK_ROUTE
message type:	RTM_NEWTFILTER

===ovs-dpctl===

lib/dpctl.c

static const struct dpctl_command all_commands[] = {
{ "add-dp", "dp [iface...]", 1, INT_MAX, dpctl_add_dp, DP_RW },
{ "del-dp", "dp", 1, 1, dpctl_del_dp, DP_RW },
{ "add-if", "dp iface...", 2, INT_MAX, dpctl_add_if, DP_RW },
{ "del-if", "dp iface...", 2, INT_MAX, dpctl_del_if, DP_RW },
{ "set-if", "dp iface...", 2, INT_MAX, dpctl_set_if, DP_RW },
{ "dump-dps", "", 0, 0, dpctl_dump_dps, DP_RO },
{ "show", "[dp...]", 0, INT_MAX, dpctl_show, DP_RO },
{ "dump-flows", "[dp] [filter=..] [type=..]",
  0, 3, dpctl_dump_flows, DP_RO },
{ "add-flow", "[dp] flow actions", 2, 3, dpctl_add_flow, DP_RW },
{ "mod-flow", "[dp] flow actions", 2, 3, dpctl_mod_flow, DP_RW },
{ "get-flow", "[dp] ufid", 1, 2, dpctl_get_flow, DP_RO },
{ "del-flow", "[dp] flow", 1, 2, dpctl_del_flow, DP_RW },
{ "del-flows", "[dp]", 0, 1, dpctl_del_flows, DP_RW },
{ "dump-conntrack", "[dp] [zone=N]", 0, 2, dpctl_dump_conntrack, DP_RO },
{ "flush-conntrack", "[dp] [zone=N]", 0, 2, dpctl_flush_conntrack, DP_RW },
{ "ct-stats-show", "[dp] [zone=N] [verbose]",
  0, 3, dpctl_ct_stats_show, DP_RO },
{ "ct-bkts", "[dp] [gt=N]", 0, 2, dpctl_ct_bkts, DP_RO },
{ "help", "", 0, INT_MAX, dpctl_help, DP_RO },
{ "list-commands", "", 0, INT_MAX, dpctl_list_commands, DP_RO },

/* Undocumented commands for testing. */
{ "parse-actions", "actions", 1, INT_MAX, dpctl_parse_actions, DP_RO },
{ "normalize-actions", "actions",
  2, INT_MAX, dpctl_normalize_actions, DP_RO },

{ NULL, NULL, 0, 0, NULL, DP_RO },
};

===ovs===

open_vconn__
ovs_rundir

commit 608ff46aaf0dd4330c2488c260ee42992e17a6fd
Author: John Hurley <john.hurley@netronome.com>
Date:   Tue Apr 9 15:36:14 2019 +0100

    ovs-tc: offload datapath rules matching on internal ports

    Rules applied to OvS internal ports are not represented in TC datapaths.
    However, it is possible to support rules matching on internal ports in TC.
    The start_xmit ndo of OvS internal ports directs packets back into the OvS
    kernel datapath where they are rematched with the ingress port now being
    that of the internal port. Due to this, rules matching on an internal port
    can be added as TC filters to an egress qdisc for these ports.

    Allow rules applied to internal ports to be offloaded to TC as egress
    filters. Rules redirecting to an internal port are also offloaded. These
    are supported by the redirect ingress functionality applied in an earlier
    patch.

    Signed-off-by: John Hurley <john.hurley@netronome.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>



netdev_port_get

log_flow_put_message

format_odp_action

format_odp_recirc_action

2019-06-14T07:37:32.687Z|00004|dpif_netlink(handler152)|DBG|system@ovs-system: put[create] ufid:86aca336-2914-4ef4-9bd3-0b18c7ceaa66 recirc_id(0x2),dp_hash(0/0),skb_priority(0/0),in_port(3),skb_mark(0/0),ct_state(0x21/0),ct_zone(0x7/0),ct_mark(0/0),ct_label(0/0),ct_tuple4(src=192.168.0.2/0.0.0.0,dst=8.9.10.11/0.0.0.0,proto=17/0,tp_src=55574/0,tp_dst=8080/0),eth(src=02:25:d0:13:01:02/00:00:00:00:00:00,dst=24:8a:07:ad:77:99),eth_type(0x0800),ipv4(src=192.168.0.2,dst=8.9.10.11/0.0.0.0,proto=17/0,tos=0/0,ttl=64/0,frag=no),udp(src=55574/0,dst=8080/0), actions:set(ipv4(src=128.0.103.87)),ct(commit,zone=65534,mark=0x6757/0xffffffff,label=0xc0a80002/0xffffffff,nat(src=100.64.0.10)),recirc(0x3)

netdev_tc_flow_put


#define MAX_DEPTH 64

https://blog.csdn.net/vonzhoufz/column/info/ovs-code-learing

[root@dev-r630-04 systemtap]# pidstat -t -p 3794
Linux 5.0.0-rc7+ (dev-r630-04.mtbc.labs.mlnx)   02/26/2019      _x86_64_        (16 CPU)

04:54:25 PM   UID      TGID       TID    %usr %system  %guest   %wait    %CPU   CPU  Command
04:54:25 PM   990      3794         -    0.19    0.40    0.00    0.00    0.59     4  ovs-vswitchd
04:54:25 PM   990         -      3794    0.03    0.05    0.00    0.00    0.08     4  |__ovs-vswitchd
04:54:25 PM   990         -      6163    0.00    0.00    0.00    0.00    0.01    10  |__urcu5
04:54:25 PM   990         -      6282    0.00    0.00    0.00    0.00    0.00    11  |__handler82
04:54:25 PM   990         -      6283    0.00    0.00    0.00    0.00    0.00     3  |__handler83
04:54:25 PM   990         -      6284    0.00    0.00    0.00    0.00    0.00    14  |__handler84
04:54:25 PM   990         -      6285    0.00    0.00    0.00    0.00    0.00     7  |__handler85
04:54:25 PM   990         -      6286    0.00    0.00    0.00    0.00    0.00    15  |__handler86
04:54:25 PM   990         -      6287    0.00    0.00    0.00    0.00    0.00     5  |__handler87
04:54:25 PM   990         -      6288    0.00    0.00    0.00    0.00    0.00     9  |__handler88
04:54:25 PM   990         -      6290    0.00    0.00    0.00    0.00    0.00    10  |__handler89
04:54:25 PM   990         -      6291    0.00    0.00    0.00    0.00    0.00    12  |__handler90
04:54:25 PM   990         -      6292    0.00    0.00    0.00    0.00    0.00     2  |__handler91
04:54:25 PM   990         -      6293    0.00    0.00    0.00    0.00    0.00    13  |__handler92
04:54:25 PM   990         -      6294    0.04    0.09    0.00    0.00    0.13     0  |__revalidator93
04:54:25 PM   990         -      6295    0.03    0.06    0.00    0.01    0.09    10  |__revalidator94
04:54:25 PM   990         -      6296    0.03    0.06    0.00    0.01    0.09    12  |__revalidator95
04:54:25 PM   990         -      6297    0.03    0.06    0.00    0.01    0.09     2  |__revalidator96
04:54:25 PM   990         -      6298    0.03    0.06    0.00    0.01    0.09    14  |__revalidator97

[root@dev-r630-03 ~]# ovs-appctl ofproto/trace br in_port=1,dl_src=02:25:d0:13:01:02,dl_dst=02:25:d0:13:01:03 -generate
Flow: in_port=1,vlan_tci=0x0000,dl_src=02:25:d0:13:01:02,dl_dst=02:25:d0:13:01:03,dl_type=0x0000

bridge("br")
------------
 0. priority 0
    NORMAL
     -> learned that 02:25:d0:13:01:02 is on port enp4s0f0_0 in VLAN 0
     -> forwarding to learned port

Final flow: unchanged
Megaflow: recirc_id=0,eth,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=02:25:d0:13:01:02,dl_dst=02:25:d0:13:01:03,dl_type=0x0000
Datapath actions: 4


nla_memdup_cookie
netdev_tc_flow_dump_next
	memset(ufid, 0, sizeof(*ufid));

commit 1045ba77a5962a22bce7777678ef46714107ea63
Author: Jamal Hadi Salim <jhs@mojatatu.com>
Date:   Tue Jan 24 07:02:41 2017 -0500

    net sched actions: Add support for user cookies

    Introduce optional 128-bit action cookie.
    Like all other cookie schemes in the networking world (eg in protocols
    like http or existing kernel fib protocol field, etc) the idea is to save
    user state that when retrieved serves as a correlator. The kernel
    _should not_ intepret it.  The user can store whatever they wish in the
    128 bits.

    Sample exercise(showing variable length use of cookie)

commit dbf75ecd9ae1773c6eaed4d865baf37cae28ae3b
Author: Paul Blakey <paulb@mellanox.com>
Date:   Tue Oct 3 13:25:12 2017 +0300

    fixes for centos7.2 offloading backport

    Change-Id: I01af1decb8a9e6b4074efb918ac38ea48336488f

/.autodirect/mswg/release/linux/ovs_release/latest-asap-mlnx-ofed/openvswitch/openvswitch 


ovs-dpctl dump-flows  type=offloaded
ovs-vsctl set Open_vSwitch . other_config:n-revalidator-threads=5

ofproto_max_idle



 0xffffffffa0dec8b0 : ovs_vport_get_stats            0/0x90 [openvswitch]
 0xffffffffa0ddef0c : ovs_vport_cmd_fill_info            18c/0x200 [openvswitch]
 0xffffffffa0ddf28b : ovs_vport_cmd_get            7b/0xe0 [openvswitch]
 0xffffffff816801a4 : genl_family_rcv_msg            1e4/0x390 [kernel]
 0xffffffff81680397 : genl_rcv_msg            47/0x90 [kernel]
 0xffffffff8167e3fd : netlink_rcv_skb            4d/0x130 [kernel]
 0xffffffff8167eba4 : genl_rcv            24/0x40 [kernel]
 0xffffffff8167dc96 : netlink_unicast            196/0x230 [kernel]
 0xffffffff8167dfde : netlink_sendmsg            2ae/0x3a0 [kernel]
 0xffffffff81616b06 : sock_sendmsg            36/0x40 [kernel]
 0xffffffff8161727f : ___sys_sendmsg            26f/0x2d0 [kernel]
 0xffffffff816185ce : __sys_sendmsg            5e/0xa0 [kernel] (inexact)
 0xffffffff8100421b : do_syscall_64            5b/0x180 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe            44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: vport=0xffff881031afb980 stats=0xffffc90001637a40
execname: ovs-vswitchd
ts: 63
 0x7f3fdf5c5ee4 : sendmsg            54/0xb0 [/usr/lib64/libpthread-2.26.so]
 0x532eb1 : nl_sock_transact_multiple__            121/0x490 [/usr/sbin/ovs-vswitchd]
 0x5332dc : nl_sock_transact_multiple.part.8            bc/0x1a0 [/usr/sbin/ovs-vswitchd]
 0x533401 : nl_sock_transact            41/0xc0 [/usr/sbin/ovs-vswitchd]
 0x5342c0 : nl_transact            40/0x60 [/usr/sbin/ovs-vswitchd]
 0x5248f8 : dpif_netlink_vport_transact            98/0x150 [/usr/sbin/ovs-vswitchd]
 0x52589d : dpif_netlink_vport_get            3d/0x50 [/usr/sbin/ovs-vswitchd]
 0x52a014 : get_stats_via_vport            54/0x1f0 [/usr/sbin/ovs-vswitchd]
 0x52a5a7 : netdev_linux_get_stats            47/0x1a0 [/usr/sbin/ovs-vswitchd]
 0x4945bb : netdev_get_stats            5b/0xa0 [/usr/sbin/ovs-vswitchd]
 0x408c30 : iface_refresh_stats.part.27            50/0x520 [/usr/sbin/ovs-vswitchd]
 0x410e58 : bridge_run            1508/0x1930 [/usr/sbin/ovs-vswitchd]
 0x4069b5 : main            2c5/0x480 [/usr/sbin/ovs-vswitchd]
 0x7f3fdeccbf2a : __libc_start_main            ea/0x1c0 [/usr/lib64/libc-2.26.so]
 0x4078da : _start            2a/0x30 [/usr/sbin/ovs-vswitchd]

Linux kernel in $KBUILD is version $kversion, but version newer than 4.15.x is not supported
acinclude.m4
patchlevel

sudo ovs-appctl vlog/set tc:file:DBG
sudo ovs-appctl vlog/set dpif_netlink:file:DBG
sudo ovs-appctl vlog/set netdev_tc_offloads:file:DBG 

ovs-appctl vlog/set tc:file:DBG netdev_tc_offloads:file:DBG

VLOG_ERR("%s is called", __func__);

const struct netdev_class netdev_linux_class =
NETDEV_LINUX_CLASS(
    "system",
    netdev_linux_construct,
    netdev_linux_get_stats,
    netdev_linux_get_features,
    netdev_linux_get_status,
    LINUX_FLOW_OFFLOAD_API);

nl_msg_put_flower_acts

parse_flow_put
    VLOG_ERR_RL(&rl, "offloading multiple ports isn't supported");

handle_upcalls
    should_install_flow
    put_op_init
            op->dop.type = DPIF_OP_FLOW_PUT

/* offload or not */
dpif_netlink_operate



0xffffffffa0af6db0 : ovs_flow_cmd_del                   0/0x2a0 [openvswitch]
0xffffffff8165dab5 : genl_family_rcv_msg                   1f5/0x3e0 [kernel]
0xffffffff8165dcec : genl_rcv_msg                   4c/0x90 [kernel]
0xffffffff8165d121 : netlink_rcv_skb                   91/0x130 [kernel]
0xffffffff8165d8a8 : genl_rcv                   28/0x40 [kernel]
0xffffffff8165c914 : netlink_unicast                   1a4/0x240 [kernel]
0xffffffff8165cc5d : netlink_sendmsg                   2ad/0x3a0 [kernel]
0xffffffff81602038 : sock_sendmsg                   38/0x50 [kernel]
0xffffffff81602999 : ___sys_sendmsg                   269/0x2c0 [kernel]
0x0 (inexact)
parms: skb=0xffff880721f19100 info=0xffffc9000131fae0
execname: revalidator15
ts: 23
0x7f1ee30ea7e4 : sendmsg                   54/0xb0 [/usr/lib64/libpthread-2.26.so]
0x525ab1 : nl_sock_transact_multiple__                   121/0x490 [/usr/sbin/ovs-vswitchd]
0x525edc : nl_sock_transact_multiple.part.8                   bc/0x1a0 [/usr/sbin/ovs-vswitchd]
0x526edb : nl_transact_multiple                   8b/0xa0 [/usr/sbin/ovs-vswitchd]
0x516b11 : dpif_netlink_operate__                   441/0x600 [/usr/sbin/ovs-vswitchd]
0x517a86 : dpif_netlink_operate                   36/0x70 [/usr/sbin/ovs-vswitchd]
0x46f438 : dpif_operate                   a8/0x260 [/usr/sbin/ovs-vswitchd]
0x4396fa : push_dp_ops.part.11                   6a/0x290 [/usr/sbin/ovs-vswitchd]
0x43c174 : revalidate.isra.21                   444/0x800 [/usr/sbin/ovs-vswitchd]
0x43c5a1 : udpif_revalidator                   71/0x3a0 [/usr/sbin/ovs-vswitchd]
0x4dc5e4 : ovsthread_wrapper                   64/0x70 [/usr/sbin/ovs-vswitchd]
0x7f1ee30df609 : start_thread                   d9/0x3b0 [/usr/lib64/libpthread-2.26.so]
0x7f1ee28afe6f : clone                   3f/0x60 [/usr/lib64/libc-2.26.so]


dpif_netlink_operate

(gdb) bt
#0  dpif_operate (dpif=0x557daa0f2d10, ops=ops@entry=0x7f5c05d2f608, n_ops=n_ops@entry=1, offload_type=offload_type@entry=DPIF_OFFLOAD_AUTO) at lib/dpif.c:1330
#1  0x0000557da8cfa183 in dpif_execute (dpif=<optimized out>, execute=execute@entry=0x7f5c05d2f6a0) at lib/dpif.c:1314
#2  0x0000557da8cfa562 in dpif_execute (execute=0x7f5c05d2f6a0, dpif=<optimized out>) at lib/dpif.c:1230
#3  dpif_execute_helper_cb (aux_=aux_@entry=0x7f5c05d2fbf0, packets_=packets_@entry=0x7f5c05d2fc10, action=action@entry=0x7f5c05d51e5c, should_steal=<optimized out>)
    at lib/dpif.c:1238
#4  0x0000557da8d28c35 in odp_execute_actions (dp=dp@entry=0x7f5c05d2fbf0, batch=batch@entry=0x7f5c05d2fc10, steal=steal@entry=false, actions=<optimized out>,
    actions_len=<optimized out>, dp_execute_action=dp_execute_action@entry=0x557da8cfa1d0 <dpif_execute_helper_cb>) at lib/odp-execute.c:794
#5  0x0000557da8cf77ad in dpif_execute_with_help (dpif=dpif@entry=0x557daa0f2d10, execute=execute@entry=0x7f5c05d31230) at lib/dpif.c:1290
#6  0x0000557da8cf9ad8 in dpif_operate (dpif=0x557daa0f2d10, ops=0x7f5c05d2fe00, n_ops=n_ops@entry=30, offload_type=offload_type@entry=DPIF_OFFLOAD_AUTO) at lib/dpif.c:1416
#7  0x0000557da8cbabc4 in handle_upcalls (n_upcalls=<optimized out>, upcalls=0x7f5c05d51a00, udpif=<optimized out>) at ofproto/ofproto-dpif-upcall.c:1609
#8  recv_upcalls (handler=<optimized out>, handler=<optimized out>) at ofproto/ofproto-dpif-upcall.c:855
#9  0x0000557da8cbad84 in udpif_upcall_handler (arg=0x557daa160900) at ofproto/ofproto-dpif-upcall.c:759
#10 0x0000557da8d7a87f in ovsthread_wrapper (aux_=<optimized out>) at lib/ovs-thread.c:352
#11 0x00007f5c081186db in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0
#12 0x00007f5c0789b88f in clone () from /lib/x86_64-linux-gnu/libc.so.6


0xffffffffa0af711f : ovs_flow_cmd_new                   cf/0x560 [openvswitch]
0xffffffff8165dab5 : genl_family_rcv_msg                   1f5/0x3e0 [kernel]
0xffffffff8165dcec : genl_rcv_msg                   4c/0x90 [kernel]
0xffffffff8165d121 : netlink_rcv_skb                   91/0x130 [kernel]
0xffffffff8165d8a8 : genl_rcv                   28/0x40 [kernel]
0xffffffff8165c914 : netlink_unicast                   1a4/0x240 [kernel]
0xffffffff8165cc5d : netlink_sendmsg                   2ad/0x3a0 [kernel]
0xffffffff81602038 : sock_sendmsg                   38/0x50 [kernel]
0xffffffff81602999 : ___sys_sendmsg                   269/0x2c0 [kernel]
0x0 (inexact)
parms: net=0xffffffff81cd6a80 match=0xffffc900012df840 nla_key=0xffff88074958882c nla_mask=0xffff8807495888b4 log=0x1
execname: handler10
ts: 2
0x7f1ee30ea7e4 : sendmsg                   54/0xb0 [/usr/lib64/libpthread-2.26.so]
0x525ab1 : nl_sock_transact_multiple__                   121/0x490 [/usr/sbin/ovs-vswitchd]
0x525edc : nl_sock_transact_multiple.part.8                   bc/0x1a0 [/usr/sbin/ovs-vswitchd]
0x526edb : nl_transact_multiple                   8b/0xa0 [/usr/sbin/ovs-vswitchd]
0x516b11 : dpif_netlink_operate__                   441/0x600 [/usr/sbin/ovs-vswitchd]
0x517a86 : dpif_netlink_operate                   36/0x70 [/usr/sbin/ovs-vswitchd]
0x46f438 : dpif_operate                   a8/0x260 [/usr/sbin/ovs-vswitchd]
0x43ba5e : recv_upcalls.isra.22                   6ee/0x950 [/usr/sbin/ovs-vswitchd]
0x43bd02 : udpif_upcall_handler                   42/0x70 [/usr/sbin/ovs-vswitchd]
0x4dc5e4 : ovsthread_wrapper                   64/0x70 [/usr/sbin/ovs-vswitchd]
0x7f1ee30df609 : start_thread                   d9/0x3b0 [/usr/lib64/libpthread-2.26.so]
0x7f1ee28afe6f : clone                   3f/0x60 [/usr/lib64/libc-2.26.so]





0xffffffffa017bce0 : mlx5_add_flow_rules                   0/0xe30 [mlx5_core]
0xffffffffa01876d0 : mlx5_eswitch_add_offloaded_rule                   110/0x230 [mlx5_core]
0xffffffffa019e69c : mlx5e_tc_add_fdb_flow                   5c/0x150 [mlx5_core]
0xffffffffa019fe58 : mlx5e_configure_flower                   588/0xda0 [mlx5_core]
0xffffffffa01a26c5 : mlx5e_rep_ndo_setup_tc                   c5/0xe0 [mlx5_core]
0xffffffffa0b36ebe : fl_change                   a4e/0xf80 [cls_flower]
0xffffffff81655103 : tc_ctl_tfilter                   423/0x9d0 [kernel]
0xffffffff81638c93 : rtnetlink_rcv_msg                   1a3/0x200 [kernel]
0xffffffff8165d121 : netlink_rcv_skb                   91/0x130 [kernel]
0xffffffff81633228 : rtnetlink_rcv                   28/0x30 [kernel]
0xffffffff8165c914 : netlink_unicast                   1a4/0x240 [kernel]
0xffffffff8165cc5d : netlink_sendmsg                   2ad/0x3a0 [kernel]
0xffffffff81602038 : sock_sendmsg                   38/0x50 [kernel]
0xffffffff81602999 : ___sys_sendmsg                   269/0x2c0 [kernel]
0x0 (inexact)
parms: ft=0xffff88074fa95200 spec=0xffff8807afb68000 flow_act=0xffffc90001b77710 dest=0xffffc90001b77720 dest_num=0x2
execname: handler14
ts: 7
0x7f4fab65e7e4 : sendmsg                   54/0xb0 [/usr/lib64/libpthread-2.26.so]
0x525ab1 : nl_sock_transact_multiple__                   121/0x490 [/usr/sbin/ovs-vswitchd]
0x525edc : nl_sock_transact_multiple.part.8                   bc/0x1a0 [/usr/sbin/ovs-vswitchd]
0x526001 : nl_sock_transact                   41/0xc0 [/usr/sbin/ovs-vswitchd]
0x526e30 : nl_transact                   40/0x60 [/usr/sbin/ovs-vswitchd]
0x528a5e : tc_replace_flower                   26e/0xa90 [/usr/sbin/ovs-vswitchd]
0x523668 : netdev_tc_flow_put                   af8/0x1210 [/usr/sbin/ovs-vswitchd]
0x517712 : dpif_netlink_operate  .part.29                   222/0x560 [/usr/sbin/ovs-vswitchd]
0x46f438 : dpif_operate                   a8/0x260 [/usr/sbin/ovs-vswitchd]
0x43ba5e : recv_upcalls.isra.22                   6ee/0x950 [/usr/sbin/ovs-vswitchd]
0x43bd02 : udpif_upcall_handler                   42/0x70 [/usr/sbin/ovs-vswitchd]
0x4dc5e4 : ovsthread_wrapper                   64/0x70 [/usr/sbin/ovs-vswitchd]
0x7f4fab653609 : start_thread                   d9/0x3b0 [/usr/lib64/libpthread-2.26.so]
0x7f4faae23e6f : clone                   3f/0x60 [/usr/lib64/libc-2.26.so]

dpif_netlink_operate__
    dpif_netlink_init_flow_put

dpif_netlink_recv__
	epoll_wait

try_send_to_netdev
parse_flow_put
    struct dpif_flow_put {
netdev_flow_put

dpif_netlink_class
    dpif_netlink_flow_dump_next

static const struct dpif_class *base_dpif_classes[] = {
#if defined(__linux__) || defined(_WIN32)
& dpif_netlink_class,
#endif
& dpif_netdev_class,
};

udpif_upcall_handler
udpif_revalidator

(gdb) info threads
Id   Target Id         Frame
* 1    Thread 0x7f175b78e540 (LWP 14435) "ovs-vswitchd" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
2    Thread 0x7f17537fe700 (LWP 14443) "urcu5" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
3    Thread 0x7f17517fa700 (LWP 14449) "handler10" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
4    Thread 0x7f1751ffb700 (LWP 14450) "handler11" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
5    Thread 0x7f17527fc700 (LWP 14451) "handler12" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
6    Thread 0x7f1752ffd700 (LWP 14452) "handler13" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
7    Thread 0x7f1759b03700 (LWP 14454) "handler14" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
8    Thread 0x7f1759302700 (LWP 14455) "revalidator15" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
9    Thread 0x7f1758b01700 (LWP 14456) "revalidator16" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
10   Thread 0x7f1753fff700 (LWP 14458) "revalidator17" 0x00007f175a23e8bb in poll () from /lib64/libc.so.6
11   Thread 0x7f175b7ad980 (LWP 14459) "ovs-vswitchd" 0x00007f175aa811e6 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0

const struct ofproto_class ofproto_dpif_class = {

rule_expire

revalidate

vswitchd/vswitch.xml

ofproto_max_idle = max_idle;

netdev_tc_flow_get
tc_get_flower
parse_netlink_to_tc_flower
nl_parse_flower_options
nl_parse_flower_actions
nl_parse_single_action
nl_parse_act_mirred

git show f98e418fbdb629760db96bbd37a9a981a9b27ee9

18ebd48cfb01ea0e239c6820520a1c57063cc58f

commit 53611f7b05460ee60cc94d67e14ac8945de4b4f9
Author: Paul Blakey <paulb@mellanox.com>
Date:   Tue Jun 13 18:03:29 2017 +0300

other-config: Add hw-offload switch to control netdev flow offloading

Add a new configuration option - hw-offload that enables netdev
flow api. Enabling this option will allow offloading flows
using netdev implementation instead of the kernel datapath.
This configuration option defaults to false - disabled.

Signed-off-by: Paul Blakey <paulb@mellanox.com>
Reviewed-by: Roi Dayan <roid@mellanox.com>
Acked-by: Flavio Leitner <fbl@sysclose.org>
Signed-off-by: Simon Horman <simon.horman@netronome.com>

#define LINUX_FLOW_OFFLOAD_API                                  \
        netdev_tc_flow_flush,                               \
        netdev_tc_flow_dump_create,                         \
        netdev_tc_flow_dump_destroy,                        \
        netdev_tc_flow_dump_next,                           \
        netdev_tc_flow_put,                                 \
        netdev_tc_flow_get,                                 \
        netdev_tc_flow_del,                                 \
        netdev_tc_init_flow_api

dpif_flow_get
    op.type = DPIF_OP_FLOW_GET

try_send_to_netdev ( DPIF_OP_FLOW_GET )
netdev_tc_flow_get
tc_get_flower
parse_netlink_to_tc_flower
nl_parse_flower_options
nl_parse_flower_actions
nl_parse_single_action
nl_parse_act_mirred

parse_ethertype

ovs-appctl vlog/list

ovs-appctl vlog/set ANY:console:dbg
ovs-appctl vlog/set ANY:syslog:dbg
ovs-appctl vlog/set ANY:file:dbg

ovs-appctl vlog/set ovs-vswitchd:console:dbg
ovs-appctl vlog/set ovs-vswitchd:syslog:dbg
ovs-appctl vlog/set ovs-vswitchd:file:dbg


p netdev_flow_api_enabled
p tc_policy


p netdev_flow_api_enabled
p tc_policy

p netdev_flow_api_enabled

./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc

0xffffffffa09d7a90 : fl_change                    0/0x0 [cls_flower]
0xffffffff8163c2a3 : tc_ctl_tfilter                    813/0x9a0 [kernel]
0xffffffff8162056c : rtnetlink_rcv_msg                    ac/0x240 [kernel]
0xffffffff81643ded : netlink_rcv_skb                    ed/0x120 [kernel]
0xffffffff8161a428 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81643551 : netlink_unicast                    181/0x240 [kernel]
0xffffffff816438d2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
0xffffffff815e9348 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815e9c9a : ___sys_sendmsg                    27a/0x290 [kernel]
0xffffffff815eb264 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff815eb2b2 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8172c827 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: net=0xffffffff81cd28c0 in_skb=0xffff880fac190b00 tp=0xffff880fe9ab5660 base=0xfff3 handle=0x0 tca=0xffffc90005367a98 arg=0xffffc90005367a90 ovr=0x0
execname: ovs-vswitchd
ts: 6
0x7f22d4c199fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
0x51ef68 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
0x51f2d4 : nl_sock_transact_multiple.part.8                    34/0x100 [/usr/sbin/ovs-vswitchd]
0x52033b : nl_transact_multiple                    8b/0xa0 [/usr/sbin/ovs-vswitchd]
0x522616 : tc_insert_multiple                    186/0x250 [/usr/sbin/ovs-vswitchd]
0x51b9fd : netdev_start_test_helper                    1fd/0x2c0 [/usr/sbin/ovs-vswitchd]
0x5035cf : unixctl_server_run                    39f/0x4b0 [/usr/sbin/ovs-vswitchd]
0x407bff : main                    34f/0x480 [/usr/sbin/ovs-vswitchd]
0x7f22d4361b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4089b3 : _start                    29/0x36 [/usr/sbin/ovs-vswitchd]


#time ovs-appctl offloads/test 2 50 100 1
ethtool -K eth0 hw-tc-offload off
restart-ovs
time ovs-appctl offloads/test 2 50 100 1
restart-ovs
time ovs-appctl offloads/test 2 50 100 0
restart-ovs
time ovs-appctl offloads/test 2 50 1000 1
restart-ovs
time ovs-appctl offloads/test 2 50 1000 0
restart-ovs
time ovs-appctl offloads/test 2 50 8000 1
time ovs-appctl offloads/test 2 50 8000 0
restart-ovs
time ovs-appctl offloads/test 2 50 8000 0
restart-ovs
time ovs-appctl offloads/test 2 50 250 1


open_dpif_backer

/* All existing ofproto_backer instances, indexed by ofproto->up.type. */
struct shash all_dpif_backers = SHASH_INITIALIZER(&all_dpif_backers);

/* All existing ofproto_dpif instances, indexed by ->up.name. */
struct hmap all_ofproto_dpifs = HMAP_INITIALIZER(&all_ofproto_dpifs);


(gdb) b find_match_wc
Breakpoint 1 at 0x45837b: file lib/classifier.c, line 1646.
(gdb) c
Continuing.
[Switching to Thread 0x7f3b6d0e0700 (LWP 3173)]

Breakpoint 1, classifier_lookup__ (cls=0x20e7768, version=version@entry=6, flow=flow@entry=0x7f3b6d0a0bc0, wc=wc@entry=0x7f3b6d0c0bf8, allow_conjunctive_matches=allow_conjunctive_matches@entry=true) at lib/classifier.c:969
969             match = find_match_wc(subtable, version, flow, trie_ctx, cls->n_tries,
(gdb) bt
#0  classifier_lookup__ (cls=0x20e7768, version=version@entry=6, flow=flow@entry=0x7f3b6d0a0bc0, wc=wc@entry=0x7f3b6d0c0bf8, allow_conjunctive_matches=allow_conjunctive_matches@entry=true) at lib/classifier.c:969
#1  0x000000000045b19b in classifier_lookup (cls=<optimized out>, version=version@entry=6, flow=flow@entry=0x7f3b6d0a0bc0, wc=wc@entry=0x7f3b6d0c0bf8) at lib/classifier.c:1163
#2  0x000000000042b098 in rule_dpif_lookup_in_table (ofproto=0x20de740, wc=0x7f3b6d0c0bf8, flow=0x7f3b6d0a0bc0, table_id=0 '\000', version=6) at ofproto/ofproto-dpif.c:4031
#3  rule_dpif_lookup_from_table (ofproto=0x20de740, version=6, flow=flow@entry=0x7f3b6d0a0bc0, wc=0x7f3b6d0c0bf8, stats=0x7f3b6d0a05d0, table_id=table_id@entry=0x7f3b6d09f85b "", in_port=4, may_packet_in=may_packet_in@entry=true,
honor_table_miss=honor_table_miss@entry=true, xcache=0x0) at ofproto/ofproto-dpif.c:4136
#4  0x000000000044606b in xlate_actions (xin=xin@entry=0x7f3b6d0a0bb0, xout=xout@entry=0x7f3b6d0c0ba0) at ofproto/ofproto-dpif-xlate.c:6348
#5  0x000000000043904b in upcall_xlate (wc=0x7f3b6d0c0bf8, odp_actions=0x7f3b6d0c0bb8, upcall=0x7f3b6d0c0b40, udpif=0x2101480) at ofproto/ofproto-dpif-upcall.c:1153
#6  process_upcall (udpif=udpif@entry=0x2101480, upcall=upcall@entry=0x7f3b6d0c0b40, odp_actions=odp_actions@entry=0x7f3b6d0c0bb8, wc=wc@entry=0x7f3b6d0c0bf8) at ofproto/ofproto-dpif-upcall.c:1292
#7  0x0000000000439b65 in recv_upcalls (handler=0x2100b90, handler=0x2100b90) at ofproto/ofproto-dpif-upcall.c:824
#8  0x000000000043a09a in udpif_upcall_handler (arg=0x2100b90) at ofproto/ofproto-dpif-upcall.c:746
#9  0x00000000004d3644 in ovsthread_wrapper (aux_=<optimized out>) at lib/ovs-thread.c:348
#10 0x00007f3b6f1eddc5 in start_thread () from /lib64/libpthread.so.0
#11 0x00007f3b6ea1276d in clone () from /lib64/libc.so.6

add_internal_miss_flow

add_internal_flows
ofproto_dpif_add_internal_flow
rule_dpif_lookup_in_table
classifier_lookup
classifier_lookup__
find_match_wc		# wildcard
find_match

gdb  /usr/sbin/ovs-vswitchd 19139

netdev_flow_api_enabled

netdev_set_flow_api_enabled

WARNING: DWARF expression stack underflow in CFI
0xffffffffa00e2c20 : mlx5e_configure_flower                    0/0x11c0 [mlx5_core]
0xffffffffa00e5f09 : mlx5e_rep_ndo_setup_tc                    69/0xc0 [mlx5_core]
0xffffffffa115cc1b : fl_change                    88b/0xb10 [cls_flower]
0xffffffff8163ad7d : tc_ctl_tfilter                    42d/0x7c0 [kernel]
0xffffffff8161fb3e : rtnetlink_rcv_msg                    ee/0x220 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff8161a338 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: priv=0xffff880c692408c0 protocol=0x8 f=0xffffc90001da7910
execname: handler26
ts: 2
0x7fddc3a729fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
0x51a2e8 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
0x51a6de : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/sbin/ovs-vswitchd]
0x51a801 : nl_sock_transact                    41/0xc0 [/usr/sbin/ovs-vswitchd]
0x51b670 : nl_transact                    40/0x60 [/usr/sbin/ovs-vswitchd]
0x50e5ec : tc_replace_flower                    26c/0xa30 [/usr/sbin/ovs-vswitchd]
0x5104d2 : netdev_tc_flow_put                    ba2/0x1160 [/usr/sbin/ovs-vswitchd]
0x50ae8a : dpif_netlink_operate                    26a/0x5f0 [/usr/sbin/ovs-vswitchd]
0x46af53 : dpif_operate                    63/0x2e0 [/usr/sbin/ovs-vswitchd]
0x439d81 : recv_upcalls.isra.21                    4a1/0x770 [/usr/sbin/ovs-vswitchd]
0x43a09a : udpif_upcall_handler                    4a/0x80 [/usr/sbin/ovs-vswitchd]
0x4d3644 : ovsthread_wrapper                    74/0x80 [/usr/sbin/ovs-vswitchd]
0x7fddc3a6bdc5 : start_thread                    c5/0x300 [/usr/lib64/libpthread-2.17.so]
0x7fddc329076d : clone                    6d/0x90 [/usr/lib64/libc-2.17.so]


const struct ofproto_class ofproto_dpif_class = {

udpif_set_threads
    udpif_start_threads
            udpif_upcall_handler
                    recv_upcalls
                            handle_upcalls
                                    dpif_operate
                                            dpif_flow_put

dpif_operate

struct udpif_key {
    ovs_u128 ufid;                 /* Unique flow identifier. */
}

dpif_flow_hash	set 128bit ufid

0xffffffffa0a5ee30 : ovs_flow_tbl_lookup_ufid                    0/0x1e0 [openvswitch]
0xffffffffa0a54c47 : ovs_flow_cmd_del                    217/0x280 [openvswitch]
0xffffffff81643328 : genl_family_rcv_msg                    1f8/0x3d0 [kernel]
0xffffffff8164354c : genl_rcv_msg                    4c/0x90 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff81643118 : genl_rcv                    28/0x40 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: tbl=0xffff880c85f36920 ufid=0xffffc9000644f878
execname: revalidator29
ts: 35
0x7f3e2a58c9fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
0x51a2e8 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
0x51a6de : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/sbin/ovs-vswitchd]
0x51b71b : nl_transact_multiple                    8b/0xa0 [/usr/sbin/ovs-vswitchd]
0x509db1 : dpif_netlink_operate__                    181/0x620 [/usr/sbin/ovs-vswitchd]
0x50aef6 : dpif_netlink_operate                    2d6/0x5f0 [/usr/sbin/ovs-vswitchd]
0x46af53 : dpif_operate                    63/0x2e0 [/usr/sbin/ovs-vswitchd]
0x4373c3 : push_dp_ops                    73/0x260 [/usr/sbin/ovs-vswitchd]
0x43a64d : revalidate.isra.20                    57d/0x730 [/usr/sbin/ovs-vswitchd]
0x43a88b : udpif_revalidator                    8b/0x390 [/usr/sbin/ovs-vswitchd]
0x4d3644 : ovsthread_wrapper                    74/0x80 [/usr/sbin/ovs-vswitchd]
0x7f3e2a585dc5 : start_thread                    c5/0x300 [/usr/lib64/libpthread-2.17.so]
0x7f3e29daa76d : clone                    6d/0x90 [/usr/lib64/libc-2.17.so]

0xffffffffa0a5ee30 : ovs_flow_tbl_lookup_ufid                    0/0x1e0 [openvswitch]
0xffffffffa0a54c47 : ovs_flow_cmd_del                    217/0x280 [openvswitch]
0xffffffff81643328 : genl_family_rcv_msg                    1f8/0x3d0 [kernel]
0xffffffff8164354c : genl_rcv_msg                    4c/0x90 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff81643118 : genl_rcv                    28/0x40 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: tbl=0xffff880c85f36920 ufid=0xffffc9000644f878
execname: revalidator29
ts: 35
0x7f3e2a58c9fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
0x51a2e8 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
0x51a6de : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/sbin/ovs-vswitchd]
0x51b71b : nl_transact_multiple                    8b/0xa0 [/usr/sbin/ovs-vswitchd]
0x509db1 : dpif_netlink_operate__                    181/0x620 [/usr/sbin/ovs-vswitchd]
0x50aef6 : dpif_netlink_operate                    2d6/0x5f0 [/usr/sbin/ovs-vswitchd]
0x46af53 : dpif_operate                    63/0x2e0 [/usr/sbin/ovs-vswitchd]
0x4373c3 : push_dp_ops                    73/0x260 [/usr/sbin/ovs-vswitchd]
0x43a64d : revalidate.isra.20                    57d/0x730 [/usr/sbin/ovs-vswitchd]
0x43a88b : udpif_revalidator                    8b/0x390 [/usr/sbin/ovs-vswitchd]
0x4d3644 : ovsthread_wrapper                    74/0x80 [/usr/sbin/ovs-vswitchd]
0x7f3e2a585dc5 : start_thread                    c5/0x300 [/usr/lib64/libpthread-2.17.so]
0x7f3e29daa76d : clone                    6d/0x90 [/usr/lib64/libc-2.17.so]

crash> sw_flow 0xffff880c801d0f80
struct sw_flow {
rcu = {
next = 0xffff880c801d07c0,
func = 0xffffffffa0a5e210 <rcu_free_flow_callback>
},
flow_table = {
node = {{
    next = 0x0,
    pprev = 0xdead000000000200
  }, {
    next = 0x0,
    pprev = 0x0
  }},
hash = 0xb5513b79
},
ufid_table = {
node = {{
    next = 0x0,
    pprev = 0xdead000000000200
  }, {
    next = 0x0,
    pprev = 0x0
  }},
hash = 0x67454c75
},
stats_last_writer = 0xffffffff,
key = {
tun_opts
tun_opts_len = 0x0,
tun_key = {
  tun_id = 0x100000000000000,
  u = {
    ipv4 = {
      src = 0x1301a8c0,
      dst = 0x1201a8c0
    },
    ipv6 = {
      src = {
        in6_u = {
          u6_addr8 = "\300\250\001\023\300\250\001\022\000\000\000\000\000\000\000",
          u6_addr16 = {0xa8c0, 0x1301, 0xa8c0, 0x1201, 0x0, 0x0, 0x0, 0x0},
          u6_addr32 = {0x1301a8c0, 0x1201a8c0, 0x0, 0x0}
        }
      },
      dst = {
        in6_u = {
          u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
          u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
          u6_addr32 = {0x0, 0x0, 0x0, 0x0}
        }
      }
    }
  },
  tun_flags = 0x400,
  tos = 0x0,
  ttl = 0x0,
  label = 0x0,
  tp_src = 0x0,
  tp_dst = 0x0
},
phy = {
  priority = 0x0,
  skb_mark = 0x0,
  in_port = 0x2
},
mac_proto = 0x1,
tun_proto = 0x2,
ovs_flow_hash = 0x0,
recirc_id = 0x0,
eth = {
  src = "\n^s\330rE",
  dst = "\002%\320\342\030P",
  vlan = {
    tpid = 0x0,
    tci = 0x0
  \\},
  cvlan = {
    tpid = 0x0,
    tci = 0x0
  },
  type = 0x608
},
ct_state = 0x0,
ct_orig_proto = 0x0,
{
  mpls = {
    top_lse = 0x0
  },
  ip = {
    proto = 0x0,
    tos = 0x0,
    ttl = 0x0,
    frag = 0x0
  }
},
ct_zone = 0x0,
tp = {
  src = 0x0,
  dst = 0x0,
  flags = 0x0
},
{
  ipv4 = {
    addr = {
      src = 0x0,
      dst = 0x0
    },
    {
      ct_orig = {
        src = 0x0,
        dst = 0x0
      },
      arp = {
        sha = "\000\000\000\000\000",
        tha = "\000\000\000\000\000"
      }
    }
  },
  ipv6 = {
    addr = {
      src = {
        in6_u = {
          u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
          u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
          u6_addr32 = {0x0, 0x0, 0x0, 0x0}
        }
      },
      dst = {
        in6_u = {
          u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
          u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
          u6_addr32 = {0x0, 0x0, 0x0, 0x0}
        }
      }
    },
    label = 0x0,
    {
      ct_orig = {
        src = {
          in6_u = {
            u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
            u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
            u6_addr32 = {0x0, 0x0, 0x0, 0x0}
          }
        },
        dst = {
          in6_u = {
            u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
            u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
            u6_addr32 = {0x0, 0x0, 0x0, 0x0}
          }
        }
      },
      nd = {
        target = {
          in6_u = {
            u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
            u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
            u6_addr32 = {0x0, 0x0, 0x0, 0x0}
          }
        },
        sll = "\000\000\000\000\000",
        tll = "\000\000\000\000\000"
      }
    }
  }
},
ct = {
  orig_tp = {
    src = 0x0,
    dst = 0x0
  },
  mark = 0x0,
  labels = {
    {
      ct_labels = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
      ct_labels_32 = {0x0, 0x0, 0x0, 0x0}
    }
  }
}
},
id = {
ufid_len = 0x10,
{
  ufid = {0x8306ec23, 0x81dd4009, 0xb41ca9f5, 0x91693a89},
  unmasked_key = 0x81dd40098306ec23
}
},
mask = 0xffff880b58c87400,
sf_acts = 0xffff880af0bc4d00,
stats = 0xffff880c801d11e0
}


0xffffffffa0a5f140 : ovs_flow_tbl_insert                    0/0x470 [openvswitch]
0xffffffffa0a54f6d : ovs_flow_cmd_new                    2bd/0x490 [openvswitch]
0xffffffff81643328 : genl_family_rcv_msg                    1f8/0x3d0 [kernel]
0xffffffff8164354c : genl_rcv_msg                    4c/0x90 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff81643118 : genl_rcv                    28/0x40 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: table=0xffff880c85f36920 flow=0xffff880c801d07c0 mask=0xffffc90006427860
execname: handler24
ts: 1
0x7f3e2a58c9fd : __sendmsg_nocancel                    24/0x57 [/usr/lib64/libpthread-2.17.so]
0x51a2e8 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
0x51a6de : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/sbin/ovs-vswitchd]
0x51b71b : nl_transact_multiple                    8b/0xa0 [/usr/sbin/ovs-vswitchd]
0x509db1 : dpif_netlink_operate__                    181/0x620 [/usr/sbin/ovs-vswitchd]
0x50aef6 : dpif_netlink_operate                    2d6/0x5f0 [/usr/sbin/ovs-vswitchd]
0x46af53 : dpif_operate                    63/0x2e0 [/usr/sbin/ovs-vswitchd]
0x439d81 : recv_upcalls.isra.21                    4a1/0x770 [/usr/sbin/ovs-vswitchd]
0x43a09a : udpif_upcall_handler                    4a/0x80 [/usr/sbin/ovs-vswitchd]
0x4d3644 : ovsthread_wrapper                    74/0x80 [/usr/sbin/ovs-vswitchd]
0x7f3e2a585dc5 : start_thread                    c5/0x300 [/usr/lib64/libpthread-2.17.so]
0x7f3e29daa76d : clone                    6d/0x90 [/usr/lib64/libc-2.17.so]

-l vport.hash_node -s vport

crash> list vport_ops_list -l vport_ops.list  -s vport_ops
ffffffffa0a6b1c0
struct vport_ops {
type = OVS_VPORT_TYPE_UNSPEC,
create = 0xffffffffa0a6b190 <ovs_mutex+16>,
destroy = 0xffffffffa0a6b190 <ovs_mutex+16>,
set_options = 0xffffffffa0a57b40 <dp_device_event>,
get_options = 0xffffffffa0a861c0 <vxlan_notifier_block>,
send = 0x0,
owner = 0x0,
list = {
next = 0xffffffffa0a6b218 <ovs_internal_vport_ops+56>,
prev = 0xffffffffa0a91038
}
}
ffffffffa0a6b218
struct vport_ops {
type = OVS_VPORT_TYPE_INTERNAL,
create = 0xffffffffa0a62310 <internal_dev_create>,
destroy = 0xffffffffa0a622b0 <internal_dev_destroy>,
set_options = 0x0,
get_options = 0x0,
send = 0xffffffffa0a625e0 <internal_dev_recv>,
owner = 0xffffffffa0a6b480 <__this_module>,
list = {
next = 0xffffffffa0a6b278 <ovs_netdev_vport_ops+56>,
prev = 0xffffffffa0a6b1c0 <vport_ops_list>
}
}
ffffffffa0a6b278
struct vport_ops {
type = OVS_VPORT_TYPE_NETDEV,
create = 0xffffffffa0a629a0 <netdev_create>,
destroy = 0xffffffffa0a62bc0 <netdev_destroy>,
set_options = 0x0,
get_options = 0x0,
send = 0xffffffff81609ee0 <dev_queue_xmit>,
owner = 0xffffffffa0a6b480 <__this_module>,
list = {
next = 0xffffffffa0a91038,
prev = 0xffffffffa0a6b218 <ovs_internal_vport_ops+56>
}


[root@dev-r630-03 ~]# trace netdev_create -K
TIME     PID     TID     COMM            FUNC
7.842253 16771   16771   ovs-vswitchd    netdev_create
        netdev_create+0x1 [kernel]
        new_vport+0x12 [kernel]
        ovs_vport_cmd_new+0x1c0 [kernel]
        genl_family_rcv_msg+0x1fe [kernel]
        genl_rcv_msg+0x4c [kernel]
        netlink_rcv_skb+0x54 [kernel]
        genl_rcv+0x28 [kernel]
        netlink_unicast+0x19c [kernel]
        netlink_sendmsg+0x2d1 [kernel]
        sock_sendmsg+0x3e [kernel]
        ___sys_sendmsg+0x283 [kernel]
        __sys_sendmsg+0x63 [kernel]
        __x64_sys_sendmsg+0x1f [kernel]
        do_syscall_64+0x60 [kernel]
        entry_SYSCALL_64_after_hwframe+0x44 [kernel]


}
ffffffffa0a91038
struct vport_ops {
type = OVS_VPORT_TYPE_VXLAN,
create = 0xffffffffa0a8f300,
destroy = 0xffffffffa0a62c00 <ovs_netdev_tunnel_destroy>,
set_options = 0x0,
get_options = 0xffffffffa0a8f000,
send = 0xffffffff81609ee0 <dev_queue_xmit>,
owner = 0xffffffffa0a91080,
list = {
next = 0xffffffffa0a6b1c0 <vport_ops_list>,
prev = 0xffffffffa0a6b278 <ovs_netdev_vport_ops+56>
}
}

0xffffffff8160c850 : register_netdevice                    0/0x450 [kernel]
0xffffffffa0a815d0 : __vxlan_dev_create                    b0/0x130 [vxlan]
0xffffffffa0a8172b : vxlan_dev_create                    6b/0x100 [vxlan]
0xffffffffa0a8f25b : vxlan_tnl_create                    15b/0x200 [vport_vxlan]
0xffffffffa0a8f312 : vxlan_create                    12/0x0 [vport_vxlan]
0xffffffffa0a61a85 : ovs_vport_add                    c5/0x120 [openvswitch]
0xffffffffa0a544e2 : new_vport                    12/0x50 [openvswitch]
0xffffffffa0a559f9 : ovs_vport_cmd_new                    149/0x2e0 [openvswitch]
0xffffffff81643328 : genl_family_rcv_msg                    1f8/0x3d0 [kernel]
0xffffffff8164354c : genl_rcv_msg                    4c/0x90 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff81643118 : genl_rcv                    28/0x40 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]



0xffffffffa0a804b0 : __vxlan_find_mac                    0/0xf0 [vxlan]
0xffffffffa0a805d5 : vxlan_fdb_delete_default                    35/0x60 [vxlan]
0xffffffffa0a8061f : vxlan_uninit                    1f/0x30 [vxlan]
0xffffffff81605d23 : rollback_registered_many                    253/0x410 [kernel]
0xffffffff8160608c : unregister_netdevice_many                    1c/0x80 [kernel]
0xffffffff81618f3b : rtnl_delete_link                    4b/0x70 [kernel]
0xffffffffa0a62c69 : ovs_netdev_tunnel_destroy                    69/0x70 [openvswitch]
0xffffffffa0a61b46 : ovs_vport_del                    46/0x50 [openvswitch]
0xffffffffa0a55cbb : ovs_vport_cmd_del                    12b/0x190 [openvswitch]
0xffffffff81643328 : genl_family_rcv_msg                    1f8/0x3d0 [kernel]
0xffffffff8164354c : genl_rcv_msg                    4c/0x90 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff81643118 : genl_rcv                    28/0x40 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: vxlan=0xffff880c870588c0 mac=0xffffffffa0a868c0 vni=0x0
execname: ovs-vswitchd
ts: 85
0x7efd7a1089e0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libpthread-2.17.so]
0x51a2e8 : nl_sock_transact_multiple__                    f8/0x430 [/usr/sbin/ovs-vswitchd]
0x51a6de : nl_sock_transact_multiple.part.8                    be/0x1a0 [/usr/sbin/ovs-vswitchd]
0x51a842 : nl_sock_transact                    82/0xc0 [/usr/sbin/ovs-vswitchd]
0x51b670 : nl_transact                    40/0x60 [/usr/sbin/ovs-vswitchd]
0x50c388 : dpif_netlink_vport_transact                    f8/0x280 [/usr/sbin/ovs-vswitchd]
0x50cd8c : dpif_netlink_port_del                    4c/0x80 [/usr/sbin/ovs-vswitchd]
0x469a99 : dpif_port_del                    19/0x80 [/usr/sbin/ovs-vswitchd]
0x42ee27 : construct                    677/0x8e0 [/usr/sbin/ovs-vswitchd]
0x41b1f5 : ofproto_create                    335/0x720 [/usr/sbin/ovs-vswitchd]
0x40cdee : bridge_reconfigure                    5fe/0x3260 [/usr/sbin/ovs-vswitchd]
0x410296 : bridge_run                    226/0x19e0 [/usr/sbin/ovs-vswitchd]
0x4070b5 : main                    315/0x450 [/usr/sbin/ovs-vswitchd]
0x7efd79850b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x407e53 : _start                    29/0x36 [/usr/sbin/ovs-vswitchd]


bridge_run
netdev_set_flow_api_enabled

netdev_tc_flow_put

2017-05-18T06:38:59.196Z|00030|netdev|INFO|netdev: Flow API Enabled
2017-05-18T06:38:59.196Z|00031|tc|INFO|tc: Using policy 'none'
2017-05-18T06:38:59.196Z|00032|netdev_tc_offloads|INFO|added ingress qdisc to eth1
2017-05-18T06:38:59.196Z|00033|netdev_tc_offloads|INFO|added ingress qdisc to eth0

[chrism@bjglab-18 openvswitch]$ git remote -v
origin  ssh://10.7.0.100:29418/openvswitch (fetch)
origin  ssh://10.7.0.100:29418/openvswitch (push)

715  git fetch origin
716  git branch
717  git fetch origin hw-offload-fixes-for-v8
718  git checkout FETCH_HEAD
719  git slog
720  git branch
721  git checkout -b hw-offload-fixes-for-v8

722  ./boot.sh
723  git grep config Documentation/|grep prefi
724  ./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc
725  make -j
726  sudo make install

crash> vport 0xffff880c331a9380
struct vport {
dev = 0xffff880c8b020000,
dp = 0xffff88069bf7b180,
upcall_portids = 0xffff880ca51aeb40,
port_no = 0x2,
hash_node = {
next = 0x0,
pprev = 0xffff88017c19ef98
},
dp_hash_node = {
next = 0x0,
pprev = 0xffff880c27354010
},
ops = 0xffffffffa087c1c0 <ovs_netdev_vport_ops>,
detach_list = {
next = 0x0,
prev = 0x0
},
rcu = {
next = 0x0,
func = 0x0
}
}
crash> vport_ops ovs_netdev_vport_ops
struct vport_ops {
type = OVS_VPORT_TYPE_NETDEV,
create = 0xffffffffa08743d0 <netdev_create>,
destroy = 0xffffffffa08744f0 <netdev_destroy>,
set_options = 0x0,
get_options = 0x0,
send = 0xffffffff816274a0 <dev_queue_xmit>,
owner = 0xffffffffa087c480 <__this_module>,
list = {
next = 0xffffffffa087c140 <vport_ops_list>,
prev = 0xffffffffa087c198 <ovs_internal_vport_ops+56>
}
}

ovs-vsctl add-port br1 int0 -- set interface int0 type=internal

[root@bjglab-19 net-next]#  ovs-vsctl set port eth0 tag=100
[root@bjglab-19 net-next]#  ovs-vsctl remove port eth0 tag 100


ovsdb-tool show-log  -m | less


lib/dpif.h

ovs_flow_cmd_new

ovs_netdev_link
    err = netdev_rx_handler_register(vport->dev, netdev_frame_hook, vport);

ovs_dp_upcall
    queue_userspace_packet

# extracts a flow key from an Ethernet frame.
key_extract

http://networkstatic.net/configuring-vxlan-and-gre-tunnels-on-openvswitch/
apt-get update
apt-get install -y git automake autoconf gcc uml-utilities libtool build-essential git pkg-config linux-headers-`uname -r`
wget http://openvswitch.org/releases/openvswitch-1.10.0.tar.gz
tar zxvf openvswitch-1.10.0.tar.gz
cd openvswitch-1.10.0
./boot.sh
./configure --with-linux=/lib/modules/`uname -r`/build
make && make install
make modules_install
insmod datapath/linux/openvswitch.ko
mkdir -p /usr/local/etc/openvswitch
ovsdb-tool create /usr/local/etc/openvswitch/conf.db vswitchd/vswitch.ovsschema
ovsdb-server -v --remote=punix:/usr/local/var/run/openvswitch/db.sock \
                 --remote=db:Open_vSwitch,manager_options \
                 --private-key=db:SSL,private_key \
                 --certificate=db:SSL,certificate \
                 --pidfile --detach --log-file
ovs-vsctl --no-wait init
ovs-vswitchd --pidfile --detach
ovs-vsctl show


mkdir -p /etc/openvswitch
ovsdb-tool create /etc/openvswitch/conf.db vswitchd/vswitch.ovsschema
ovsdb-server -v --remote=punix:/var/run/openvswitch/db.sock \
                 --remote=db:Open_vSwitch,manager_options \
                 --private-key=db:SSL,private_key \
                 --certificate=db:SSL,certificate \
                 --pidfile --detach --log-file
ovs-vsctl --no-wait init
ovs-vswitchd --pidfile --detach
ovs-vsctl show



http://docs.openvswitch.org/en/latest/intro/install/general/#build-requirements

ovs-vsctl add-port ovsbr enp3s0f0
ovs-vsctl del-port ovsbr enp3s0f0

/usr//share/openvswitch/scripts/ovs-ctl start
systemctl start openvswitch.service
systemctl stop openvswitch.service

ovs-ofctl add-flow ovsbr 'nw_dst=192.168.1.3 action=drop'
ovs-ofctl add-flow ovsbr 'nw_dst=192.168.1.3 action=normal'

ovs-ofctl del-flows ovsbr
ovs-ofctl add-flow ovsbr nw_dst=192.168.1.0/24,actions=normal

ovs-ofctl dump-flows ovsbr

ovs-dpctl show -s

---------------------------

vlan offload

ovs-vsctl set port vnet0 tag=52
ovs-vsctl remove port vnet0 tag 52

===ip===

ip link show dev enp3s0f0 
cat /sys/class/net/enp3s0f0/device/sriov_numvfs

ip link set dev enp3s0f0 up

===netns===

0xffffffff81622d10 : setup_net                    0/0x170 [kernel]
0xffffffff8162362f : copy_net_ns                    bf/0x200 [kernel]
0xffffffff810aff9f : create_new_namespaces                    11f/0x1b0 [kernel]
0xffffffff810b01da : unshare_nsproxy_namespaces                    5a/0xb0 [kernel]
0xffffffff8108e965 : SyS_unshare                    1b5/0x350 [kernel]
0xffffffff81003a27 : do_syscall_64                    67/0x150 [kernel]
0xffffffff81755ea7 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: net=0xffff880be6ca0000 user_ns=0xffffffff81c513a0
execname: ip
ts: 1
0x7fbdc6f97107 : unshare                    7/0x30 [/usr/lib64/libc-2.17.so]
0x415ade : netns_add                    de/0x230 [/usr/sbin/ip]
0x41628e : do_netns                    1ce/0x4d0 [/usr/sbin/ip]
0x408504 : do_cmd                    44/0x80 [/usr/sbin/ip]
0x40801f : main                    20f/0x577 [/usr/sbin/ip]
0x7fbdc6ec0b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4083b0 : _start                    29/0x39 [/usr/sbin/ip]



ip netns add foo
ip link set dev enp66s0f1 netns foo
ip netns exec foo ifconfig enp66s0f1 192.168.1.61 up

include/net/net_namespace.h

struct net {
};

struct net init_net

===ethtool===

ethtool_get_features

WARNING: Missing unwind data for a module, rerun with 'stap -d /usr/sbin/ethtool'
 0xffffffffc065f8e0 : set_feature_rx_vlan    0/0x140 [mlx5_core]
 0xffffffffc065ee29 : mlx5e_handle_feature    39/0xb0 [mlx5_core]
 0xffffffffc065ef8a : mlx5e_set_features    ea/0x150 [mlx5_core]
 0xffffffff8d6b434a : __netdev_update_features    29a/0x9f0 [kernel]
 0xffffffff8d6b93cd : dev_ethtool    e3d/0x27f0 [kernel]
 0xffffffff8d6d7b83 : dev_ioctl    203/0x3f0 [kernel]
 0xffffffff8d68aad1 : sock_do_ioctl    c1/0x170 [kernel]
 0xffffffff8d68b08c : sock_ioctl    1cc/0x310 [kernel]
 0xffffffff8d2810f9 : do_vfs_ioctl    a9/0x640 [kernel]
 0xffffffff8d281705 : ksys_ioctl    75/0x80 [kernel]
 0xffffffff8d28172a : __x64_sys_ioctl    1a/0x20 [kernel]
 0xffffffff8d00262a : do_syscall_64    5a/0x170 [kernel]
 0xffffffff8da0008c : entry_SYSCALL_64_after_hwframe    44/0xa9 [kernel]
 0x0
parms: netdev=0xffff9b28d0500000 enable=0x1
execname: ethtool
ts: 221, 1
 0x7f06c81de267 : ioctl    7/0x30 [/usr/lib64/libc-2.26.so]
 0x55a630bd2177 [/usr/sbin/ethtool    10177/0x4f000]
0
 0xffffffffc065f8e0 : set_feature_rx_vlan    0/0x140 [mlx5_core]
 0xffffffffc065ee29 : mlx5e_handle_feature    39/0xb0 [mlx5_core]
 0xffffffffc065ef8a : mlx5e_set_features    ea/0x150 [mlx5_core]
 0xffffffff8d6b434a : __netdev_update_features    29a/0x9f0 [kernel]
 0xffffffff8d6b93cd : dev_ethtool    e3d/0x27f0 [kernel]
 0xffffffff8d6d7b83 : dev_ioctl    203/0x3f0 [kernel]
 0xffffffff8d68aad1 : sock_do_ioctl    c1/0x170 [kernel]
 0xffffffff8d68b08c : sock_ioctl    1cc/0x310 [kernel]
 0xffffffff8d2810f9 : do_vfs_ioctl    a9/0x640 [kernel]
 0xffffffff8d281705 : ksys_ioctl    75/0x80 [kernel]
 0xffffffff8d28172a : __x64_sys_ioctl    1a/0x20 [kernel]
 0xffffffff8d00262a : do_syscall_64    5a/0x170 [kernel]
 0xffffffff8da0008c : entry_SYSCALL_64_after_hwframe    44/0xa9 [kernel]
 0x0
parms: netdev=0xffff9b28d0500000 enable=0x0
execname: ethtool
ts: 224, 2
 0x7f215972e267 : ioctl    7/0x30 [/usr/lib64/libc-2.26.so]
 0x55b2f14a4177 [/usr/sbin/ethtool    10177/0x4f000]

NETIF_F_HW_VLAN_CTAG_RX

net/core/ethtool.c:2576:        case ETHTOOL_GFEATURES:

The representor's default SQ size of 64 is too small, and causes a bottleneck. When changing it with ethtool -G to 128, it no longer is the bottleneck, and the traffic rate improves significantly:


UDP Fragmentation Offload
=========================

https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=e89e9cf539a28df7d0eb1d0a545368e9920b34ac

https://support.ixiacom.com/strikes/denial/tftp/cve_2013_4563_linux_kernel_UDP_DoS.xml

https://www.kernel.org/doc/Documentation/networking/segmentation-offloads.txt

UDP fragmentation offload allows a device to fragment an oversized UDP
datagram into multiple IPv4 fragments.  Many of the requirements for UDP
fragmentation offload are the same as TSO.  However the IPv4 ID for
fragments should not increment as a single IPv4 datagram is fragmented.

UFO is deprecated: modern kernels will no longer generate UFO skbs, but can
still receive them from tuntap and similar devices. Offload of UDP-based
tunnel protocols is still supported.

commit d5d35d8331dee79a7453d3ea501bcc7b8b90582c
Author: Shaker Daibes <shakerd@mellanox.com>
Date:   Mon Sep 18 10:35:38 2017 +0300

    ethtool: Remove UDP Fragmentation Offload error prints

    UFO was removed in kernel, here we remove UFO error prints when using
    "ethtool -k" command.

    Fixes the following issue:
    Features for ens8:
    Cannot get device udp-fragmentation-offload settings: Operation not
    supported

    Signed-off-by: Shaker Daibes <shakerd@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>


https://git.kernel.org/pub/scm/network/ethtool/ethtool.git

ethtool -s eth0 speed 100 duplex full

[root@bjglab-18 ~]# ethtool -g p2p1
Ring parameters for p2p1:
Pre-set maximums:
RX:             8192
RX Mini:        0
RX Jumbo:       0
TX:             8192
Current hardware settings:
RX:             1024
RX Mini:        0
RX Jumbo:       0
TX:             1024

ifconfig p2p1 txqueuelen 0

===napi===

mlx5e_poll_tx_cq
    napi_consume_skb

===short===

PMD: Poll Mode Driver
DVR: Distributed Virtual Router
MPPS: million packets per second
DQL: Dynamic queue limits
RPS: Receive Packet Steering
BPF: Berkeley Packet Filter
XDP: eXpress Data Path
htb: Hierarchical Token Bucket
TBF: Token Bucket Filter
SFQ: Stochastic Fairness Queuing
BQL: Byte Queue Limits
GSO: Generic Segmentation Offload
LFT: Linear Forwarding Table
AOC: Active Optical Cables
DOC: Direct Attach Copper Cables
NVGRE: Network Virtualization using Generic Routing Encapsulation
RTNL: Routing NetLink
LLDP: Link Layer Discovery Protocol

===net_device===

register_netdevice
dev_init_scheduler
    setup_timer(&dev->watchdog_timer, dev_watchdog, (unsigned long)dev);


===vlan===

vconfig add $link 52
ifconfig $link up
ifconfig $link.52 1.1.1.100/24 up

#  ethtool -K ens16  rx-vlan-filter off

0xffffffffa01f74a0 : mlx5_add_flow_rules                    0/0x600 [mlx5_core]
0xffffffffa02094ec : mlx5e_add_vlan_rule                    ec/0x280 [mlx5_core]
0xffffffffa02096ac : mlx5e_add_any_vid_rules                    2c/0x30 [mlx5_core]
0xffffffffa020995f : mlx5e_disable_vlan_filter                    2f/0x40 [mlx5_core]
0xffffffffa0201d8a : set_feature_vlan_filter                    1a/0x30 [mlx5_core]
0xffffffffa0201565 : mlx5e_handle_feature                    45/0xc0 [mlx5_core]
0xffffffffa0201621 : mlx5e_set_features                    41/0xd0 [mlx5_core]
0xffffffff8162f46f : __netdev_update_features                    23f/0x690 [kernel]
0xffffffff816308cc : ethtool_set_features                    cc/0x120 [kernel]
0xffffffff816343f5 : dev_ethtool                    1235/0x1bd0 [kernel]
0xffffffff81648821 : dev_ioctl                    181/0x520 [kernel]
0xffffffff8160a4f2 : sock_do_ioctl                    42/0x50 [kernel]
0xffffffff8160aa9d : sock_ioctl                    1ed/0x2d0 [kernel]
0xffffffff81257e07 : do_vfs_ioctl                    a7/0x5e0 [kernel]
0xffffffff812583b9 : SyS_ioctl                    79/0x90 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: ft=0xffff880036680300 spec=0xffff88003aa25000 flow_act=0xffffc900003bfb00 dest=0xffffc900003bfaf0 dest_num=0x1


0xffffffffa00bc220 : mlx5_add_flow_rules                    0/0x600 [mlx5_core]
0xffffffffa00ce255 : mlx5e_add_vlan_rule                    e5/0x270 [mlx5_core]
0xffffffffa00ce6fc : mlx5e_vlan_rx_add_vid                    2c/0x30 [mlx5_core]
0xffffffff817335d0 : vlan_vid_add                    200/0x250 [kernel]
0xffffffffa08eeaee : register_vlan_dev                    3e/0x240 [8021q]
0xffffffffa08f048a : vlan_newlink                    ca/0x110 [8021q]
0xffffffff8164433b : rtnl_newlink                    68b/0x830 [kernel]
0xffffffff81644584 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
0xffffffff81666477 : netlink_rcv_skb                    a7/0xc0 [kernel]
0xffffffff8163e398 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81665e31 : netlink_unicast                    181/0x240 [kernel]
0xffffffff8166621e : netlink_sendmsg                    32e/0x3b0 [kernel]
0xffffffff8160db78 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160e4c9 : ___sys_sendmsg                    279/0x290 [kernel]
0xffffffff8160eed4 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff8160ef22 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff81752d6b : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: ft=0xffff8806629f8d00 spec=0xffff8806fc795000 flow_act=0xffffc900068cb77c dest=0xffffc900068cb788 dest_num=0x1
execname: ip
ts: 2
0x7fc6cd9827a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x4441b4 : __rtnl_talk                    c4/0x3f0 [/usr/sbin/ip]
0x41efc7 : iplink_modify                    267/0x4b0 [/usr/sbin/ip]
0x41f507 : do_iplink                    1c7/0xf80 [/usr/sbin/ip]
0x408504 : do_cmd                    44/0x80 [/usr/sbin/ip]
0x40801f : main                    20f/0x577 [/usr/sbin/ip]
0x7fc6cd8abb35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4083b0 : _start                    29/0x39 [/usr/sbin/ip]

0xffffffffa00bc220 : mlx5_add_flow_rules                    0/0x600 [mlx5_core]
0xffffffffa00cdd43 : mlx5e_add_l2_flow_rule                    a3/0x1a0 [mlx5_core]
0xffffffffa00cdea0 : mlx5e_execute_l2_action                    60/0x70 [mlx5_core]
0xffffffffa00ce8c3 : mlx5e_set_rx_mode_work                    193/0x3b0 [mlx5_core]
0xffffffff810a8dd5 : process_one_work                    165/0x410 [kernel]
0xffffffff810a97b7 : worker_thread                    137/0x4c0 [kernel]
0xffffffff810af681 : kthread                    101/0x140 [kernel]
0xffffffff81752f1c : ret_from_fork                    2c/0x40 [kernel]
0x0 (inexact)
parms: ft=0xffff8806629f9a00 spec=0xffff880bf385d800 flow_act=0xffffc90008edfd8c dest=0xffffc90008edfd98 dest_num=0x1
execname: kworker/u96:1
ts: 3
<no user backtrace at module("mlx5_core").function("mlx5_add_flow_rules@drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1397")>

create vlan
0xffffffffa00b6880 : mlx5_modify_nic_vport_vlans                    0/0x170 [mlx5_core]
0xffffffffa00ce056 : mlx5e_vport_context_update_vlans                    116/0x190 [mlx5_core]
0xffffffffa00ce2e0 : mlx5e_add_vlan_rule                    170/0x270 [mlx5_core]
0xffffffffa00ce6fc : mlx5e_vlan_rx_add_vid                    2c/0x30 [mlx5_core]
0xffffffff817335d0 : vlan_vid_add                    200/0x250 [kernel]
0xffffffffa08eeaee : register_vlan_dev                    3e/0x240 [8021q]
0xffffffffa08f048a : vlan_newlink                    ca/0x110 [8021q]
0xffffffff8164433b : rtnl_newlink                    68b/0x830 [kernel]
0xffffffff81644584 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
0xffffffff81666477 : netlink_rcv_skb                    a7/0xc0 [kernel]
0xffffffff8163e398 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81665e31 : netlink_unicast                    181/0x240 [kernel]
0xffffffff8166621e : netlink_sendmsg                    32e/0x3b0 [kernel]
0xffffffff8160db78 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160e4c9 : ___sys_sendmsg                    279/0x290 [kernel]
0xffffffff8160eed4 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff8160ef22 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff81752d6b : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: dev=0xffff880658340060 vlans=0xffff8806fc44f880 list_size=0x2
execname: ip
ts: 102
0x7f32115e27a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x4441b4 : __rtnl_talk                    c4/0x3f0 [/usr/sbin/ip]
0x41efc7 : iplink_modify                    267/0x4b0 [/usr/sbin/ip]
0x41f507 : do_iplink                    1c7/0xf80 [/usr/sbin/ip]
0x408504 : do_cmd                    44/0x80 [/usr/sbin/ip]
0x40801f : main                    20f/0x577 [/usr/sbin/ip]
0x7f321150bb35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4083b0 : _start                    29/0x39 [/usr/sbin/ip]

ip link del vlan52
0xffffffffa00b6880 : mlx5_modify_nic_vport_vlans                    0/0x170 [mlx5_core]
0xffffffffa00ce056 : mlx5e_vport_context_update_vlans                    116/0x190 [mlx5_core]
0xffffffffa00ce112 : mlx5e_del_vlan_rule.part.0                    42/0x50 [mlx5_core]
0xffffffffa00ce727 : mlx5e_vlan_rx_kill_vid                    27/0x30 [mlx5_core]
0xffffffff8173327d : vlan_vid_del                    16d/0x1b0 [kernel]
0xffffffffa08ee2b6 : unregister_vlan_dev                    d6/0x150 [8021q]
0xffffffff8163d783 : rtnl_delete_link                    43/0x70 [kernel]
0xffffffff8163f039 : rtnl_dellink                    99/0x1d0 [kernel]
0xffffffff81644584 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
0xffffffff81666477 : netlink_rcv_skb                    a7/0xc0 [kernel]
0xffffffff8163e398 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81665e31 : netlink_unicast                    181/0x240 [kernel]
0xffffffff8166621e : netlink_sendmsg                    32e/0x3b0 [kernel]
0xffffffff8160db78 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160e4c9 : ___sys_sendmsg                    279/0x290 [kernel]
0xffffffff8160eed4 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff8160ef22 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff81752d6b : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: dev=0xffff880658340060 vlans=0xffff880666c0f6b0 list_size=0x1
execname: ip
ts: 4
0x7fdfc9c3a7a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x4441b4 : __rtnl_talk                    c4/0x3f0 [/usr/sbin/ip]
0x41efc7 : iplink_modify                    267/0x4b0 [/usr/sbin/ip]
0x41f9cc : do_iplink                    68c/0xf80 [/usr/sbin/ip]
0x408504 : do_cmd                    44/0x80 [/usr/sbin/ip]
0x40801f : main                    20f/0x577 [/usr/sbin/ip]
0x7fdfc9b63b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4083b0 : _start                    29/0x39 [/usr/sbin/ip]


skb->dev = vlan->real_dev;

0xffffffffa00d3330 : mlx5e_xmit                    0/0x30 [mlx5_core]
0xffffffff8162ee91 : dev_hard_start_xmit                    a1/0x210 [kernel]
0xffffffff816592f5 : sch_direct_xmit                    105/0x1b0 [kernel]
0xffffffff8162f51f : __dev_queue_xmit                    42f/0x630 [kernel]
0xffffffff8162f730 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffffa08efc98 : vlan_dev_hard_start_xmit                    98/0x120 [8021q]
0xffffffff8162ee91 : dev_hard_start_xmit                    a1/0x210 [kernel]
0xffffffff8162f5f3 : __dev_queue_xmit                    503/0x630 [kernel]
0xffffffff8162f730 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffff81639316 : neigh_connected_output                    c6/0x100 [kernel]
0xffffffff81676cab : ip_finish_output2                    14b/0x390 [kernel]
0xffffffff816783e6 : ip_finish_output                    136/0x1e0 [kernel]
0xffffffff81678e96 : ip_output                    76/0xe0 [kernel]
0xffffffff816785e5 : ip_local_out                    35/0x40 [kernel]
0xffffffff81679919 : ip_send_skb                    19/0x40 [kernel]
0xffffffff81679973 : ip_push_pending_frames                    33/0x40 [kernel]
0xffffffff816a1983 : raw_sendmsg                    7d3/0xb50 [kernel]
0xffffffff816b0f71 : inet_sendmsg                    31/0xb0 [kernel]
0xffffffff8160db78 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160e032 : SYSC_sendto                    102/0x190 [kernel]
parms: skb=0xffff880666f44400 dev=0xffff880c59b50000
execname: ping
ts: 3
0x7fb66dffe803 : __sendto_nocancel                    a/0x57 [/usr/lib64/libc-2.17.so]
0x564d8af0c8ad [/usr/bin/ping                    38ad/0xe000]

0xffffffffa08efc00 : vlan_dev_hard_start_xmit                    0/0x120 [8021q]
0xffffffff8162ee91 : dev_hard_start_xmit                    a1/0x210 [kernel]
0xffffffff8162f5f3 : __dev_queue_xmit                    503/0x630 [kernel]
0xffffffff8162f730 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffff816a86f8 : arp_xmit                    38/0xa0 [kernel]
0xffffffff816a87a5 : arp_send_dst.part.19                    45/0x50 [kernel]
0xffffffff816a9512 : arp_process                    6b2/0x720 [kernel]
0xffffffff816a96e0 : arp_rcv                    140/0x1c0 [kernel]
0xffffffff8162c100 : __netif_receive_skb_core                    380/0x9e0 [kernel]
0xffffffff8162c778 : __netif_receive_skb                    18/0x60 [kernel]
0xffffffff8162d430 : netif_receive_skb_internal                    40/0xb0 [kernel]
0xffffffff8162dfed : napi_gro_receive                    cd/0x140 [kernel]
0xffffffffa00d5cd4 : mlx5e_handle_rx_cqe_mpwrq                    594/0x830 [mlx5_core]
0xffffffffa00d5ff3 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
0xffffffffa00d6d13 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
0xffffffff8162d990 : net_rx_action                    260/0x3c0 [kernel]
0xffffffff81756679 : __do_softirq                    c9/0x28c [kernel]
0xffffffff81095599 : irq_exit                    d9/0xf0 [kernel]
0xffffffff817557f1 : do_IRQ                    51/0xd0 [kernel]
0xffffffff81753653 : ret_from_intr                    0/0x1b [kernel]
parms: skb=0xffff880bdf776800 dev=0xffff880b961d8000
execname: swapper/6

A 2-byte Tag Protocol Identifier (TPID), which will be set to a value of 0x8100 to denote that this frame carries 802.1Q or 802.1p tag information.
A 2-byte Tag Control Information (TCI), which is made of the following:
A 3-bit user Priority Code Point (PCP) that sets a priority value between 0 and 7, which can be used for Quality of Service (QoS) priority traffic delivery.
A 1-bit Canonical Format Indicator (CFI) that is a compatibility bit between Ethernet and other network structures, such as Token Ring. For Ethernet networks, this value will also be set to zero.
A 12-bit VLAN Identifier (VID) that identifies the VLAN the frame belongs to.

ovs-vsctl set port vnet1 tag=52

crash> vlan_dev_priv ffff880b961d88c0
struct vlan_dev_priv {
nr_ingress_mappings = 0,
ingress_priority_map = {0, 0, 0, 0, 0, 0, 0, 0},
nr_egress_mappings = 0,
egress_priority_map = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
vlan_proto = 129,
vlan_id = 52,
flags = 1,
real_dev = 0xffff880c59b50000,
real_dev_addr = "$\212\a\210", <incomplete sequence \312>,
dent = 0xffff8804d5779980,
vlan_pcpu_stats = 0x60f398806fa0,
netpoll = 0x0,
nest_level = 1
}

crash> vlan_dev_priv.real_dev_addr ffff880b961d88c0 -o
struct vlan_dev_priv {
[ffff880b961d8978] unsigned char real_dev_addr[6];
}
crash> rd -8 ffff880b961d8978 6
ffff880b961d8978:  24 8a 07 88 27 ca                                 $...'.

===neigh update==

neigh_add
	neigh_update

        rtnl_register(PF_UNSPEC, RTM_NEWNEIGH, neigh_add, NULL, 0);

53f800e3baf98 (Ido Schimmel                 2016-12-23 09:32:48 +0100  105)     call_netevent_notifiers(NETEVENT_NEIGH_UPDATE, neigh);

mlx5e_rep_netevent_event
mlx5e_rep_neigh_update

mlx5e_rep_neigh_entry_insert
mlx5e_rep_neigh_stats_work


upstream

1. down

 0xffffffffa0e3d6a0 : mlx5e_rep_netevent_event            0/0x300 [mlx5_core]
 0xffffffff810aab85 : notifier_call_chain            45/0x70 [kernel]
 0xffffffff810aadce : atomic_notifier_call_chain            2e/0x40 [kernel]
 0xffffffff8163ec66 : neigh_cleanup_and_release            36/0x50 [kernel]
 0xffffffff8163f044 : neigh_flush_dev.isra.39            134/0x150 [kernel]
 0xffffffff8163f0d2 : neigh_ifdown            32/0x100 [kernel]
 0xffffffff817165d5 : rt6_disable_ip            185/0x1b0 [kernel]
 0xffffffff817087b3 : addrconf_ifdown            53/0x560 [kernel]
 0xffffffff8170c65e : addrconf_notify            19e/0xb10 [kernel]
 0x0 (inexact)
parms: nb=0xffff881017f8f2a8 event=0x1 ptr=0xffff881028df3e00
execname: NetworkManager

2. up

<no user backtrace at module("mlx5_core").function("mlx5e_rep_netevent_event@drivers/net/ethernet/mellanox/mlx5/core/en_rep.c:432")>
182
 0xffffffffa0e3d6a0 : mlx5e_rep_netevent_event            0/0x300 [mlx5_core]
 0xffffffff810aab85 : notifier_call_chain            45/0x70 [kernel]
 0xffffffff810aadce : atomic_notifier_call_chain            2e/0x40 [kernel]
 0xffffffff8163f8af : neigh_update            3ef/0x750 [kernel]
 0xffffffff816ba438 : arp_process            358/0x840 [kernel]
 0xffffffff816baa61 : arp_rcv            121/0x1d0 [kernel]
 0xffffffff8162e59c : __netif_receive_skb_core            44c/0xbb0 [kernel]
 0x0 (inexact)
parms: nb=0xffff881017f8c4a8 event=0x1 ptr=0xffff881017f89a00
execname: swapper/4


centos 7.2

1. no down
2. up

 0xffffffff81533550 : call_netevent_notifiers            0/0x20 [kernel]
 0xffffffff8153794a : neigh_update            2ca/0x5e0 [kernel]
 0xffffffff8159976c : arp_process            2fc/0x660 [kernel]
 0xffffffff81599c0d : arp_rcv            11d/0x1a0 [kernel]
 0xffffffff8152a882 : __netif_receive_skb_core            582/0x7d0 [kernel]
 0xffffffff8152aae8 : __netif_receive_skb            18/0x60 [kernel]
 0xffffffff8152ab70 : netif_receive_skb            40/0xc0 [kernel]
 0xffffffff8152b6e0 : napi_gro_receive            80/0xb0 [kernel]
 0xffffffffa07e3436 : mlx5e_handle_rx_cqe_mpwrq            586/0xa00 [mlx5_core]
 0xffffffffa07e39a3 : mlx5e_poll_rx_cq            f3/0x920 [mlx5_core]
 0xffffffffa07e49ed : mlx5e_napi_poll            dd/0xb20 [mlx5_core]
 0xffffffff8152afa2 : net_rx_action            152/0x240 [kernel]
 0xffffffff81084b0f : __do_softirq            ef/0x280 [kernel]
 0xffffffff8164721c : call_softirq            1c/0x30 [kernel]
 0xffffffff81016fc5 : do_softirq            65/0xa0 [kernel]
 0xffffffff81084ea5 : irq_exit            115/0x120 [kernel]
 0xffffffff81647db8 : do_IRQ            58/0xf0 [kernel]
 0xffffffff8163d0ed : ret_from_intr            0/0x15 [kernel]
parms: val=0x1 v=0xffff88104b2a5400
execname: swapper/10
ts: 15
<no user backtrace at kernel.function("call_netevent_notifiers@net/core/netevent.c:66")>


                    ip_route_output_key
0xffffffff81687852 : icmp_reply.constprop.26                    1f2/0x270 [kernel]
0xffffffff8168792d : icmp_echo.part.24                    5d/0x80 [kernel]
0xffffffff81687981 : icmp_echo                    31/0x40 [kernel]
0xffffffff8168808c : icmp_rcv                    27c/0x3a0 [kernel]
0xffffffff8164f5a5 : ip_local_deliver_finish                    95/0x1e0 [kernel]
0xffffffff8164f8af : ip_local_deliver                    6f/0xe0 [kernel]
0xffffffff8164f23d : ip_rcv_finish                    dd/0x3b0 [kernel]
0xffffffff8164fbab : ip_rcv                    28b/0x3a0 [kernel]
0xffffffff816073c2 : __netif_receive_skb_core                    522/0xaa0 [kernel]


mlx5e_rep_netevent_event
mlx5e_rep_neigh_entry_lookup
mlx5e_rep_neigh_update		# neigh_update_work
mlx5e_rep_update_flows
neigh_timer_handler

9.866882 0       0       swapper/15      mlx5e_rep_netevent_event
        mlx5e_rep_netevent_event+0x1 [kernel]
        atomic_notifier_call_chain+0x1a [kernel]
        call_netevent_notifiers+0x1b [kernel]
        neigh_update+0x476 [kernel]
        arp_process+0x38b [kernel]
        arp_rcv+0x12b [kernel]
        __netif_receive_skb_one_core+0x57 [kernel]
        __netif_receive_skb+0x18 [kernel]
        netif_receive_skb_internal+0x45 [kernel]
        napi_gro_receive+0xc5 [kernel]
        mlx5e_handle_rx_cqe_mpwrq+0xd3 [kernel]
        mlx5e_poll_rx_cq+0xe2 [kernel]
        mlx5e_napi_poll+0xfc [kernel]
        net_rx_action+0x159 [kernel]
        __do_softirq+0xe4 [kernel]
        irq_exit+0xf8 [kernel]
        do_IRQ+0x8a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xa8 [kernel]
        cpuidle_enter+0x17 [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1f8 [kernel]
        cpu_startup_entry+0x73 [kernel]
        start_secondary+0x1ab [kernel]
        secondary_startup_64+0xa4 [kernel]

mlx5e_route_lookup_ipv4

0xffffffff8161b2b0 : neigh_update                    0/0x5c0 [kernel]
0xffffffff8168a274 : arp_process                    224/0x720 [kernel]
0xffffffff8168a8d0 : arp_rcv                    140/0x1c0 [kernel]
0xffffffff8160c556 : __netif_receive_skb_core                    396/0xa20 [kernel]
0xffffffff8160cbf8 : __netif_receive_skb                    18/0x60 [kernel]
0xffffffff8160e2cf : netif_receive_skb_internal                    4f/0x3e0 [kernel]
0xffffffff8160f17d : napi_gro_receive                    cd/0x140 [kernel]
0xffffffffa01ae811 : mlx5e_handle_rx_cqe_mpwrq                    4a1/0x820 [mlx5_core]
0xffffffffa01aeb18 : mlx5e_handle_rx_cqe_mpwrq                    7a8/0x820 [mlx5_core]
0xffffffffa01aff9a : mlx5e_rx_am                    2ea/0x2f0 [mlx5_core]
0xffffffff8160eb2c : net_rx_action                    26c/0x3b0 [kernel]
0xffffffff81736df9 : __irqentry_text_end                    c9/0x269 [kernel]
0xffffffff8108bf35 : irq_exit                    a5/0xb0 [kernel]
0xffffffff81735f91 : do_IRQ                    51/0xd0 [kernel]
0xffffffff81733e93 : ret_from_intr                    0/0x19 [kernel]


atomic_notifier_head netevent_notif_chain
struct atomic_notifier_head {
lock = {
{
  rlock = {
    raw_lock = {
      val = {
        counter = 0
      }
    }
  }
}
},
head = 0xffffffffa0679d80
}

list notifier_block.next
-s notifier_block

7
0xffffffffa01b7180 : mlx5e_rep_neigh_entry_lookup.isra.9                    d0/0x1a0 [mlx5_core]
0xffffffff810a62fa : atomic_notifier_call_chain                    1a/0x20 [kernel]
0xffffffff8161775b : call_netevent_notifiers                    1b/0x20 [kernel]
0xffffffff8161a587 : neigh_timer_handler                    b7/0x2b0 [kernel]
0xffffffff810f2485 : call_timer_fn                    35/0x140 [kernel]
0xffffffff810f3b28 : run_timer_softirq                    1d8/0x430 [kernel]
0xffffffff81736df9 : __irqentry_text_end                    c9/0x269 [kernel]
0xffffffff8108bf35 : irq_exit                    a5/0xb0 [kernel]
0xffffffff817368fd : smp_apic_timer_interrupt                    3d/0x50 [kernel]
0xffffffff81735213 : apic_timer_interrupt                    93/0xa0 [kernel]
0x0 (inexact)
parms: nb=0xffff880c06e3ceb0 event=0x1 ptr=0xffff880b4a81e000


list notifier_block.next 0xffffffffa0679d80 -s notifier_block
ffffffffa0679d80
struct notifier_block {
notifier_call = 0xffffffffa0661200,
next = 0xffff880ca18cdeb0,
priority = 0
}
ffff880ca18cdeb0
struct notifier_block {
notifier_call = 0xffffffffa00e4d60 <mlx5e_rep_netevent_event>,
next = 0xffff880c1c2578b0,
priority = 0
}
ffff880c1c2578b0
struct notifier_block {
notifier_call = 0xffffffffa00e4d60 <mlx5e_rep_netevent_event>,
next = 0xffff880c1c2552b0,
priority = 0
}
ffff880c1c2552b0
struct notifier_block {
notifier_call = 0xffffffffa00e4d60 <mlx5e_rep_netevent_event>,
next = 0x0,
priority = 0
}

mlx5e_rep_netevent_event

struct mlx5e_rep_priv {
    struct mlx5_eswitch_rep *rep;
    struct mlx5e_neigh_update_table neigh_update;
};

mlx5e_rep_priv
mlx5_eswitch_rep

mlx5e_rep_neigh_stats_work

mlx5e_configure_flower
    parse_tc_fdb_actions
            mlx5e_attach_encap
                    mlx5e_create_encap_header_ipv4
                            mlx5e_rep_encap_entry_attach
                                    mlx5e_rep_neigh_entry_lookup
                                    mlx5e_rep_neigh_entry_create
                                            mlx5e_rep_neigh_update
                                                    mlx5e_rep_update_flows	# mac address is changed

===sriov==

0xffffffff814beca0 : __device_attach                    0/0x160 [kernel]
0xffffffff814bee10 : device_attach                    10/0x20 [kernel]
0xffffffff813a888f : pci_bus_add_device                    4f/0xa0 [kernel]
0xffffffff813ce0d6 : pci_iov_add_virtfn                    246/0x340 [kernel]
0xffffffff813ce6a4 : pci_enable_sriov                    364/0x470 [kernel]
0xffffffffa0218ad5 : mlx5_core_sriov_configure                    115/0x260 [mlx5_core]
0xffffffff813b5b86 : sriov_numvfs_store                    126/0x1c0 [kernel]
0xffffffff814b8cb8 : dev_attr_store                    18/0x30 [kernel]
0xffffffff812a155a : sysfs_kf_write                    3a/0x50 [kernel]
0xffffffff812a103f : kernfs_fop_write                    ff/0x180 [kernel]
0xffffffff81218937 : __vfs_write                    37/0x160 [kernel]
0xffffffff812197b2 : vfs_write                    b2/0x1b0 [kernel]
0xffffffff8121ad15 : sys_write                    55/0xc0 [kernel]
0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8172c767 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)

0xffffffff814be750 : driver_sysfs_remove                    0/0x40 [kernel]
0xffffffff814bf65b : device_release_driver_internal                    eb/0x200 [kernel]
0xffffffff814bf782 : device_release_driver                    12/0x20 [kernel]
0xffffffff813ac43c : pci_stop_bus_device                    8c/0xa0 [kernel]
0xffffffff813ac5d2 : pci_stop_and_remove_bus_device                    12/0x20 [kernel]
0xffffffff813ce27f : pci_iov_remove_virtfn                    af/0x150 [kernel]
0xffffffff813ce7f6 : pci_disable_sriov                    46/0x100 [kernel]
0xffffffffa0218a0e : mlx5_core_sriov_configure                    4e/0x260 [mlx5_core]
0xffffffff813b5bc6 : sriov_numvfs_store                    166/0x1c0 [kernel]
0xffffffff814b8cb8 : dev_attr_store                    18/0x30 [kernel]
0xffffffff812a155a : sysfs_kf_write                    3a/0x50 [kernel]
0xffffffff812a103f : kernfs_fop_write                    ff/0x180 [kernel]
0xffffffff81218937 : __vfs_write                    37/0x160 [kernel]
0xffffffff812197b2 : vfs_write                    b2/0x1b0 [kernel]
0xffffffff8121ad15 : sys_write                    55/0xc0 [kernel]
0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8172c767 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)

0xffffffff813cde90 : pci_iov_add_virtfn                    0/0x340 [kernel]
0xffffffff813ce6a4 : pci_enable_sriov                    364/0x470 [kernel]
0xffffffffa0218ad5 : mlx5_core_sriov_configure                    115/0x260 [mlx5_core]
0xffffffff813b5b86 : sriov_numvfs_store                    126/0x1c0 [kernel]
0xffffffff814b8cb8 : dev_attr_store                    18/0x30 [kernel]
0xffffffff812a155a : sysfs_kf_write                    3a/0x50 [kernel]
0xffffffff812a103f : kernfs_fop_write                    ff/0x180 [kernel]
0xffffffff81218937 : __vfs_write                    37/0x160 [kernel]
0xffffffff812197b2 : vfs_write                    b2/0x1b0 [kernel]
0xffffffff8121ad15 : sys_write                    55/0xc0 [kernel]
0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8172c767 : return_from_SYSCALL_64                    0/0x6a [kernel]

devmon -d /dev/mst/mt4121_pciconf0 -no_gmon

pci=realloc intel_iommu=on biosdevname=0

mlx5_core_sriov_configure

mlx5_device_enable_sriov

include/linux/device.h

[root@bjglab-18 ~]# cat /sys/class/net/p2p1/device/sriov_numvfs
2

0xffffffff813de4f0 : sriov_numvfs_show                    0/0x30 [kernel]
0xffffffff814df030 : dev_attr_show                    20/0x50 [kernel]
0xffffffff812cd9df : sysfs_kf_seq_show                    bf/0x1a0 [kernel]
0xffffffff812cc0a1 : kernfs_seq_show                    21/0x30 [kernel]
0xffffffff8126a655 : seq_read                    115/0x390 [kernel]
0xffffffff812cc81f : kernfs_fop_read                    ff/0x180 [kernel]
0xffffffff81242157 : __vfs_read                    37/0x150 [kernel]
0xffffffff812430bc : vfs_read                    8c/0x130 [kernel]
0xffffffff81244695 : SyS_read                    55/0xc0 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]

include/linux/pci.h

===rep===

static const struct net_device_ops mlx5e_netdev_ops_rep = {
    .ndo_open                = mlx5e_rep_open,
    .ndo_stop                = mlx5e_rep_close,
    .ndo_start_xmit          = mlx5e_xmit,
    .ndo_get_phys_port_name  = mlx5e_rep_get_phys_port_name,
    .ndo_setup_tc            = mlx5e_rep_ndo_setup_tc,
    .ndo_get_stats64         = mlx5e_rep_get_stats,
    .ndo_has_offload_stats   = mlx5e_has_offload_stats,
    .ndo_get_offload_stats   = mlx5e_get_offload_stats,
};

mlx5e_build_rep_params

mlx5_eswitch_rep
mlx5_eswitch_rep.hw_id is the PF mac address

mlx5_eswitch_create_vport_rx_rule

3     65  drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c <<mlx5_eswitch_add_offloaded_rule>>
         dest[i].type = MLX5_FLOW_DESTINATION_TYPE_VPORT;
4    322  drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c <<mlx5_eswitch_add_send_to_vport_rule>>
         dest.type = MLX5_FLOW_DESTINATION_TYPE_VPORT;
5    403  drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c <<esw_add_fdb_miss_rule>>
         dest.type = MLX5_FLOW_DESTINATION_TYPE_VPORT;

===prm===

7.7NIC_Vport Context - NIC Virtual Port Context

mlx5_ifc_nic_vport_context_bits

===act_tunnel_key===

crash> tree -t ra ffff88101d361868 -s tcf_tunnel_key.params
ffff881034b0c600
params = 0xffff8807f5314ea0
ffff88077d2dcd00
params = 0xffff881031b2b600
crash> tcf_tunnel_key_params 0xffff8807f5314ea0
struct tcf_tunnel_key_params {
rcu = {
next = 0x0,
func = 0x0
},
tcft_action = 0x1,
action = 0x3,
tcft_enc_metadata = 0xffff881034b0cd00
}
crash> tcf_tunnel_key_params 0xffff881031b2b600
struct tcf_tunnel_key_params {
rcu = {
next = 0x0,
func = 0x0
},
tcft_action = 0x2,
action = 0x3,
tcft_enc_metadata = 0x0
}
crash> metadata_dst 0xffff881034b0cd00                                                                                                                                                                                                  [14/527]struct metadata_dst {
dst = {
dev = 0x0,
callback_head = {
  next = 0x0,
  func = 0x0
},
child = 0x0,
ops = 0xffffffff82076580 <md_dst_ops>,
_metrics = 0xffffffff818bfb01,
expires = 0x0,
path = 0xffff881034b0cd00,
from = 0x0,
xfrm = 0x0,
input = 0xffffffff8162a1d0 <dst_md_discard>,
output = 0xffffffff8162a180 <dst_md_discard_out>,
flags = 0x88,
error = 0x0,
obsolete = 0x0,
header_len = 0x0,
trailer_len = 0x0,
__pad3 = 0x0,
tclassid = 0x0,
__pad_to_align_refcnt = {0x0, 0x0},
__refcnt = {
  counter = 0x1
},
__use = 0x0,
lastuse = 0x1003521dc,
lwtstate = 0x0,
{
  next = 0x0,
  rt_next = 0x0,
  rt6_next = 0x0,
  dn_next = 0x0
}
},
type = METADATA_IP_TUNNEL,
u = {
tun_info = {
  key = {
    tun_id = 0x100000000000000,
    u = {
      ipv4 = {
        src = 0x0,
        dst = 0xd01a8c0
      },
      ipv6 = {
        src = {
          in6_u = {
            u6_addr8 = "\000\000\000\000\300\250\001\r\000\000\000\000\000\000\000",
            u6_addr16 = {0x0, 0x0, 0xa8c0, 0xd01, 0x0, 0x0, 0x0, 0x0},
            u6_addr32 = {0x0, 0xd01a8c0, 0x0, 0x0}
          }
        },
        dst = {
          in6_u = {
            u6_addr8 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
            u6_addr16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
            u6_addr32 = {0x0, 0x0, 0x0, 0x0}
          }
        }
      }
    },
    tun_flags = 0x500,
    tos = 0x0,
    ttl = 0x0,
    label = 0x0,
    tp_src = 0x0,
    tp_dst = 0xb512
  },
  dst_cache = {
    cache = 0x0,
    reset_ts = 0x0
  },
  options_len = 0x0,
  mode = 0x1
},
port_info = {
  lower_dev = 0x100000000000000,
  port_id = 0x0
}
}
}

#define TCA_TUNNEL_KEY_ACT_SET      1
#define TCA_TUNNEL_KEY_ACT_RELEASE  2

===act_gact===

0xffffffff816555a1 : tcf_generic_walker                   41/0x2b0 [kernel]
0xffffffffa0a0d166 : tcf_gact_walker                   56/0x70 [act_gact]
0xffffffff81654c6c : tc_dump_action                   10c/0x210 [kernel]
0xffffffff8165888c : netlink_dump                   12c/0x290 [kernel]
0xffffffff81658c56 : netlink_recvmsg                   266/0x420 [kernel]
0xffffffff815feecd : sock_recvmsg                   3d/0x50 [kernel]
0xffffffff815ffd47 : ___sys_recvmsg                   d7/0x1f0 [kernel]
0xffffffff816014b1 : __sys_recvmsg                   51/0x90 [kernel]
0xffffffff81601502 : sys_recvmsg                   12/0x20 [kernel]
0xffffffff810038c7 : do_syscall_64                   67/0x150 [kernel]
0xffffffff817580e7 : return_from_SYSCALL_64                   0/0x6a [kernel]
0x0 (inexact)
parms: cb=? skb=? idrinfo=?
execname: tc
ts: 1
0x7f545b589690 : __recvmsg_nocancel                   7/0x57 [/usr/lib64/libc-2.17.so]
0x43bbd1 : rtnl_dump_filter_l                   a1/0x4c0 [/usr/sbin/tc]
0x43c033 : rtnl_dump_filter_nc                   43/0x60 [/usr/sbin/tc]
0x410f29 : tc_act_list_or_flush.isra.1                   269/0x2a0 [/usr/sbin/tc]
0x411f2d : do_action                   16d/0x220 [/usr/sbin/tc]
0x4081e2 : main                   112/0x410 [/usr/sbin/tc]
0x7f545b4b2b35 : __libc_start_main                   f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x408509 : _start                   29/0x30 [/usr/sbin/tc]


0xffffffffa0918080 : gact_exit_net                    0/0x40 [act_gact]
0xffffffff815fc618 : ops_exit_list.isra.4                    38/0x60 [kernel]
0xffffffff815fccad : unregister_pernet_operations                    bd/0x120 [kernel]
0xffffffff815fcd31 : unregister_pernet_subsys                    21/0x30 [kernel]
0xffffffff8163c768 : tcf_unregister_action                    68/0xb0 [kernel]
0xffffffffa0918604 : cleanup_module                    17/0x0 [act_gact]

net/sched/cls_flower.c
include/net/act_api.h
net/sched/act_api.c

net/sched/act_bpf.c    
net/sched/act_connmark.c
net/sched/act_csum.c    
net/sched/act_gact.c    
net/sched/act_ife.c     
net/sched/act_ipt.c       
net/sched/act_mirred.c 
net/sched/act_nat.c     
net/sched/act_pedit.c   
net/sched/act_police.c  
net/sched/act_sample.c 
net/sched/act_simple.c  
net/sched/act_skbedit.c 
net/sched/act_skbmod.c  
net/sched/act_tunnel_key
net/sched/act_vlan.c    


include/net/pkt_cls.h

tc_dump_tfilter walks all tcf_proto
fl_walk	        walks all cls_fl_filter
fl_dump         dumps all keys

0xffffffffa0a343b0 : tcf_gact_dump                    0/0x190 [act_gact]
0xffffffff8163c6b7 : tcf_action_dump_1                    d7/0x140 [kernel]
0xffffffff8163cb64 : tcf_action_dump                    94/0xf0 [kernel]
0xffffffff81639ed4 : tcf_exts_dump                    e4/0x1f0 [kernel]
0xffffffffa0a27c3a : fl_dump                    3ea/0xb70 [cls_flower]
0xffffffff8163a4ef : tcf_fill_node                    10f/0x180 [kernel]
0xffffffff8163a84a : TCF_node_dump                    3a/0x40 [kernel]
0xffffffffa0a27154 : fl_walk                    64/0x80 [cls_flower]
0xffffffff8163a6f3 : tc_dump_tfilter                    193/0x2b0 [kernel]
0xffffffff8163f9a2 : netlink_dump                    122/0x290 [kernel]
0xffffffff8164096f : __netlink_dump_start                    15f/0x190 [kernel]
0xffffffff8161fbfe : rtnetlink_rcv_msg                    1ae/0x220 [kernel]		# move to here
0xffffffff81642987 : netlink_rcv_skb                    e7/0x120 [kernel]

0xffffffff8161a338 : rtnetlink_rcv                    28/0x30 [kernel]			# removed rtnl_lock/rtnl_unlock

static void rtnetlink_rcv(struct sk_buff *skb)
{
    rtnl_lock();
    netlink_rcv_skb(skb, &rtnetlink_rcv_msg);
    rtnl_unlock();
}

0xffffffff816420fc : netlink_unicast                    18c/0x240 [kernel]
0xffffffff81642475 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: skb=0xffff880b0e767600 a=0xffff880b8d667300 bind=0x0 ref=0x0
execname: tc
ts: 1
0x7f88d8cea7d0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x433440 : rtnl_dump_request                    b0/0xc0 [/usr/sbin/tc]
0x40b844 : tc_filter_list                    144/0x4f0 [/usr/sbin/tc]
0x407cb0 : main                    100/0x3b5 [/usr/sbin/tc]
0x7f88d8c13b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x407f8e : _start                    29/0x2b [/usr/sbin/tc]

use ida_get_new_above to allocate

gact_net_id
mirred_net_id
vlan_net_id
pedit_net_id

MIRRED_TAB_MASK
GACT_TAB_MASK
VLAN_TAB_MASK
PEDIT_TAB_MASK


#define TC_ACT_SHOT             2
#define TC_ACT_PIPE             3	drop
#define TC_ACT_STOLEN           4	mirred

-l tc_action.tcfa_head -s tc_action
-l tc_action.tcfa_head -s tcf_mirred
-l tc_action.tcfa_head -s tcf_vlan

list -H act_base -s tc_action_ops.kind
kind = "mirred\000\000\000\000\000\000\000\000\000"
kind = "gact\000\000\000\000\000\000\000\000\000\000\000"
kind = "vlan\000\000\000\000\000\000\000\000\000\000\000"

0xffffffff8163bbc0 : tcf_hash_create                    0/0x200 [kernel]
0xffffffffa0a3732f : tcf_gact_init                    18f/0x1e0 [act_gact]
0xffffffff8163c27a : tcf_action_init_1                    1da/0x330 [kernel]
0xffffffff8163c4e0 : tcf_action_init                    110/0x180 [kernel]
0xffffffff8163a0a4 : tcf_exts_validate                    c4/0x110 [kernel]
0xffffffffa0a42465 : fl_set_parms                    a5/0xa60 [cls_flower]
0xffffffffa0a4359f : fl_change                    20f/0xae0 [cls_flower]
0xffffffff8163ad7d : tc_ctl_tfilter                    42d/0x7c0 [kernel]
0xffffffff8161fb3e : rtnetlink_rcv_msg                    ee/0x220 [kernel]
0xffffffff81642a07 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff8161a338 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff8164217c : netlink_unicast                    18c/0x240 [kernel]
0xffffffff816424f5 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9df8 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea8d6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]
0x0 (inexact)
parms: tn=0xffff880b09a42290 index=0x0 est=0x0 a=0xffffc900003f7600 ops=0xffffffffa0a39040 bind=0x1 cpustats=0x1
execname: tc

===flower===

0xffffffffa08bf0f0 : fl_walk                    0/0x80 [cls_flower]
0xffffffff8163aff1 : tc_dump_tfilter                    1c1/0x3b0 [kernel]
0xffffffff81640662 : netlink_dump                    122/0x290 [kernel]
0xffffffff8164162f : __netlink_dump_start                    15f/0x190 [kernel]
0xffffffff8162012e : rtnetlink_rcv_msg                    1ae/0x220 [kernel]
0xffffffff81643647 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff8161a828 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81642dbc : netlink_unicast                    18c/0x240 [kernel]
0xffffffff81643135 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9f18 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea9f6 : ___sys_sendmsg                    2b6/0x2d0 [kernel]

tcf_fill_node
    tcm->tcm_info = TC_H_MAKE(tp->prio, tp->protocol);

register_tcf_proto_ops

tcf_auto_prio

tc_ctl_tfilter
    tcf_proto_create
    fl_get
    fl_change


fl_grab_new_handle

tcf_proto->root
cls_fl_head->filters
cls_fl_filter

tcf_proto_create

PF:

crash> net_device.ingress_cl_list  ffff880592310001
ingress_cl_list = 0xffff880c15aebd80
crash> list 0xffff8805c1632ba0 -s tcf_proto
ffff8805c1632ba0
struct tcf_proto {
next = 0xffff880c4381fc60,
root = 0xffff8805a4530c00,
classify = 0xffffffffa00cf660 <fl_classify>,
protocol = 0x81,
prio = 0xbffe0000,
classid = 0xffff0000,
q = 0xffff88059b1df000,
data = 0x0,
ops = 0xffffffffa00d2000 <cls_fl_ops>,
rcu = {
next = 0x0,
func = 0x0
}
}
ffff880c4381fc60
struct tcf_proto {
next = 0xffff880bec225a80,
root = 0xffff880bec616800,
classify = 0xffffffffa00cf660 <fl_classify>,
protocol = 0x81,
prio = 0xbfff0000,
classid = 0xffff0000,
q = 0xffff88059b1df000,
data = 0x0,
ops = 0xffffffffa00d2000 <cls_fl_ops>,
rcu = {
next = 0x0,
func = 0x0
}
}
ffff880bec225a80
struct tcf_proto {
next = 0x0,
root = 0xffff88099c10c400,
classify = 0xffffffffa00cf660 <fl_classify>,
protocol = 0x81,
prio = 0xc0000000,
classid = 0xffff0000,
q = 0xffff88059b1df000,
data = 0x0,
ops = 0xffffffffa00d2000 <cls_fl_ops>,
rcu = {
next = 0x0,
func = 0x0
}
}
crash> cls_fl_head.mask 0xffff88099c10c400
...
basic = {
  n_proto = 0xffff,
  ip_proto = 0x0,
  padding = 0x0
},
eth = {
  dst = "\377\377\377\377\377\377",
  src = "\377\377\377\377\377\377"
},
vlan = {
  vlan_id = 0xfff,
  vlan_priority = 0x7,
  padding = 0x0
},
...

crash> cls_fl_head  0xffff88099c10c400 -o
struct cls_fl_head {
[ffff8806164b7000] struct rhashtable ht;
[ffff8806164b70c0] struct fl_flow_mask mask;
[ffff8806164b7168] struct flow_dissector dissector;
[ffff8806164b7190] u32 hgen;
[ffff8806164b7194] bool mask_assigned;
[ffff8806164b7198] struct list_head filters;
[ffff8806164b71a8] struct rhashtable_params ht_params;
      union {
[ffff8806164b7200]     struct work_struct work;
[ffff8806164b7200]     struct callback_head rcu;
      };
}
SIZE: 0x220
crash> list cls_fl_filter.list  -H ffff8806164b7198 -s cls_fl_filter
ffff8806584e7600
struct cls_fl_filter {
ht_node = {
next = 0x3b
},
mkey = {
indev_ifindex = 0x0,
control = {
  thoff = 0x0,
  addr_type = 0x0,
  flags = 0x0
},
enc_control = {
  thoff = 0x0,
  addr_type = 0x0,
  flags = 0x0
},
basic = {
  n_proto = 0x608,
  ip_proto = 0x0,
  padding = 0x0
},
eth = {
  dst = "\002%\320\342\030P",
  src = "$\212\aU", <incomplete sequence \374>
},
vlan = {
  vlan_id = 0x34,
  vlan_priority = 0x0,
  padding = 0x0
},

exts = {
type = 0x0,
nr_actions = 0x2,
actions = 0xffff880662637900,
action = 0x3,		# TCA_FLOWER_ACT
police = 0x0
},

key = {
indev_ifindex = 0x0,
control = {
  thoff = 0x0,
  addr_type = 0x0,
  flags = 0x0
},
enc_control = {
  thoff = 0x0,
  addr_type = 0x0,
  flags = 0x0
},
basic = {
  n_proto = 0x608,
  ip_proto = 0x0,
  padding = 0x0
},
eth = {
  dst = "\002%\320\342\030P",
  src = "$\212\aU", <incomplete sequence \374>
},

crash> rd -8 ffff8806584e76d8 6
ffff8806584e76d8:  02 25 d0 e2 18 50                                 .%...P
crash> rd -8 ffff8806584e76de 6
ffff8806584e76de:  24 8a 07 55 10 fc                                 $..U..

vlan = {
  vlan_id = 0x34,
  vlan_priority = 0x0,
  padding = 0x0
},
...

crash> rd 0xffff880662637900 2
ffff880662637900:  ffff880662636d00 ffff880662636400   .mcb.....dcb....
crash> tc_action ffff880662636d00
struct tc_action {
ops = 0xffffffffa09a7040,
type = 0x0,
order = 0x1,
list = {
next = 0xffff880662636410,
prev = 0xffffc9000fd178f0
},
hinfo = 0xffff880562fdec20,
tcfa_head = {
next = 0x0,
pprev = 0xffff88017c279be0
},
tcfa_index = 0x1dc,
tcfa_refcnt = 0x1,
tcfa_bindcnt = 0x1,
tcfa_capab = 0x0,
tcfa_action = 0x3,
tcfa_tm = {
install = 0x10a434dad,
lastuse = 0x10a68aa00,
expires = 0x0,
firstuse = 0x10a435cfc
},
tcfa_bstats = {
bytes = 0x17ca,
packets = 0x91
},
tcfa_qstats = {
qlen = 0x0,
backlog = 0x0,
drops = 0x0,
requeues = 0x0,
overlimits = 0x0
},
tcfa_rate_est = 0x0,
tcfa_lock = {
{
  rlock = {
    raw_lock = {
      val = {
        counter = 0x0
      }
    }
  }
}
},
tcfa_rcu = {
next = 0x0,
func = 0x0
},
cpu_bstats = 0x0,
cpu_qstats = 0x0,
act_cookie = 0x0
}
crash> dis 0xffffffffa09a7040
0xffffffffa09a7040 <act_vlan_ops>:      (bad)
crash> tc_action  ffff880662636400
struct tc_action {
ops = 0xffffffffa09ac060,
type = 0x0,
order = 0x2,
list = {
next = 0xffffc9000fd178f0,
prev = 0xffff880662636d10
},
hinfo = 0xffff88064e8ebf60,
tcfa_head = {
next = 0x0,
pprev = 0xffff88059030e2f8
},
tcfa_index = 0x1ef,
tcfa_refcnt = 0x1,
tcfa_bindcnt = 0x1,
tcfa_capab = 0x0,
tcfa_action = 0x4,
tcfa_tm = {
install = 0x10a434dad,
lastuse = 0x10a699200,
expires = 0x0,
firstuse = 0x10a435cfc
},
tcfa_bstats = {
bytes = 0x0,
packets = 0x0
},
tcfa_qstats = {
qlen = 0x0,
backlog = 0x0,
drops = 0x0,
requeues = 0x0,
overlimits = 0x0
},
tcfa_rate_est = 0x0,
tcfa_lock = {
{
  rlock = {
    raw_lock = {
      val = {
        counter = 0x0
      }
    }
  }
}
},
tcfa_rcu = {
next = 0x0,
func = 0x0
},
cpu_bstats = 0x60f398805aa0,
cpu_qstats = 0x60f398806910,
act_cookie = 0x0
}
crash> dis 0xffffffffa09ac060
0xffffffffa09ac060 <act_mirred_ops>:    loopne 0xffffffffa09abffe


rep:

crash> net_device.ingress_cl_list  ffff8805d61a0000
ingress_cl_list = 0xffff8806388b38a0
crash> list 0xffff8806388b38a0
ffff8806388b38a0
ffff880c4381f0c0
ffff880602ce7240
crash> list 0xffff8806388b38a0 -s tcf_proto
ffff8806388b38a0
struct tcf_proto {
next = 0xffff880c4381f0c0,
root = 0xffff88055ef53000,
classify = 0xffffffffa00cf660,
protocol = 0x608,
prio = 0xbffe0000,
classid = 0xffff0000,
q = 0xffff88056f827800,
data = 0x0,
ops = 0xffffffffa00d2000,
rcu = {
next = 0x0,
func = 0x0
}
}
ffff880c4381f0c0
struct tcf_proto {
next = 0xffff880602ce7240,
root = 0xffff88065c69dc00,
classify = 0xffffffffa00cf660,
protocol = 0x8,
prio = 0xbfff0000,
classid = 0xffff0000,
q = 0xffff88056f827800,
data = 0x0,
ops = 0xffffffffa00d2000,
rcu = {
next = 0x0,
func = 0x0
}
}
ffff880602ce7240
struct tcf_proto {
next = 0x0,
root = 0xffff8806164b4800,
classify = 0xffffffffa00cf660,
protocol = 0x608,
prio = 0xc0000000,
classid = 0xffff0000,
q = 0xffff88056f827800,
data = 0x0,
ops = 0xffffffffa00d2000,
rcu = {
next = 0x0,
func = 0x0
}
}
crash> cls_fl_head 0xffff8806164b4800
...
mask = {
key = {
  indev_ifindex = 0x0,
  control = {
    thoff = 0x0,
    addr_type = 0x0,
    flags = 0x0
  },
  enc_control = {
    thoff = 0x0,
    addr_type = 0x0,
    flags = 0x0
  },
  basic = {
    n_proto = 0xffff,
    ip_proto = 0x0,
    padding = 0x0
  },
  eth = {
    dst = "\377\377\377\377\377\377",
    src = "\377\377\377\377\377\377"
  },
  vlan = {
    vlan_id = 0x0,
    vlan_priority = 0x0,
    padding = 0x0
  },
...


mlx5e_ndo_setup_tc
    mlx5e_configure_flower
            parse_tc_nic_actions
                    parse_tc_pedit_action
    mlx5e_delete_flower

===tir===

mlx5e_create_direct_tirs
mlx5e_create_tir
mlx5_core_create_tir

===mlx-cq===

cq = {
wq = {
  frag_buf = {
    frags = 0xffff8801955ded00,
    npages = 0x10,
    size = 0x10000,
    page_shift = 0xc
  },
  db = 0xffff88021e66b940,
  sz_m1 = 0x3ff,
  frag_sz_m1 = 0x3f,
  cc = 0x29f,
  log_sz = 0xa,
  log_stride = 0x6,
  log_frag_strides = 0x6
},

===mlx-tx===

crash> mlx5e_txqsq.cc,pc  ffff880f46011840
  cc = 0xa31
  pc = 0xa86

mlx5e_enable_sq
    MLX5_SET(sqc,  sqc, cqn,                sq->cq.mcq.cqn);

mlx5e_enable_rq
    MLX5_SET(rqc,  rqc, cqn,                rq->cq.mcq.cqn);

mlx5e_open_sq
mlx5_wq_cyc_create
mlx5_buf_alloc_node(0x1000)

mlx5e_open_sq
mlx5_wq_cyc_create
mlx5_buf_alloc_node (0x10000)

mlx5e_create_rq
mlx5_wq_ll_create
mlx5_buf_alloc_node (0x8000)


96   3696  include/linux/skbuff.h <<skb_record_rx_queue>>
         skb->queue_mapping = rx_queue + 1;

93   3681  include/linux/skbuff.h <<skb_set_queue_mapping>>
         skb->queue_mapping = queue_mapping;

netdev_pick_tx
skb_set_queue_mapping(skb, queue_index);
mlx5e_select_queue

sk_tx_queue_set

===ip_protocol

0 HOPOPT IPv6 Hop-by-Hop Option [RFC1883]
1 ICMP Internet Control Message [RFC792]
2 IGMP Internet Group Management [RFC1112]
3 GGP Gateway-to-Gateway [RFC823]
4 IP IP in IP (encapsulation) [RFC2003]
5 ST Stream [RFC1190,RFC1819]
6 TCP Transmission Control [RFC793]
7 CBT CBT [Ballardie]
8 EGP Exterior Gateway Protocol [RFC888,DLM1]
9 IGP any private interior gateway [IANA]
(used by Cisco for their IGRP)
10 BBN-RCC-MON BBN RCC Monitoring [SGC]
11 NVP-II Network Voice Protocol [RFC741,SC3]
12 PUP PUP [PUP,XEROX]
13 ARGUS ARGUS [RWS4]
14 EMCON EMCON [BN7]
15 XNET Cross Net Debugger [IEN158,JFH2]
16 CHAOS Chaos [NC3]
17 UDP User Datagram [RFC768,JBP]
18 MUX Multiplexing [IEN90,JBP]
19 DCN-MEAS DCN Measurement Subsystems [DLM1]
20 HMP Host Monitoring [RFC869,RH6]
21 PRM Packet Radio Measurement [ZSU]
22 XNS-IDP XEROX NS IDP [ETHERNET,XEROX]
23 TRUNK-1 Trunk-1 [BWB6]
24 TRUNK-2 Trunk-2 [BWB6]
25 LEAF-1 Leaf-1 [BWB6]
26 LEAF-2 Leaf-2 [BWB6]
27 RDP Reliable Data Protocol [RFC908,RH6]
28 IRTP Internet Reliable Transaction [RFC938,TXM]
29 ISO-TP4 ISO Transport Protocol Class 4 [RFC905,RC77]
30 NETBLT Bulk Data Transfer Protocol [RFC969,DDC1]
31 MFE-NSP MFE Network Services Protocol [MFENET,BCH2]
32 MERIT-INP MERIT Internodal Protocol [HWB]
33 SEP Sequential Exchange Protocol [JC120]
34 3PC Third Party Connect Protocol [SAF3]
35 IDPR Inter-Domain Policy Routing Protocol [MXS1]
36 XTP XTP [GXC]
37 DDP Datagram Delivery Protocol [WXC]
38 IDPR-CMTP IDPR Control Message Transport Proto [MXS1]
39 TP++ TP++ Transport Protocol [DXF]
40 IL IL Transport Protocol
41 IPv6 Ipv6 [Deering]
42 SDRP Source Demand Routing Protocol [DXE1]
43 IPv6-Route Routing Header for IPv6 [Deering]
44 IPv6-Frag Fragment Header for IPv6 [Deering]
45 IDRP Inter-Domain Routing Protocol [Sue Hares]
46 RSVP Reservation Protocol [Bob Braden]
47 GRE General Routing Encapsulation [Tony Li]
48 MHRP Mobile Host Routing Protocol[David Johnson]
49 BNA BNA [Gary Salamon]
50 ESP Encap Security Payload for IPv6 [RFC2406]
51 AH Authentication Header for IPv6 [RFC2402]
52 I-NLSP Integrated Net Layer Security TUBA [GLENN]
53 SWIPE IP with Encryption [JI6]
54 NARP NBMA Address Resolution Protocol [RFC1735]
55 MOBILE IP Mobility [Perkins]
56 TLSP Transport Layer Security Protocol [Oberg]
57 SKIP SKIP [Markson]
58 IPv6-ICMP ICMP for IPv6 [RFC1883]
59 IPv6-NoNxt No Next Header for IPv6 [RFC1883]
60 IPv6-Opts Destination Options for IPv6 [RFC1883]
61 any host internal protocol [IANA]
62 CFTP CFTP [CFTP,HCF2]
63 any local network [IANA]
64 SAT-EXPAK SATNET and Backroom EXPAK [SHB]
65 KRYPTOLAN Kryptolan [PXL1]
66 RVD MIT Remote Virtual Disk Protocol [MBG]
67 IPPC Internet Pluribus Packet Core [SHB]
68 any distributed file system [IANA]
69 SAT-MON SATNET Monitoring [SHB]
70 VISA VISA Protocol [GXT1]
71 IPCV Internet Packet Core Utility [SHB]
72 CPNX Computer Protocol Network Executive [DXM2]
73 CPHB Computer Protocol Heart Beat [DXM2]
74 WSN Wang Span Network [VXD]
75 PVP Packet Video Protocol [SC3]
76 BR-SAT-MON Backroom SATNET Monitoring [SHB]
77 SUN-ND SUN ND PROTOCOL-Temporary [WM3]
78 WB-MON WIDEBAND Monitoring [SHB]
79 WB-EXPAK WIDEBAND EXPAK [SHB]
80 ISO-IP ISO Internet Protocol [MTR]
81 VMTP VMTP [DRC3]
82 SECURE-VMTP SECURE-VMTP [DRC3]
83 VINES VINES [BXH]
84 TTP TTP [JXS]
85 NSFNET-IGP NSFNET-IGP [HWB]
86 DGP Dissimilar Gateway Protocol [DGP,ML109]
87 TCF TCF [GAL5]
88 EIGRP EIGRP [CISCO,GXS]
89 OSPFIGP OSPFIGP [RFC1583,JTM4]
90 Sprite-RPC Sprite RPC Protocol [SPRITE,BXW]
91 LARP Locus Address Resolution Protocol [BXH]
92 MTP Multicast Transport Protocol [SXA]
93 AX.25 AX.25 Frames [BK29]
94 IPIP IP-within-IP Encapsulation Protocol [JI6]
95 MICP Mobile Internetworking Control Pro. [JI6]
96 SCC-SP Semaphore Communications Sec. Pro. [HXH]
97 ETHERIP Ethernet-within-IP Encapsulation [RFC3378]
98 encap Encapsulation Header [RFC1241,RXB3]
99 any private encryption scheme [IANA]
100 GMTP GMTP [RXB5]
101 IFMP Ipsilon Flow Management Protocol [Hinden]
102 PNNI PNNI over IP [Callon]
103 PIM Protocol Independent Multicast [Farinacci]
104 ARIS ARIS [Feldman]
105 SCPS SCPS [Durst]
106 QNX QNX [Hunter]
107 A/N Active Networks [Braden]
108 IPComp IP Payload Compression Protocol [RFC2393]
109 SNP Sitara Networks Protocol [Sridhar]
110 Compaq-Peer Compaq Peer Protocol [Volpe]
111 IPX-in-IP IPX in IP [Lee]
112 VRRP Virtual Router Redundancy Protocol [Hinden]
113 PGM PGM Reliable Transport Protocol [Speakman]
114 any 0-hop protocol [IANA]
115 L2TP Layer Two Tunneling Protocol [Aboba]
116 DDX D-II Data Exchange (DDX) [Worley]
117 IATP Interactive Agent Transfer Protocol [Murphy]
118 STP Schedule Transfer Protocol [JMP]
119 SRP SpectraLink Radio Protocol [Hamilton]
120 UTI UTI[Lothberg]
121 SMP Simple Message Protocol [Ekblad]
122 SMSM [Crowcroft]
123 PTP Performance Transparency Protocol [Welzl]
124 ISIS over IPv4 [Przygienda]
125 FIRE [Partridge]
126 CRTPCombat Radio Transport Protocol [Sautter]
127 CRUDPCombat Radio User Datagram [Sautter]
128 SSCOPMCE [Waber]
129 IPLT[Hollbach]
130 SPS Secure Packet Shield [McIntosh]
131 PIPE Private IP Encapsulation within IP [Petri]
132 SCTP Stream Control Transmission Protocol [Stewart]
133 FC Fibre Channel [Rajagopal]
134 RSVP-E2E-IGNORE [RFC3175]
135-254 Unassigned [IANA]
255 Reserved [IANA]

===switch===

mlx5_eswitch_enable_sriov

mlx5e_open
mlx5e_open_locked
mlx5e_add_sqs_fwd_rules
mlx5_eswitch_sqs2vport_start
mlx5_eswitch_add_send_to_vport_rule

33-33-00-00-00-00	86DD	IPv6 Neighbor Discovery
through
33-33-FF-FF-FF-FF

       vport 1 (VF1)
      ||          /\
      \/          ||

rep:	tirn 205     sqn 211

crash> net
NET_DEVICE     NAME   IP ADDRESS(ES)
ffff880c5a8d0000  p2p1   1.1.1.18
ffff880597460000  eth0
crash> mlx5e_priv.ppriv ffff880c5a8d08c0
ppriv = 0xffff88017c798e00
crash> mlx5_eswitch_rep  0xffff88017c798e00 -x
struct mlx5_eswitch_rep {
load = 0xffffffffa00e1020 <mlx5e_add_sqs_fwd_rules+240>,
unload = 0xffffffffa00e1080 <mlx5e_remove_sqs_fwd_rules+32>,
vport = 0xffff,
hw_id = "$\212\a\210", <incomplete sequence \312>,
netdev = 0xffff880c5a8d0000,
vport_rx_rule = 0x0,
vport_sqs_list = {
next = 0xffff880553bcf248,
prev = 0xffff880553bcf068
},
vlan = 0x0,
vlan_refcount = 0x0,
valid = 0x1
}
crash> mlx5e_priv.ppriv  ffff8805974608c0
ppriv = 0xffff88017c798e48
crash> mlx5_eswitch_rep  0xffff88017c798e48
struct mlx5_eswitch_rep {
load = 0xffffffffa00e1140 <mlx5e_is_vf_vport_rep+32>,
unload = 0xffffffffa00e1210 <mlx5e_vport_rep_load+192>,
vport = 1,
hw_id = "$\212\a\210", <incomplete sequence \312>,
netdev = 0xffff880597460000,
vport_rx_rule = 0xffff8806674fee30,
vport_sqs_list = {
next = 0xffff880553bcf7e8,
prev = 0xffff880553bcf7e8
},
vlan = 0,
vlan_refcount = 0,
valid = true
}
crash> mlx5_flow_handle  0xffff8806674fee30
struct mlx5_flow_handle {
num_rules = 1,
rule = 0xffff8806674fee38
}
crash> rd 0xffff8806674fee38
ffff8806674fee38:  ffff88055703d080                    ...W....
crash> mlx5_flow_rule ffff88055703d080
struct mlx5_flow_rule {
...
parent = 0xffff880662d39400,
dest_attr = {
type = MLX5_FLOW_DESTINATION_TYPE_TIR,
{
  tir_num = 205,
}
},
crash> fs_fte 0xffff880662d39400 -x
parent = 0xffff88066368b000,
val = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
crash> mlx5_flow_group 0xffff88066368b000 -x
parent = 0xffff880c6108c800,
mask = {
match_criteria_enable = 0x2,
match_criteria = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffff0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
},
crash> mlx5_flow_table 0xffff880c6108c800
id = 9,
vport = 0,
max_fte = 4,
level = 18,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,
crash> mlx5_eswitch.offloads 0xffff88065743a000
offloads = {
ft_offloads = 0xffff880c6108c800,
vport_rx_group = 0xffff88066368b000,
vport_reps = 0xffff88017c798e00,
crash> mlx5_eswitch 0xffff88065743a000
fdb_table = {
fdb = 0xffff880557e2ea00,
{
  legacy = {
    addr_grp = 0xffff880557e2e000,
    allmulti_grp = 0xffff880c62e0ec00,
    promisc_grp = 0xffff880c62e0f800
  },
  offloads = {
    fdb = 0xffff880557e2e000,
    send_to_vport_grp = 0xffff880c62e0ec00,
    miss_grp = 0xffff880c62e0f800,
    miss_rule = 0xffff8806674fe9b0,
    vlan_push_pop_refcount = 0
  }
}
},
crash> mlx5_flow_table 0xffff880557e2e000
children = {
  next = 0xffff880c62e0ec00,
  prev = 0xffff880c62e0f800
},
id = 8,
vport = 0,
max_fte = 512,
level = 1,
type = FS_FT_FDB,
op_mod = FS_FT_OP_MOD_NORMAL,
crash> list 0xffff880c62e0ec00 -s mlx5_flow_group -x
children = {
  next = 0xffff88066368d800,
  prev = 0xffff880c6127b000
},
mask = {
match_criteria_enable = 0x2,
match_criteria = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff00, 0xffff0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
},
start_index = 0x0,
max_ftes = 0x103,
num_ftes = 0x12,
id = 0x11
crash> list 0xffff88066368d800 -s fs_fte -x
children = {
  next = 0xffff88055703c3c0,
  prev = 0xffff88055703c3c0
},
val = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8b000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
...
children = {
  next = 0xffff8805c7c718c0,
  prev = 0xffff8805c7c718c0
},
val = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd3000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},

crash> mlx5_flow_rule 0xffff88055703c3c0 -x
dest_attr = {
type = MLX5_FLOW_DESTINATION_TYPE_VPORT,
{
  vport_num = 0xffff,
}
},
crash> mlx5_flow_rule 0xffff8805c7c718c0 -x
dest_attr = {
type = MLX5_FLOW_DESTINATION_TYPE_VPORT,
{
  vport_num = 0x1,
}
},
crash> eval d3
hexadecimal: d3
decimal: 211
  octal: 323
 binary: 0000000000000000000000000000000000000000000000000000000011010011
crash> mlx5e_priv  ffff8805974608c0
...
direct_tir = {{
  tirn = 205,
  rqt = {
    rqtn = 17,
    enabled = true
  },
  list = {
    next = 0xffff880c5a8d20a0,
    prev = 0xffff880597bc1ec0
  }
}, {
...
crash> mlx5e_priv.channel  ffff8805974608c0| less
channel = 0xffff8806fceeaaa8
crash> mlx5e_priv.channel  ffff8805974608c0
channel = 0xffff8806fceeaaa8
crash> rd 0xffff8806fceeaaa8
ffff8806fceeaaa8:  ffff8805ddb60000                    ........
sh> mlx5e_channel ffff8805ddb60000 | grep 211
  sqn = 211,


get all the tirn
crash> mlx5e_priv.mdev ffff880c5a8d08c0
mdev = 0xffff8806596c0060
crash> mlx5_core_dev.mlx5e_res 0xffff8806596c0060
mlx5e_res = {
pdn = 1,	# protection domain
td = {
  tirs_list = {
    next = 0xffff880597bc1ec0,
    prev = 0xffff880c5a8d1d80
  },
  tdn = 1	# transport domain
},
mkey = {
  iova = 0,
  size = 0,
  key = 4096,
  pd = 1,
  type = 0
}
}
crash> mlx5_core_dev.mlx5e_res 0xffff8806596c0060 -o
struct mlx5_core_dev {
[ffff8806596f68f8] struct mlx5e_resources mlx5e_res;
}
crash> mlx5e_resources ffff8806596f68f8 -o
struct mlx5e_resources {
[ffff8806596f68f8] u32 pdn;
[ffff8806596f6900] struct mlx5_td td;
[ffff8806596f6918] struct mlx5_core_mkey mkey;
}
SIZE: 64
crash> mlx5_td ffff8806596f6900 -o
struct mlx5_td {
[ffff8806596f6900] struct list_head tirs_list;
[ffff8806596f6910] u32 tdn;
}
SIZE: 24
crash> list mlx5e_tir.list -H ffff8806596f6900 -s mlx5e_tir | grep tirn
tirn = 209,	# rep for vf2
tirn = 205,	# rep for vf1
tirn = 131,
tirn = 130,
tirn = 129,
tirn = 128,
tirn = 127,
tirn = 126,
tirn = 125,
tirn = 124,
tirn = 123,
tirn = 122,
tirn = 121,
tirn = 120,
tirn = 119,
tirn = 118,
tirn = 117,
tirn = 116,
tirn = 115,
tirn = 114,
tirn = 113,
tirn = 112,
tirn = 111,
tirn = 110,
tirn = 109,
tirn = 108,
tirn = 107,
tirn = 106,

===startup===

FDB_UPLINK_VPORT

eth_zero_addr
eth_broadcast_addr

static struct pci_driver mlx5_core_driver = {
    .name           = DRIVER_NAME,
    .id_table       = mlx5_core_pci_table,
    .probe          = init_one,
    .remove         = remove_one,
    .shutdown       = shutdown,
    .err_handler    = &mlx5_err_handler,
    .sriov_configure   = mlx5_core_sriov_configure,
};

static const struct pci_device_id mlx5_core_pci_table[] = {
    { PCI_VDEVICE(MELLANOX, 0x1011) },                      /* Connect-IB */
    { PCI_VDEVICE(MELLANOX, 0x1012), MLX5_PCI_DEV_IS_VF},   /* Connect-IB VF */
    { PCI_VDEVICE(MELLANOX, 0x1013) },                      /* ConnectX-4 */
    { PCI_VDEVICE(MELLANOX, 0x1014), MLX5_PCI_DEV_IS_VF},   /* ConnectX-4 VF */
    { PCI_VDEVICE(MELLANOX, 0x1015) },                      /* ConnectX-4LX */
    { PCI_VDEVICE(MELLANOX, 0x1016), MLX5_PCI_DEV_IS_VF},   /* ConnectX-4LX VF */
    { PCI_VDEVICE(MELLANOX, 0x1017) },                      /* ConnectX-5, PCIe 3.0 */
    { PCI_VDEVICE(MELLANOX, 0x1018), MLX5_PCI_DEV_IS_VF},   /* ConnectX-5 VF */
    { PCI_VDEVICE(MELLANOX, 0x1019) },                      /* ConnectX-5, PCIe 4.0 */
    { PCI_VDEVICE(MELLANOX, 0x101a), MLX5_PCI_DEV_IS_VF},   /* ConnectX-5, PCIe 4.0 VF */
    { 0, }
};

init_one
mlx5_load_one


===ft===

crash> init_tree_node root_fs
struct init_tree_node {
type = FS_TYPE_NAMESPACE,
children = 0xffffffffa00f4d00 <__compound_literal.114>,
ar_size = 7,
caps = {
arr_sz = 0,
caps = 0x0
},
min_ft_level = 0,
num_leaf_prios = 0,
prio = 0,
num_levels = 0
}
crash> init_tree_node.min_ft_level  0xffffffffa00f4d00 -c 7
min_ft_level = 34
min_ft_level = 37
min_ft_level = 36
min_ft_level = 16
min_ft_level = 5
min_ft_level = 34
min_ft_level = 35

crash> mlx5_eswitch 0xffff88065743a000
fdb_table = {
  offloads = {
    fdb = 0xffff880557e2e000,
id = 8,
vport = 0,
max_fte = 512,
level = 1,
type = FS_FT_FDB,
op_mod = FS_FT_OP_MOD_NORMAL,
match.val = 211	# sqn
dest_attr = {
type = MLX5_FLOW_DESTINATION_TYPE_VPORT,
{
  vport_num = 0x1,
}
},

mlx5_eswitch.offloads
id = 9,
vport = 0,
max_fte = 4,
level = 18,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,
match.val = 1
dest_attr = {
type = MLX5_FLOW_DESTINATION_TYPE_TIR,
{
  tir_num = 205,
}
},

vlan
id = 7,
vport = 0,
max_fte = 8192,
level = 31,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

l2
id = 6,
vport = 0,
max_fte = 65536,
level = 32,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

tcc
id = 5,
vport = 0,
max_fte = 16,
level = 33,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

arfs
id = 1,
vport = 0,
max_fte = 8192,
level = 34,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

id = 3,
vport = 0,
max_fte = 8192,
level = 34,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

id = 2,
vport = 0,
max_fte = 8192,
level = 34,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

id = 4,
vport = 0,
max_fte = 8192,
level = 34,
type = FS_FT_NIC_RX,
op_mod = FS_FT_OP_MOD_NORMAL,

===mlx5_wq_ll===

mlx5e_alloc_rx_mpwqe

mlx5e_create_rq
    mlx5_wq_ll_create
            mlx5_buf_alloc_node
                    mlx5_dma_zalloc_coherent_node
                            dma_zalloc_coherent
mlx5e_enable_rq
    mlx5_fill_page_array

mlx5_wq_cyc_create
    mlx5_buf_alloc_node


mlx5e_create_cq
    mlx5_cqwq_create
            mlx5_frag_buf_alloc_node
                    mlx5_dma_zalloc_coherent_node
                            dma_zalloc_coherent
mlx5e_enable_cq
    mlx5_fill_page_frag_array

===gro===

6.784563 0       0       swapper/7       tcp4_gro_complete
        tcp4_gro_complete+0x1 [kernel]
        napi_gro_complete+0x47 [kernel]
        dev_gro_receive+0x38b [kernel]
        napi_gro_receive+0x38 [kernel]
        mlx5e_handle_rx_cqe_mpwrq+0x1cb [kernel]
        mlx5e_poll_rx_cq+0xe2 [kernel]
        mlx5e_napi_poll+0xfc [kernel]
        net_rx_action+0x159 [kernel]
        __do_softirq+0xe4 [kernel]
        irq_exit+0xf8 [kernel]
        do_IRQ+0x8a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xa8 [kernel]
        cpuidle_enter+0x17 [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1f8 [kernel]
        cpu_startup_entry+0x73 [kernel]
        start_secondary+0x1ab [kernel]
        secondary_startup_64+0xa4 [kernel]

dev_gro_receive

                /* Setup for GRO checksum validation */
                switch (skb->ip_summed) {
                case CHECKSUM_COMPLETE:
                        NAPI_GRO_CB(skb)->csum = skb->csum;
                        NAPI_GRO_CB(skb)->csum_valid = 1;
                        NAPI_GRO_CB(skb)->csum_cnt = 0;
                        break;

rx tx checksum off

4.907757 0       0       swapper/2       __skb_checksum
        __skb_checksum
        __skb_gro_checksum_complete
        tcp4_gro_receive
        inet_gro_receive
        dev_gro_receive
        napi_gro_receive
        mlx5e_handle_rx_cqe_mpwrq
        mlx5e_poll_rx_cq
        mlx5e_napi_poll
        net_rx_action
        __softirqentry_text_start+0xe4 [kernel]
        irq_exit+0xf8 [kernel]
        do_IRQ+0x8a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xa8 [kernel]
        cpuidle_enter+0x17 [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1f8 [kernel]
        cpu_startup_entry+0x73 [kernel]
        start_secondary+0x1ab [kernel]
        secondary_startup_64+0xa4 [kernel]

napi_gro_receive
dev_gro_receive
tcp4_gro_receive
tcp_gro_receive
skb_gro_receive


commit c1e60bd4fe65ede0c7567d22b1e92a07b75c370f
Merge: 8fc54f689192 48a5fc773190
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Aug 24 18:09:58 2014 -0700

    Merge branch 'csums-next'

    Tom Herbert says:

commit 89319d3801d1d3ac29c7df1f067038986f267d29
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Dec 15 23:26:06 2008 -0800

    net: Add frag_list support to skb_segment

    This patch adds limited support for handling frag_list packets in
    skb_segment.  The intention is to support GRO (Generic Receive Offload)
    packets which will be constructed by chaining normal packets using
    frag_list.

    As such we require all frag_list members terminate on exact MSS
    boundaries.  This is checked using BUG_ON.

    As there should only be one producer in the kernel of such packets,
    namely GRO, this requirement should not be difficult to maintain.

    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit d565b0a1a9b6ee7dff46e1f68b26b526ac11ae50
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Dec 15 23:38:52 2008 -0800

    net: Add Generic Receive Offload infrastructure


commit bf296b125b21b8d558ceb6ec30bb4eba2730cd6b
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Dec 15 23:43:36 2008 -0800

    tcp: Add GRO support

    This patch adds the TCP-specific portion of GRO.  The criterion for
    merging is extremely strict (the TCP header must match exactly apart
    from the checksum) so as to allow refragmentation.  Otherwise this
    is pretty much identical to LRO, except that we support the merging
    of ECN packets.

    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>

===gso===

commit f6a78bfcb141f963187464bac838d46a81c3882a
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu Jun 22 02:57:17 2006 -0700

    [NET]: Add generic segmentation offload

    This patch adds the infrastructure for generic segmentation offload.
    The idea is to tap into the potential savings of TSO without hardware
    support by postponing the allocation of segmented skb's until just
    before the entry point into the NIC driver.

    The same structure can be used to support software IPv6 TSO, as well as
    UFO and segmentation offload for other relevant protocols, e.g., DCCP.

    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>

skb_gso_segment
tcp_gso_segment

===msix===

__pci_enable_msix
pci_msix_vec_count

===rx===

on the receive side, network_header and transport_head haven't be set.

tcph = (struct tcphdr *)(skb->head + skb->mac_header + 34);
if (ntohs(tcph->dest) == 4000) {
	print_hex_dump(KERN_WARNING, "dump: ", DUMP_PREFIX_ADDRESS, 14, 1, skb->head + skb->mac_header, 14, 0);
	print_hex_dump(KERN_WARNING, "dump: ", DUMP_PREFIX_ADDRESS, 10, 1, skb->head + skb->mac_header + 14, 20, 0);
	print_hex_dump(KERN_WARNING, "dump: ", DUMP_PREFIX_ADDRESS, 10, 1, skb->head + skb->mac_header + 34, 20, 0);
}

        struct tcphdr *tcph;
        struct iphdr *iph;

        tcph = tcp_hdr(skb);
        iph = ip_hdr(skb);
        if (ntohs(tcph->dest) == 4000) {
                pr_info("%s: tot_len: %d\n", __func__, ntohs(iph->tot_len));
                print_hex_dump(KERN_WARNING, "dump: ", DUMP_PREFIX_ADDRESS, 14, 1, skb->head + skb->mac_header, 14, 0);
                print_hex_dump(KERN_WARNING, "dump: ", DUMP_PREFIX_ADDRESS, 10, 1, skb->head + skb->mac_header + 14, 20, 0);
                print_hex_dump(KERN_WARNING, "dump: ", DUMP_PREFIX_ADDRESS, 10, 1, skb->head + skb->mac_header + 34, 20, 0);
        }

napi_gro_receive always return GRO_NORMAL, so netif_receive_skb_internal is called

mlx5e_handle_rx_cqe_mpwrq is called
not
mlx5e_handle_rx_cqe

        mlx5e_free_rx_mpwqe
        mlx5e_poll_rx_cq
        mlx5e_napi_poll
        net_rx_action
        __softirqentry_text_start+0xde [kernel]
        run_ksoftirqd+0x1f [kernel]
        smpboot_thread_fn+0xfc [kernel]
        kthread+0x121 [kernel]
        ret_from_fork+0x35 [kernel]

        mlx5e_page_release
        mlx5e_handle_rx_cqe_mpwrq
        mlx5e_poll_rx_cq
        mlx5e_napi_poll
        net_rx_action
        __softirqentry_text_start+0xde [kernel]
        run_ksoftirqd+0x1f [kernel]
        smpboot_thread_fn+0xfc [kernel]
        kthread+0x121 [kernel]
        ret_from_fork+0x35 [kernel]

mlx5e_handle_rx_cqe_mpwrq
    mlx5e_skb_from_cqe_mpwrq_linear

echo xor > /sys/class/net/eth*/settings/hfunc 

mlx5_wq_ll_create

8.9.4.1.1   Ctrl Segment
        MLX5_OPCODE_UMR                 = 0x25,

8.9.4.1.6   User-mode Memory Registration (UMR) WQE Format

mlx5e_post_rx_mpwqe
        mlx5_wq_ll_push

0       0       swapper/14      mlx5e_post_rx_mpwqes
        mlx5e_post_rx_mpwqes
        net_rx_action
        __softirqentry_text_start+0xde [kernel]
        irq_exit+0xf2 [kernel]
        do_IRQ+0x8a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xb0 [kernel]
        cpuidle_enter+0x17 [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1e1 [kernel]
        cpu_startup_entry+0x1d [kernel]
        start_secondary+0x199 [kernel]
        secondary_startup_64+0xa4 [kernel]

8.9.4.5Shared Receive WQE Format

MLX5_MPWRQ_PAGES_PER_WQE = 0x40

mlx5e_skb_from_cqe_mpwrq_linear

0xffffffffa020dfd0 : mlx5e_free_rx_mpwqe                    0/0x70 [mlx5_core]
0xffffffffa0210174 : mlx5e_handle_rx_cqe_mpwrq                    7b4/0x820 [mlx5_core]
0xffffffffa0210263 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
0xffffffffa0210f83 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
0xffffffff8162c840 : net_rx_action                    260/0x3c0 [kernel]
0xffffffff81758779 : __do_softirq                    c9/0x28c [kernel]
0xffffffff810955e9 : irq_exit                    d9/0xf0 [kernel]
0xffffffff817578f1 : do_IRQ                    51/0xd0 [kernel]
0xffffffff81755753 : ret_from_intr                    0/0x1b [kernel]

crash> mlx5e_channel.rq ffff8808e9b3c000  | grep mpwqe_num_strides
mpwqe_num_strides = 4096,
crash> mlx5e_channel.rq ffff8808e9b3c000  | grep mpwqe_stride_sz
mpwqe_stride_sz = 64,

mlx5_wq_ll_create

mlx5e_napi_poll
    mlx5e_poll_rx_cq
            mlx5e_handle_rx_cqe_mpwrq	# handle_rx_cqe
                    wi->consumed_strides += cstrides;
                    mlx5e_mpwqe_fill_rx_skb
                            mlx5e_add_skb_frag_mpwqe
                                    dma_sync_single_for_cpu(DMA_FROM_DEVICE)
                                    skb_add_rx_frag
    mlx5e_post_rx_wqes
            mlx5e_alloc_rx_umr_mpwqe
                    mlx5e_page_alloc_mapped
                            dev_alloc_pages
                            dma_map_page

mlx5e_rx_cache_put
mlx5e_rx_cache_get

mlx5e_post_rx_wqes

0xffffffff811b3f20 : __alloc_pages_nodemask                    0/0x260 [kernel]
0xffffffff8123d867 : __alloc_pages_node                    33/0x35 [kernel]
0xffffffff811b4212 : page_frag_alloc                    92/0x130 [kernel]
0xffffffff8161bc2a : __napi_alloc_skb                    8a/0xd0 [kernel]
0xffffffffa020fa5b : mlx5e_handle_rx_cqe_mpwrq                    9b/0x820 [mlx5_core]
0xffffffffa0210263 : mlx5e_poll_rx_cq                    83/0x860 [mlx5_core]
0xffffffffa0210f83 : mlx5e_napi_poll                    93/0x480 [mlx5_core]
0xffffffff8162c840 : net_rx_action                    260/0x3c0 [kernel]
0xffffffff81758779 : __do_softirq                    c9/0x28c [kernel]
0xffffffff81095399 : run_ksoftirqd                    29/0x50 [kernel]
0xffffffff810b3af0 : smpboot_thread_fn                    110/0x160 [kernel]
0xffffffff810af6d1 : kthread                    101/0x140 [kernel]
0xffffffff8175501c : ret_from_fork                    2c/0x40 [kernel]

mlx5e_page_alloc_mapped
dev_alloc_pages
__alloc_pages_nodemask

===vlan===

ethtool -K p2p1  rx-vlan-filter off


[  929.667688] esw_vport_context_out: ffffc900211ef490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
[  929.667690] esw_vport_context_out: ffffc900211ef4a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
[  946.658671] query_esw_vport_context_cmd returns 0
[  946.658676] esw_vport_context_out: ffffc900212e7490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
[  946.658679] esw_vport_context_out: ffffc900212e74a0: 09 00 00 00 00 00 00 00 00 00 00 34 00 00 00 00  ...........4....

modify_esw_vport_context

mlx5_eswitch_add_offloaded_rule()
    /* per flow vlan pop/push is emulated, don't set that into the firmware */
    flow_act.action = attr->action & ~(MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH | MLX5_FLOW_CONTEXT_ACTION_VLAN_POP);

modify_esw_vport_cvlan


ip link set dev  p2p1 vf 0 vlan 52 qos 0

0xffffffffa00e02c0 : modify_esw_vport_cvlan                    0/0x230 [mlx5_core]
0xffffffffa00e4150 : __mlx5_eswitch_set_vport_vlan                    b0/0x150 [mlx5_core]
0xffffffffa00e420f : mlx5_eswitch_set_vport_vlan                    1f/0x40 [mlx5_core]
0xffffffffa00e7052 : mlx5e_set_vf_vlan                    32/0x40 [mlx5_core]
0xffffffff8163f09e : do_setlink                    22e/0xd00 [kernel]
0xffffffff81642feb : rtnl_newlink                    4cb/0x830 [kernel]
0xffffffff816433f4 : rtnetlink_rcv_msg                    a4/0x230 [kernel]
0xffffffff81665287 : netlink_rcv_skb                    a7/0xc0 [kernel]
0xffffffff8163d208 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81664c41 : netlink_unicast                    181/0x240 [kernel]
0xffffffff8166502e : netlink_sendmsg                    32e/0x3b0 [kernel]
0xffffffff8160cb68 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160d4b9 : ___sys_sendmsg                    279/0x290 [kernel]
0xffffffff8160dec4 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff8160df12 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff8175212b : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: dev=0xffff880659cc0060 vport=0x1 vlan=0x34 qos=0x0 set_flags=0x3
execname: ip
ts: 665
0x7ff302c277a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x4441b4 : __rtnl_talk                    c4/0x3f0 [/usr/sbin/ip]
0x41efc7 : iplink_modify                    267/0x4b0 [/usr/sbin/ip]
0x41f422 : do_iplink                    e2/0xf80 [/usr/sbin/ip]
0x408504 : do_cmd                    44/0x80 [/usr/sbin/ip]
0x40801f : main                    20f/0x577 [/usr/sbin/ip]
0x7ff302b50b35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4083b0 : _start                    29/0x39 [/usr/sbin/ip]


===cx4===

0xffffffffa0255400 : mlx5e_xmit                    0/0x9d0 [mlx5_core]
0xffffffff8160a1c1 : dev_hard_start_xmit                    a1/0x210 [kernel]
0xffffffff816362f2 : sch_direct_xmit                    f2/0x190 [kernel]
0xffffffff8160a85b : __dev_queue_xmit                    43b/0x630 [kernel]
0xffffffff8160aa60 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffffa09be7e2 : ovs_vport_send                    c2/0x150 [openvswitch]
0xffffffffa09b0103 : do_output                    53/0xf0 [openvswitch]
0xffffffffa09b15f0 : do_execute_actions                    9e0/0xa20 [openvswitch]
0xffffffffa09b1a10 : ovs_execute_actions                    40/0x120 [openvswitch]
0xffffffffa09b5384 : ovs_dp_process_packet                    84/0x120 [openvswitch]
0xffffffffa09be6c3 : ovs_vport_receive                    73/0xd0 [openvswitch]
0xffffffffa09bf0e3 : netdev_frame_hook                    d3/0x160 [openvswitch]
0xffffffff81608a16 : __netif_receive_skb_core                    1e6/0xa20 [kernel]
0xffffffff81609268 : __netif_receive_skb                    18/0x60 [kernel]
0xffffffff8160aacf : netif_receive_skb_internal                    4f/0x3e0 [kernel]
0xffffffff8160b98d : napi_gro_receive                    cd/0x140 [kernel]
0xffffffffa02585d9 : mlx5e_handle_rx_cqe_rep                    639/0x9a0 [mlx5_core]
0xffffffffa02591d8 : mlx5e_poll_rx_cq                    78/0x830 [mlx5_core]
0xffffffffa025a74a : mlx5e_napi_poll                    9a/0x360 [mlx5_core]
0xffffffff8160b32c : net_rx_action                    26c/0x3b0 [kernel]

===devlink===

address of mlx5_core_dev

list -H devlink_list -s devlink.priv

ffff88102f300000
  priv = 0xffff88102f3000a0 ""
ffff881029c40000
  priv = 0xffff881029c400a0 ""

devlink_register
devlink_ops

list -H devlink_list -l devlink.list -s devlink.ops

ffff8807d3640000
ops = 0xffffffffa01f7da0 <mlx5_devlink_ops>
ffff8807ce600000
ops = 0xffffffffa01f7da0 <mlx5_devlink_ops>
ffff88078af40000
ops = 0xffffffffa01f7da0 <mlx5_devlink_ops>
ffff8806a5fc0000
ops = 0xffffffffa01f7da0 <mlx5_devlink_ops>


list -H devlink_list -l devlink.list -s devlink.dev

ffff8807d3640000
dev = 0xffff8807db8750a0
ffff8807ce600000
dev = 0xffff8807db8760a0
ffff88078af40000
dev = 0xffff88068dc700a0
ffff8806a5fc0000
dev = 0xffff8806d41030a0

https://www.mail-archive.com/netdev@vger.kernel.org/msg139502.html

static const struct devlink_ops mlx5_devlink_ops = {
#ifdef CONFIG_MLX5_CORE_EN
    .eswitch_mode_set = mlx5_devlink_eswitch_mode_set,
    .eswitch_mode_get = mlx5_devlink_eswitch_mode_get,
    .eswitch_inline_mode_set = mlx5_devlink_eswitch_inline_mode_set,
    .eswitch_inline_mode_get = mlx5_devlink_eswitch_inline_mode_get,
#endif
};

===counter===

struct mlx5_fc {
    struct rb_node node;
    struct list_head list;

    /* last{packets,bytes} members are used when calculating the delta since
     * last reading
     */
    u64 lastpackets;
    u64 lastbytes;

    u16 id;
    bool deleted;
    bool aging;

    struct mlx5_fc_cache cache ____cacheline_aligned_in_smp;
}; 

mlx5_cmd_set_fte()

303                         MLX5_SET(flow_counter_list, in_dests, flow_counter_id,
304                                  dst->dest_attr.counter->id); 


mlx5_eswitch_add_offloaded_rule
    mlx5_fc_create

===stats===

dpif_netlink_class
LINUX_FLOW_OFFLOAD_API

revalidate
dump_thread = dpif_flow_dump_thread_create(udpif->dump);
        return dump->dpif->dpif_class->flow_dump_thread_create(dump);
            dpif_netlink_flow_dump_thread_create(struct dpif_flow_dump *dump_)

udpif_revalidator
    dpif_flow_dump_create
            dpif_netlink_flow_dump_create
    revalidate
            dpif_flow_dump_thread_create
                    dpif_netlink_flow_dump_thread_create
            dpif_flow_dump_next
                    dpif_netlink_flow_dump_next
                            netdev_flow_dump_next
                                    netdev_tc_flow_dump_next


0xffffffffa0b09080 : tcf_stats_update                 0/0x50 [act_mirred]
0xffffffffa02a6c9d : mlx5e_stats_flower                 1dd/0x260 [mlx5_core]
0xffffffffa02aa5c4 : mlx5e_rep_ndo_setup_tc                 54/0xe0 [mlx5_core]
0xffffffffa0afd169 : fl_dump                 7d9/0xc10 [cls_flower]
0xffffffff81654766 : tcf_fill_node                 146/0x1c0 [kernel]
0xffffffff81654bda : tcf_node_dump                 3a/0x40 [kernel]
0xffffffffa0afc278 : fl_walk                 48/0x90 [cls_flower]
0xffffffff81654a46 : tc_dump_tfilter                 266/0x3c0 [kernel]
0xffffffff8165a277 : netlink_dump                 107/0x290 [kernel]
0xffffffff8165b48e : __netlink_dump_start                 15e/0x190 [kernel]
0xffffffff81638c07 : rtnetlink_rcv_msg                 117/0x200 [kernel]
0xffffffff8165d121 : netlink_rcv_skb                 91/0x130 [kernel]
0xffffffff81633228 : rtnetlink_rcv                 28/0x30 [kernel]
0xffffffff8165c914 : netlink_unicast                 1a4/0x240 [kernel]
0xffffffff8165cc5d : netlink_sendmsg                 2ad/0x3a0 [kernel]
0xffffffff81602038 : sock_sendmsg                 38/0x50 [kernel]
0xffffffff8160259f : SYSC_sendto                 13f/0x180 [kernel]
0xffffffff8160307e : SyS_sendto                 e/0x10 [kernel]
0xffffffff81003ac7 : do_syscall_64                 67/0x140 [kernel]
0xffffffff8175b727 : return_from_SYSCALL_64                 0/0x6a [kernel]
parms: a=0xffff8807fef15d00 bytes=0x62 packets=0x1 lastuse=0x104f3c480
execname: revalidator15
ts: 22
0x7fbd2d2bfbfa : send                 6a/0xc0 [/usr/lib64/libpthread-2.26.so]
0x5256ef : nl_sock_send__                 5f/0xd0 [/usr/sbin/ovs-vswitchd]
0x5267a5 : nl_dump_start                 75/0xa0 [/usr/sbin/ovs-vswitchd]
0x52872c : tc_dump_flower_start                 3c/0x50 [/usr/sbin/ovs-vswitchd]
0x522866 : netdev_tc_flow_dump_create                 a6/0xc0 [/usr/sbin/ovs-vswitchd]
0x48f4ea : netdev_ports_flow_dump_create                 13a/0x1a0 [/usr/sbin/ovs-vswitchd]
0x517f5c : dpif_netlink_flow_dump_create                 10c/0x1f0 [/usr/sbin/ovs-vswitchd]
0x43c7de : udpif_revalidator                 2ce/0x3a0 [/usr/sbin/ovs-vswitchd]
0x4dc534 : ovsthread_wrapper                 64/0x70 [/usr/sbin/ovs-vswitchd]
0x7fbd2d2b5609 : start_thread                 d9/0x3b0 [/usr/lib64/libpthread-2.26.so]
0x7fbd2ca85e6f : clone                 3f/0x60 [/usr/lib64/libc-2.26.so]


mlx5_eswitch_add_offloaded_rule
    mlx5_fc_create

mlx5_eswitch_del_offloaded_rule
    mlx5_fc_destroy

tree -t rbtree -r mlx5_fc.node ffff8807d62f8d20 -o 0 -s mlx5_fc.lastpackets

void mlx5e_update_stats_work(struct work_struct *work)
{
    struct delayed_work *dwork = to_delayed_work(work);
    struct mlx5e_priv *priv = container_of(dwork, struct mlx5e_priv,
                                           update_stats_work);
    mutex_lock(&priv->state_lock);
    if (test_bit(MLX5E_STATE_OPENED, &priv->state)) {
            priv->profile->update_stats(priv);
            queue_delayed_work(priv->wq, dwork,
                               msecs_to_jiffies(MLX5E_UPDATE_STATS_INTERVAL));
    }
    mutex_unlock(&priv->state_lock);
}

0xffffffffa0b09670 : tcf_mirred_dump                0/0x150 [act_mirred]
0xffffffff81656d84 : tcf_action_dump_1                d4/0x130 [kernel]
0xffffffff816570dd : tcf_action_dump                4d/0x100 [kernel]
0xffffffff81654130 : tcf_exts_dump                80/0x120 [kernel]
0xffffffffa0afcdaf : fl_dump                41f/0xc10 [cls_flower]
0xffffffff81654766 : tcf_fill_node                146/0x1c0 [kernel]
0xffffffff81654bda : tcf_node_dump                3a/0x40 [kernel]
0xffffffffa0afc278 : fl_walk                48/0x90 [cls_flower]
0xffffffff81654a46 : tc_dump_tfilter                266/0x3c0 [kernel]
0xffffffff8165a277 : netlink_dump                107/0x290 [kernel]
0xffffffff8165b48e : __netlink_dump_start                15e/0x190 [kernel]
0xffffffff81638c07 : rtnetlink_rcv_msg                117/0x200 [kernel]
0xffffffff8165d121 : netlink_rcv_skb                91/0x130 [kernel]
0xffffffff81633228 : rtnetlink_rcv                28/0x30 [kernel]
0xffffffff8165c914 : netlink_unicast                1a4/0x240 [kernel]
0xffffffff8165cc5d : netlink_sendmsg                2ad/0x3a0 [kernel]
0xffffffff81602038 : sock_sendmsg                38/0x50 [kernel]
0xffffffff8160259f : SYSC_sendto                13f/0x180 [kernel]
0xffffffff8160307e : SyS_sendto                e/0x10 [kernel]
0xffffffff81003ac7 : do_syscall_64                67/0x140 [kernel]
parms: skb=0xffff8807355edb00 a=0xffff880793588a00 bind=0x0 ref=0x0
execname: revalidator15
ts: 14
0x7fbd2d2bfbfa : send                6a/0xc0 [/usr/lib64/libpthread-2.26.so]
0x5256ef : nl_sock_send__                5f/0xd0 [/usr/sbin/ovs-vswitchd]
0x5267a5 : nl_dump_start                75/0xa0 [/usr/sbin/ovs-vswitchd]
0x52872c : tc_dump_flower_start                3c/0x50 [/usr/sbin/ovs-vswitchd]
0x522866 : netdev_tc_flow_dump_create                a6/0xc0 [/usr/sbin/ovs-vswitchd]
0x48f4ea : netdev_ports_flow_dump_create                13a/0x1a0 [/usr/sbin/ovs-vswitchd]
0x517f5c : dpif_netlink_flow_dump_create                10c/0x1f0 [/usr/sbin/ovs-vswitchd]
0x43c7de : udpif_revalidator                2ce/0x3a0 [/usr/sbin/ovs-vswitchd]
0x4dc534 : ovsthread_wrapper                64/0x70 [/usr/sbin/ovs-vswitchd]
0x7fbd2d2b5609 : start_thread                d9/0x3b0 [/usr/lib64/libpthread-2.26.so]
0x7fbd2ca85e6f : clone                3f/0x60 [/usr/lib64/libc-2.26.so]

try_send_to_netdev
dpif_flow_del

LINUX_FLOW_OFFLOAD_API

NLM_F_DUMP

dpif_flow_dump_next
flow_dump_next
netdev_tc_flow_dump_next


0xffffffffa02a6ac0 : mlx5e_stats_flower                  0/0x260 [mlx5_core]
0xffffffffa02aa5c4 : mlx5e_rep_ndo_setup_tc                  54/0xe0 [mlx5_core]
0xffffffffa0afd169 : fl_dump                  7d9/0xc10 [cls_flower]
0xffffffff81654766 : tcf_fill_node                  146/0x1c0 [kernel]
0xffffffff81654bda : tcf_node_dump                  3a/0x40 [kernel]
0xffffffffa0afc278 : fl_walk                  48/0x90 [cls_flower]
0xffffffff81654a46 : tc_dump_tfilter                  266/0x3c0 [kernel]
0xffffffff8165a277 : netlink_dump                  107/0x290 [kernel]
0xffffffff8165b48e : __netlink_dump_start                  15e/0x190 [kernel]
0xffffffff81638c07 : rtnetlink_rcv_msg                  117/0x200 [kernel]
0xffffffff8165d121 : netlink_rcv_skb                  91/0x130 [kernel]
0xffffffff81633228 : rtnetlink_rcv                  28/0x30 [kernel]
0xffffffff8165c914 : netlink_unicast                  1a4/0x240 [kernel]
0xffffffff8165cc5d : netlink_sendmsg                  2ad/0x3a0 [kernel]
0xffffffff81602038 : sock_sendmsg                  38/0x50 [kernel]
0xffffffff8160259f : SYSC_sendto                  13f/0x180 [kernel]
0xffffffff8160307e : SyS_sendto                  e/0x10 [kernel]
0xffffffff81003ac7 : do_syscall_64                  67/0x140 [kernel]
0xffffffff8175b727 : return_from_SYSCALL_64                  0/0x6a [kernel]
0x0 (inexact)
parms: priv=0xffff88077cc808c0 f=0xffffc90006f3b9a8
execname: revalidator15
ts: 7
0x7fbd2d2bfbfa : send                  6a/0xc0 [/usr/lib64/libpthread-2.26.so]
0x5256ef : nl_sock_send__                  5f/0xd0 [/usr/sbin/ovs-vswitchd]
0x5267a5 : nl_dump_start                  75/0xa0 [/usr/sbin/ovs-vswitchd]
0x52872c : tc_dump_flower_start                  3c/0x50 [/usr/sbin/ovs-vswitchd]
0x522866 : netdev_tc_flow_dump_create                  a6/0xc0 [/usr/sbin/ovs-vswitchd]
0x48f4ea : netdev_ports_flow_dump_create                  13a/0x1a0 [/usr/sbin/ovs-vswitchd]
0x517f5c : dpif_netlink_flow_dump_create                  10c/0x1f0 [/usr/sbin/ovs-vswitchd]
0x43c7de : udpif_revalidator                  2ce/0x3a0 [/usr/sbin/ovs-vswitchd]
0x4dc534 : ovsthread_wrapper                  64/0x70 [/usr/sbin/ovs-vswitchd]
0x7fbd2d2b5609 : start_thread                  d9/0x3b0 [/usr/lib64/libpthread-2.26.so]
0x7fbd2ca85e6f : clone                  3f/0x60 [/usr/lib64/libc-2.26.so]



0xffffffffa0bbd0e0 : mlx5e_update_sw_counters                   0/0x580 [mlx5_core]
0xffffffffa0bc05b4 : mlx5e_update_stats                   94/0xb0 [mlx5_core]
0xffffffffa0bc05e0 : mlx5e_update_ndo_stats                   10/0x20 [mlx5_core]
0xffffffffa0bbd6ff : mlx5e_update_stats_work                   3f/0x70 [mlx5_core]


run every second
mlx5_fc_stats_work() delete aging fc counter and add new created ones

0xffffffffa0bb1838 : mlx5_fc_stats_work                   1a8/0x350 [mlx5_core]
0xffffffff810a17ef : process_one_work                   18f/0x3d0 [kernel]
0xffffffff810a1a7a : worker_thread                   4a/0x3a0 [kernel]
0xffffffff810a7315 : kthread                   125/0x140 [kernel]
0xffffffff8175b8c5 : ret_from_fork                   25/0x30 [kernel]

0xffffffffa0baca10 : mlx5_cmd_fc_bulk_query                   0/0x80 [mlx5_core]
0xffffffffa0bb189b : mlx5_fc_stats_work                   20b/0x350 [mlx5_core]
0xffffffff810a17ef : process_one_work                   18f/0x3d0 [kernel]
0xffffffff810a1a7a : worker_thread                   4a/0x3a0 [kernel]
0xffffffff810a7315 : kthread                   125/0x140 [kernel]
0xffffffff8175b8c5 : ret_from_fork                   25/0x30 [kernel]
0x0 (inexact)
parms: dev=0xffff88077c9c0060 b=0xffff8807797cbc60

===carrier===

enum {
        MLX5_VPORT_ADMIN_STATE_DOWN  = 0x0,
        MLX5_VPORT_ADMIN_STATE_UP    = 0x1,
        MLX5_VPORT_ADMIN_STATE_AUTO  = 0x2,
};

===pci===

 0xffffffffc083d5d0 : mlx5_satisfy_startup_pages                    +0x0/0x130 [mlx5_core]
 0xffffffffc08336c3 : mlx5_load_one.isra.20                    +0x263/0xed0 [mlx5_core]
 0xffffffffc0834791 : init_one                    +0x3d1/0x5f0 [mlx5_core]
 0xffffffff813717ba : local_pci_probe                    +0x4a/0xb0 [kernel]
 0xffffffff810a8bca : work_for_cpu_fn                    +0x1a/0x30 [kernel]
 0xffffffff810abebf : process_one_work                    +0x17f/0x440 [kernel]
 0xffffffff810ad0a8 : worker_thread                    +0x278/0x3c0 [kernel]
 0xffffffff810b40e1 : kthread                    +0xd1/0xe0 [kernel]
 0xffffffff810b4010 : kthread                    +0x0/0xe0 [kernel] (inexact)
 0xffffffff816c6537 : ret_from_fork                    +0x77/0xb0 [kernel] (inexact)
 0xffffffff810b4010 : kthread                    +0x0/0xe0 [kernel] (inexact)
parms: dev=0xffff880851fc0060 boot=0x1

12.17002 14636   14636   modprobe        pci_device_probe
        pci_device_probe+0x1 [kernel]
        driver_probe_device+0x11b [kernel]
        device_driver_attach+0x58 [kernel]
        __driver_attach+0xa5 [kernel]
        bus_for_each_dev+0x7b [kernel]
        driver_attach+0x1e [kernel]
        bus_add_driver+0x14d [kernel]
        driver_register+0x60 [kernel]
        __pci_register_driver+0x6b [kernel]
        init+0x82 [kernel]
        do_one_initcall+0x64 [kernel]
        do_init_module+0x5f [kernel]
        load_module+0x1977 [kernel]
        __do_sys_finit_module+0xfc [kernel]
        __x64_sys_finit_module+0x1a [kernel]
        do_syscall_64+0x5a [kernel]
        entry_SYSCALL_64_after_hwframe+0x44 [kernel]

[88] bus_type.p  pci_bus_type
[89] subsys_private.klist_devices 0xffff9bb11a545800
[90] subsys_private.klist_devices 0xffff9bb11a545800 -o
[91] klist ffff9bb11a5458a0
[92] klist ffff9bb11a5458a0 -o
[93] list -H ffff9bb11a5458a8
[94] list -H ffff9bb11a5458a8 --o 0x70 -s device_private.device
[95] list -H ffff9bb11a5458a8 -o 0x70 -s device_private.device
[96] device 0xffff9ba91ac420b0
[97] mlx5_core_dev 0xffff9ba7d91000c0
[98] pci_dev 0xffff9ba91ac42000

list -H blacklisted_initcalls

list module.list -H modules -s module

drivers/pci/pci-driver.c

 0xffffffffc051a000 : init_one        0/0x720 [mlx5_core]
 0xffffffffa942a1f7 : local_pci_probe        47/0xa0 [kernel]
 0xffffffffa908f01a : work_for_cpu_fn        1a/0x30 [kernel]
 0xffffffffa9091f22 : process_one_work        1a2/0x3a0 [kernel]
 0xffffffffa90922f2 : worker_thread        1d2/0x3b0 [kernel]
 0xffffffffa90982e1 : kthread        121/0x140 [kernel]
 0xffffffffa9a00215 : ret_from_fork        35/0x40 [kernel]
parms: pdev=0xffff9bb10cde3000 id=0xffffffffc0576bc0

pci_device_probe
pci_call_probe


13839   13839   modprobe        pci_device_probe
        pci_device_probe        1 [kernel]
        driver_probe_device        11a [kernel]
        __driver_attach        e3 [kernel]
        bus_for_each_dev        74 [kernel]
        driver_attach        1e [kernel]
        bus_add_driver        167 [kernel]
        driver_register        60 [kernel]

        __pci_register_driver        5a [kernel]

        init_module        6a [kernel]
        do_one_initcall        4a [kernel]
        do_init_module        5f [kernel]
        load_module        16d5 [kernel]
        __do_sys_finit_module        fc [kernel]
        __x64_sys_finit_module        1a [kernel]
        do_syscall_64        5a [kernel]
        entry_SYSCALL_64_after_hwframe        44 [kernel]

11745   11745   bash            pci_alloc_dev
        pci_alloc_dev       1 [kernel]
        sriov_enable       327 [kernel]
        pci_enable_sriov       2b [kernel]
        mlx5_core_sriov_configure       103 [kernel]
        sriov_numvfs_store       109 [kernel]
        dev_attr_store       1b [kernel]
        sysfs_kf_write       3c [kernel]
        kernfs_fop_write       125 [kernel]
        __vfs_write       3a [kernel]
        vfs_write       b1 [kernel]
        ksys_write       55 [kernel]
        __x64_sys_write       1a [kernel]
        do_syscall_64       5a [kernel]
        entry_SYSCALL_64_after_hwframe       44 [kernel]

===mlx===

add it to grub

 modprobe.blacklist=mlx5_core

[64108.243439]  tree_put_node               56/0x90 [mlx5_core]
[64108.244875]  tree_remove_node               12/0x30 [mlx5_core]
[64108.246313]  mlx5_del_flow_rules               39/0x50 [mlx5_core]
[64108.247762]  mlx5_eswitch_del_offloaded_rule               22/0x40 [mlx5_core]
[64108.249220]  mlx5e_tc_del_flow               130/0x140 [mlx5_core]
[64108.250683]  mlx5e_delete_flower               1ca/0x310 [mlx5_core]
[64108.252140]  tc_setup_cb_call               65/0x110
[64108.253597]  fl_hw_destroy_filter.isra.15               89/0xc0 [cls_flower]
[64108.255069]  __fl_delete               11a/0x150 [cls_flower]
[64108.256538]  fl_destroy               46/0xa0 [cls_flower]
[64108.257996]  tcf_proto_destroy               10/0x30
[64108.259440]  tcf_chain_flush               4e/0x70
[64108.260874]  tcf_block_put_ext.part.28               8f/0x1b0
[64108.262317]  ingress_destroy               1b/0x20 [sch_ingress]
[64108.263768]  qdisc_destroy               5f/0x130
[64108.265215]  qdisc_graft               154/0x460
[64108.266633]  tc_get_qdisc               2a6/0x2c0
[64108.268017]  rtnetlink_rcv_msg               133/0x330
[64108.269387]  ? _raw_spin_unlock_irqrestore               1c/0x30
[64108.270729]  ? rtnl_calcit.isra.27               120/0x120
[64108.272039]  netlink_rcv_skb               4a/0x120
[64108.273312]  netlink_unicast               190/0x230
[64108.274547]  netlink_sendmsg               2a5/0x3a0
[64108.275739]  sock_sendmsg               30/0x40
[64108.276895]  ___sys_sendmsg               269/0x2c0
[64108.278015]  ? filemap_map_pages               19b/0x350
[64108.279103]  ? _raw_spin_unlock               12/0x30
[64108.280154]  ? __handle_mm_fault               b08/0xe50
[64108.281173]  ? __sys_sendmsg               51/0x90
[64108.282152]  __sys_sendmsg               51/0x90
[64108.283095]  do_syscall_64               6e/0x190
[64108.283997]  entry_SYSCALL_64_after_hwframe               3d/0xa2

mlxlink  -m -d 04:00.0

mlx5e_get_max_num_channels

[root@dev-r630-04 ~]# ethtool  -c $link
Coalesce parameters for enp4s0f0:
Adaptive RX: on  TX: off
stats-block-usecs: 0
sample-interval: 0
pkt-rate-low: 0
pkt-rate-high: 0

rx-usecs: 8
rx-frames: 128
rx-usecs-irq: 0
rx-frames-irq: 0

tx-usecs: 16
tx-frames: 32
tx-usecs-irq: 0
tx-frames-irq: 0

rx-usecs-low: 0
rx-frame-low: 0
tx-usecs-low: 0
tx-frame-low: 0

rx-usecs-high: 0
rx-frame-high: 0
tx-usecs-high: 0
tx-frame-high: 0

[ 3071.765135] cap: 1
[ 3071.765575] cpus: 12
[ 3071.765965] nvec 1: 16
[ 3071.766356] nvec 2: 16
[ 3071.767598] nvec 3: 6

mlx5_enable_msix
mlx5_alloc_irq_vectors

alloc_comp_eqs
num_comp_vectors

commit 78249c4215840edb95447ec6867b69a7ac1d7a0d
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Thu Jul 13 11:09:38 2017 +0300

mlx5: convert to generic pci_alloc_irq_vectors

Now that we have a generic code to allocate an array
of irq vectors and even correctly spread their affinity,
correctly handle cpu hotplug events and more, were much
better off using it.

Reviewed-by: Christoph Hellwig <hch@lst.de>
Acked-by: Leon Romanovsky <leonro@mellanox.com>
Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
Signed-off-by: Doug Ledford <dledford@redhat.com>

sar -n DEV 1

mlx5e_build_channel_param
mlx5e_build_sq_param

mlx5_eq_int
    MLX5_EVENT_TYPE_NIC_VPORT_CHANGE
    mlx5_eswitch_vport_event
            esw_vport_change_handler
                    esw_vport_change_handle_locked

mlx5e_build_nic_netdev_priv
    INIT_WORK(&priv->update_carrier_work, mlx5e_update_carrier_work);
    INIT_WORK(&priv->set_rx_mode_work, mlx5e_set_rx_mode_work);
    INIT_WORK(&priv->tx_timeout_work, mlx5e_tx_timeout_work);
    INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);

msecs_to_jiffies(MLX5E_UPDATE_STATS_INTERVAL));

crash> mlx5e_l2_table  ffff8802146bb2d8
struct mlx5e_l2_table {
ft = {
num_groups = 3,
t = 0xffff880231578200,
g = 0xffff880236f86180
},
netdev_uc = {{
  first = 0xffff880232b4f440

mlx5e_l2_hash_node

KVM VF
crash> mlx5e_priv.params ffff8800358f08c0
params = {
log_sq_size = 10 '\n',
rq_wq_type = 2 '\002',
mpwqe_log_stride_sz = 6 '\006',
mpwqe_log_num_strides = 12 '\f',
log_rq_size = 3 '\003',
num_channels = 1,
num_tc = 1 '\001',
rx_cq_period_mode = 1 '\001',
rx_cqe_compress_def = false,
rx_cq_moderation = {
  usec = 3,
  pkts = 32
},
tx_cq_moderation = {
  usec = 16,
  pkts = 32
},
min_rx_wqes = 2,
lro_en = true,
lro_wqe_sz = 65536,
tx_max_inline = 226,
tx_min_inline_mode = 1 '\001',
rss_hfunc = 2 '\002',
toeplitz_hash_key = "\370\357\365[\301^o\230-\227\033\236k\224G\274#E\212\335\360\275\326NE\216\342\261\337\nrq\350=\357\355Wb\030~",
indirection_rqt = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
vlan_strip_disable = false,
rx_am_enabled = true,
lro_timeout = 32,
pflags = 1
}


REP
crash> mlx5e_priv.params ffff8805a4a908c0
params = {
log_sq_size = 6 '\006',
rq_wq_type = 0 '\000',
mpwqe_log_stride_sz = 0 '\000',
mpwqe_log_num_strides = 0 '\000',
log_rq_size = 1 '\001',
num_channels = 1,
num_tc = 1 '\001',
rx_cq_period_mode = 1 '\001',
rx_cqe_compress_def = false,
rx_cq_moderation = {
  usec = 3,
  pkts = 32
},
tx_cq_moderation = {
  usec = 0,
  pkts = 0
},
min_rx_wqes = 1,
lro_en = false,
lro_wqe_sz = 65536,
tx_max_inline = 226,
tx_min_inline_mode = 0 '\000',
rss_hfunc = 0 '\000',
toeplitz_hash_key = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
indirection_rqt = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
vlan_strip_disable = false,
rx_am_enabled = true,
lro_timeout = 0,
pflags = 0
}

HV VF
crash> mlx5e_priv.params ffff8806368a08c0
params = {
log_sq_size = 10 '\n',
rq_wq_type = 2 '\002',
mpwqe_log_stride_sz = 6 '\006',
mpwqe_log_num_strides = 12 '\f',
log_rq_size = 3 '\003',
num_channels = 8,
num_tc = 1 '\001',
rx_cq_period_mode = 1 '\001',
rx_cqe_compress_def = false,
rx_cq_moderation = {
  usec = 3,
  pkts = 32
},
tx_cq_moderation = {
  usec = 16,
  pkts = 32
},
min_rx_wqes = 2,
lro_en = false,
lro_wqe_sz = 65536,
tx_max_inline = 226,
tx_min_inline_mode = 1 '\001',
rss_hfunc = 2 '\002',
toeplitz_hash_key = "\f\337$J\250\275w\261m\251\263\177\206\f\252\254W~\367\060\244\nQ@\212$h\241`.4\025\316$\361g\t\a", <incomplete sequence \320>,
indirection_rqt = {0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7},
vlan_strip_disable = false,
rx_am_enabled = true,
lro_timeout = 32,
pflags = 1
}

move to channels
crash> mlx5e_channels  ffff8807d8703080

PF
crash> mlx5e_priv.params ffff880c595008c0
params = {
log_sq_size = 10 '\n',
rq_wq_type = 2 '\002',
mpwqe_log_stride_sz = 6 '\006',
mpwqe_log_num_strides = 12 '\f',
log_rq_size = 3 '\003',
num_channels = 16,
num_tc = 1 '\001',
rx_cq_period_mode = 1 '\001',
rx_cqe_compress_def = false,
rx_cq_moderation = {
  usec = 3,
  pkts = 32
},
tx_cq_moderation = {
  usec = 16,
  pkts = 32
},
min_rx_wqes = 2,
lro_en = false,
lro_wqe_sz = 65536,
tx_max_inline = 226,
tx_min_inline_mode = 1 '\001',
rss_hfunc = 2 '\002',
toeplitz_hash_key = "\f\337$J\250\275w\261m\251\263\177\206\f\252\254W~\367\060\244\nQ@\212$h\241`.4\025\316$\361g\t\a", <incomplete sequence \320>,
indirection_rqt = {0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7},
vlan_strip_disable = false,
rx_am_enabled = true,
lro_timeout = 32,
pflags = 1
}


MLX5_ACTION_IN_FIELD_OUT_IP_TTL

ICMP

match_criteria = {0x0, 0xffff0000, 0x0, 0x0, 0xff, 
val = {0x0, 0x80000, 0x0, 0x0, 0x1,

const struct ethtool_ops mlx5e_ethtool_ops = { 

enum {
        MLX5_FLOW_CONTEXT_ACTION_ALLOW     = 0x1,
        MLX5_FLOW_CONTEXT_ACTION_DROP      = 0x2,
        MLX5_FLOW_CONTEXT_ACTION_FWD_DEST  = 0x4,
        MLX5_FLOW_CONTEXT_ACTION_COUNT     = 0x8,
        MLX5_FLOW_CONTEXT_ACTION_PACKET_REFORMAT = 0x10,
        MLX5_FLOW_CONTEXT_ACTION_DECAP     = 0x20,
        MLX5_FLOW_CONTEXT_ACTION_MOD_HDR   = 0x40,
        MLX5_FLOW_CONTEXT_ACTION_VLAN_POP  = 0x80,
        MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH = 0x100,
        MLX5_FLOW_CONTEXT_ACTION_VLAN_POP_2  = 0x400,
        MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH_2 = 0x800,
        MLX5_FLOW_CONTEXT_ACTION_CT        = 0x1000,
};

0x90c for qinq push
0x48c for qinq pop

mlx5e_set_netdev_dev_addr
eth_hw_addr_random	# for rep

module_param_named(debug_mask, mlx5_core_debug_mask, uint, 0644);

mlx5_query_nic_vport_mac_address

include/linux/mlx5/mlx5_ifc.h
MLX5_CMD_OP_SET_L2_TABLE_ENTRY

mlx5_ifc_create_cq_in_bits

P1264

mlx5_ifc_fte_match_param_bits
mlx5_ifc_fte_match_set_lyr_2_4_bits

    u8         smac_47_16[0x20];

    u8         smac_15_0[0x10];
    u8         ethertype[0x10];

    u8         dmac_47_16[0x20];

    u8         dmac_15_0[0x10];
    u8         first_prio[0x3];
    u8         first_cfi[0x1];
    u8         first_vid[0xc];

    u8         ip_protocol[0x8];
    u8         ip_dscp[0x6];
    u8         ip_ecn[0x2];
    u8         cvlan_tag[0x1];
    u8         svlan_tag[0x1];
    u8         frag[0x1];
    u8         reserved_at_93[0x4];
    u8         tcp_flags[0x9];

    u8         tcp_sport[0x10];
    u8         tcp_dport[0x10];

    u8         reserved_at_c0[0x20];

    u8         udp_sport[0x10];
    u8         udp_dport[0x10];


vlan
mask = {
match_criteria_enable = 0x1,
match_criteria = {0x0, 0x0, 0x0, 0xff0f0000, 0x800000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
},
start_index = 0x0,
max_ftes = 0x1000,
num_ftes = 0x2,
id = 0xe
}

l2
match_criteria_enable = 0x0,
start_index = 0,
max_ftes = 1,
num_ftes = 0,
id = 11

mask = {
match_criteria_enable = 0x1,
match_criteria = {0x0, 0x0, 0xffffffff, 0xffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
},
start_index = 0x1,
max_ftes = 0x8000,
num_ftes = 0x7,
id = 0xc
}


4: p2p1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
link/ether 24:8a:07:88:27:ca brd ff:ff:ff:ff:ff:ff

mac address
crash> net_device.dev_addr ffff880c59b50000
dev_addr = 0xffff880c59b1acd0 "$\212\a\210", <incomplete sequence \312>
crash> rd -8  0xffff880c59b1acd0  6
ffff880c59b1acd0:  24 8a 07 88 27 ca                                 $...'.

struct mlx5e_flow_steering {
    struct mlx5_flow_namespace      *ns;
    struct mlx5e_ethtool_steering   ethtool;
    struct mlx5e_tc_table           tc;
    struct mlx5e_vlan_table         vlan;
    struct mlx5e_l2_table           l2;
    struct mlx5e_ttc_table          ttc;
    struct mlx5e_arfs_tables        arfs;
};

mlx5e_priv.fs
    mlx5e_flow_steering.l2
            mlx5e_tc_table
            mlx5e_l2_table.promisc
                    mlx5e_flow_table
                    mlx5e_l2_rule

    IFF_PROMISC                     = 1<<8,  /* sysfs */

crash> net_device.flags ffff880c59b50000 -x
flags = 0x1103
crash> net_device.flags ffff880c59b50000 -x
flags = 0x1003

crash> mlx5e_priv.fs ffff880c59b508c0 -x -o
struct mlx5e_priv {
[ffff880c59b52eb0] struct mlx5e_flow_steering fs;
}
crash> mlx5e_flow_steering ffff880c59b52eb0 -o
struct mlx5e_flow_steering {
[ffff880c59b52eb0] struct mlx5_flow_namespace *ns;
[ffff880c59b52eb8] struct mlx5e_ethtool_steering ethtool;
[ffff880c59b52f80] struct mlx5e_tc_table tc;
[ffff880c59b530a0] struct mlx5e_vlan_table vlan;
[ffff880c59b5b2d8] struct mlx5e_l2_table l2;
[ffff880c59b5c328] struct mlx5e_ttc_table ttc;
[ffff880c59b5c398] struct mlx5e_arfs_tables arfs;
}
SIZE: 46480
crash> mlx5e_l2_table.promisc_enabled ffff880c59b5b2d8 -x
promisc_enabled = 0x0


mlx5e_set_rx_mode_work

# flow

mlx5_ifc_fte_match_param_bits

mlx5e_open_channel
    netif_napi_add(netdev, &c->napi, mlx5e_napi_poll, 64);
mlx5e_napi_poll
    mlx5e_poll_rx_cq
            mlx5e_handle_rx_cqe_mpwrq
                    mlx5e_complete_rx_cqe
                            mlx5e_build_rx_skb
                                    mlx5e_skb_set_hash
                                            skb_set_hash
                                                    __skb_set_hash
                                                            skb->hash = hash;

mlx5e_handle_rx_cqe_mpwrq
    napi_gro_receive

mlx5e_skb_set_hash

sk_buff->queue_mapping

0xffffffffa00d3330 : mlx5e_xmit                    0/0x30 [mlx5_core]
0xffffffff8162ee91 : dev_hard_start_xmit                    a1/0x210 [kernel]
0xffffffff816592f5 : sch_direct_xmit                    105/0x1b0 [kernel]
0xffffffff8162f51f : __dev_queue_xmit                    42f/0x630 [kernel]
0xffffffff8162f730 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffff81676def : ip_finish_output2                    28f/0x390 [kernel]
0xffffffff816783e6 : ip_finish_output                    136/0x1e0 [kernel]
0xffffffff81678e96 : ip_output                    76/0xe0 [kernel]
0xffffffff816785e5 : ip_local_out                    35/0x40 [kernel]
0xffffffff81679919 : ip_send_skb                    19/0x40 [kernel]
0xffffffff81679973 : ip_push_pending_frames                    33/0x40 [kernel]
0xffffffff816a1983 : raw_sendmsg                    7d3/0xb50 [kernel]
0xffffffff816b0f71 : inet_sendmsg                    31/0xb0 [kernel]
0xffffffff8160db78 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160e032 : SYSC_sendto                    102/0x190 [kernel]
0xffffffff8160ebde : SyS_sendto                    e/0x10 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff81752d6b : return_from_SYSCALL_64                    0/0x6a [kernel]

0xffffffffa00d32d0 : mlx5e_select_queue                    0/0x60 [mlx5_core]
0xffffffff8162f064 : netdev_pick_tx                    64/0xf0 [kernel]
0xffffffff8162f218 : __dev_queue_xmit                    128/0x630 [kernel]
0xffffffff8162f730 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffff81676def : ip_finish_output2                    28f/0x390 [kernel]
0xffffffff816783e6 : ip_finish_output                    136/0x1e0 [kernel]
0xffffffff81678e96 : ip_output                    76/0xe0 [kernel]
0xffffffff816785e5 : ip_local_out                    35/0x40 [kernel]
0xffffffff81679919 : ip_send_skb                    19/0x40 [kernel]
0xffffffff81679973 : ip_push_pending_frames                    33/0x40 [kernel]
0xffffffff816a1983 : raw_sendmsg                    7d3/0xb50 [kernel]
0xffffffff816b0f71 : inet_sendmsg                    31/0xb0 [kernel]
0xffffffff8160db78 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff8160e032 : SYSC_sendto                    102/0x190 [kernel]
0xffffffff8160ebde : SyS_sendto                    e/0x10 [kernel]
0xffffffff81003a47 : do_syscall_64                    67/0x180 [kernel]
0xffffffff81752d6b : return_from_SYSCALL_64                    0/0x6a [kernel]

__dev_queue_xmit
    netdev_pick_tx
            skb_set_queue_mapping(skb, queue_index);
                    skb->queue_mapping = queue_mapping;	

mlx5e_create_rq
    mlx5e_handle_rx_cqe_mpwrq	# this function is actually called instead of mlx5e_handle_rx_cqe

            if (mlx5e_is_vf_vport_rep(priv))
                    rq->handle_rx_cqe = mlx5e_handle_rx_cqe_rep;
            else
                    rq->handle_rx_cqe = mlx5e_handle_rx_cqe;

mlx5e_napi_poll
    mlx5e_poll_tx_cq
    mlx5e_poll_rx_cq
            mlx5e_handle_rx_cqe_mpwrq
    mlx5e_post_rx_wqes

mlx5e_alloc_rx_mpwqe
mlx5e_alloc_rx_wqe	# for ConnectX-4
    mlx5e_handle_rx_cqe
            skb_from_cqe 
                    build_skb

mlxconfig -d 0a:00.0 q

mount -o loop,rw ofed.iso /mnt/mlx

mlx5e_priv

mlx5e_xmit

mlx5e_nic_profile
    mlx5e_nic_enable
            mlx5_lag_add
                    register_netdevice_notifier

static struct pci_driver mlx5_core_driver = {
    .name           = DRIVER_NAME,
    .id_table       = mlx5_core_pci_table,
    .probe          = init_one,
    .remove         = remove_one,
    .shutdown       = shutdown,
    .err_handler    = &mlx5_err_handler,
    .sriov_configure   = mlx5_core_sriov_configure,
};

static struct mlx5e_profile mlx5e_rep_profile = {
    .init                   = mlx5e_init_rep,
    .init_rx                = mlx5e_init_rep_rx,
    .cleanup_rx             = mlx5e_cleanup_rep_rx,
    .init_tx                = mlx5e_init_rep_tx,
    .cleanup_tx             = mlx5e_cleanup_nic_tx,
    .update_stats           = mlx5e_rep_update_stats,
    .max_nch                = mlx5e_get_rep_max_num_channels,
    .max_tc                 = 1,
};

static const struct mlx5e_profile mlx5e_nic_profile = {
    .init              = mlx5e_nic_init,
    .cleanup           = mlx5e_nic_cleanup,
    .init_rx           = mlx5e_init_nic_rx,
    .cleanup_rx        = mlx5e_cleanup_nic_rx,
    .init_tx           = mlx5e_init_nic_tx,
    .cleanup_tx        = mlx5e_cleanup_nic_tx,
    .enable            = mlx5e_nic_enable,
    .disable           = mlx5e_nic_disable,
    .update_stats      = mlx5e_update_stats,
    .max_nch           = mlx5e_get_max_num_channels,
    .max_tc            = MLX5E_MAX_NUM_TC,
};

https://community.mellanox.com/docs/DOC-2294
mlxconfig -d /dev/mst/mt4115_pciconf0 set LINK_TYPE_P1=2 LINK_TYPE_P2=2

static struct mlx5_interface mlx5e_interface = {
    .add       = mlx5e_add,
    .remove    = mlx5e_remove,
    .attach    = mlx5e_attach,
    .detach    = mlx5e_detach,
    .event     = mlx5e_async_event,
    .protocol  = MLX5_INTERFACE_PROTOCOL_ETH,
    .get_dev   = mlx5e_get_netdev,
};

static const struct net_device_ops mlx5e_netdev_ops_basic = {
    .ndo_open                = mlx5e_open,
    .ndo_stop                = mlx5e_close,
    .ndo_start_xmit          = mlx5e_xmit,
    .ndo_setup_tc            = mlx5e_ndo_setup_tc,
    .ndo_select_queue        = mlx5e_select_queue,
    .ndo_get_stats64         = mlx5e_get_stats,
    .ndo_set_rx_mode         = mlx5e_set_rx_mode,
    .ndo_set_mac_address     = mlx5e_set_mac,
    .ndo_vlan_rx_add_vid     = mlx5e_vlan_rx_add_vid,
    .ndo_vlan_rx_kill_vid    = mlx5e_vlan_rx_kill_vid,
    .ndo_set_features        = mlx5e_set_features,
    .ndo_change_mtu          = mlx5e_change_mtu,
    .ndo_do_ioctl            = mlx5e_ioctl,
    .ndo_set_tx_maxrate      = mlx5e_set_tx_maxrate,
#ifdef CONFIG_RFS_ACCEL
    .ndo_rx_flow_steer       = mlx5e_rx_flow_steer,
#endif
    .ndo_tx_timeout          = mlx5e_tx_timeout,
    .ndo_xdp                 = mlx5e_xdp,
#ifdef CONFIG_NET_POLL_CONTROLLER
    .ndo_poll_controller     = mlx5e_netpoll,
#endif
};

mlx5e_add
    mlx5e_create_netdev
            alloc_etherdev_mqs
    mlx5e_attach
            netif_device_present
                    return test_bit(__LINK_STATE_PRESENT, &dev->state); 
            mlx5e_open
                    mlx5e_open_locked
                            netif_set_real_num_tx_queues/netif_set_real_num_rx_queues
    register_netdev

===driver===

netdev_priv

register_netdev

===ofed===

  532  cp -rf /usr/src/ofa_kernel-4.6/ .
  533  cd ofa_kernel-4.6/
  534  /etc/infiniband/info
  535  ./configure  --with-core-mod --with-user_mad-mod --with-user_access-mod --with-addr_trans-mod --with-mlxfw-mod --with-mlx4-mod --with-mlx4_en-mod --with-mlx5-mod --with-ipoib-mod --with-innova-flex --with-mdev-mod --with-e_ipoib-mod -j
  536  vim drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
  537  make -j $(nproc) > /dev/null
  538  history

 yes | /tmp/OFED-internal-4.6-3.1.9.0.7/install.pl --post-install-mlnx-ofa_kernel-devel /auto/net_linux_verification/tools/fix_ofa_kernel_src.sh --with-memtrack --prefix /usr/ --force --all --without-srp --without-isert --without-iser --without-isert-dkms --without-knem --without-knem-mlnx --without-srptools --without-librxe --without-librxe-1 --without-knem-dkms --without-fca --without-openmpi --without-sharp --without-libdapl2 --without-dapl2-utils --without-libdapl-dev --without-dapl --without-dapl-devel --without-dapl-devel-static --without-dapl-utils --without-dapl-debuginfo --without-mxm --without-hcoll --without-mpi-selector --without-bupc --without-ucx --without-mvapich2 --without-libibprof --without-mpitests --without-mpitests_mvapich2__2_0 --without-mpitests_openmpi__1_8_4 --without-libdisni --without-iser-dkms --without-mlnx-nvme --without-mlnx-nvme-dkms --without-srp-dkms --without-libdisni1 --without-openvswitch --with-perftest

./mlnxofedinstall  --add-kernel-support --skip-distro-check

http://www.mellanox.com/related-docs/prod_software/Mellanox_OFED_Linux_User_Manual_v4_5.pdf

https://wikinox.mellanox.com/display/SW/How+to+add+Backport+Patches
https://wikinox.mellanox.com/display/SW/OFED+Kernel+commits+Metadata

/sys/class/net/$link/compat/devlink 

CONFIG_COMPAT_RHEL_7_2

LINUX_BACKPORT

include/net/tc_act/tc_vlan.h
net/sched/act_vlan.c

ofed_scripts/gen-compat-config.sh

KERNEL4_9=$(echo ${KVERSION} | grep ^4\.9)
if [[ ! -z ${KERNEL4_9} ]]; then
	set_config CONFIG_COMPAT_KERNEL_4_9 y
fi

if [[ ! -z ${KERNEL4_9} ]]; then
        set_config CONFIG_COMPAT_FLOW_DISSECTOR y
        set_config CONFIG_COMPAT_CLS_FLOWER_MOD m
        set_config CONFIG_COMPAT_TCF_TUNNEL_KEY_MOD m
fi

2190d1d09 (Jiri Pirko             2017-05-17 11:07:59 +0200 274) struct tcf_block {
2190d1d09 (Jiri Pirko             2017-05-17 11:07:59 +0200 265) struct tcf_chain {
5bc170188 (Jiri Pirko             2017-05-17 11:08:01 +0200 253)        struct tcf_chain        *chain;


tc_cls_flower_offload

CONFIG_COMPAT_KERNEL_4_9
CONFIG_COMPAT_RHEL_7_4
include/linux/compat_autoconf.h
include/linux/compat_fix.h

compat.config
compat/config/rdma.m4

ofed_info -s
ibv_devinfo  to show PSID board_id

[root@bjglab-18 mlx5_0]# cat /sys/class/infiniband/mlx5_0/board_id
MT_0000000009

ibv_devinfo
flint -d mlx4_0 v
flint -d mlx4_0 q	# get the PSID
flint -d mlx4_0 -i fw.bin burn

firmware version

[root@bjglab-18 net-next]# ethtool -i p2p1
driver: mlx5_core
version: 3.0-1 (January 2015)
firmware-version: 16.19.2134
expansion-rom-version:
bus-info: 0000:03:00.0
supports-statistics: yes
supports-test: yes
supports-eeprom-access: no
supports-register-dump: no
supports-priv-flags: yes

flint -d 03:00.0 q
flint -d 04:00.0 dc | grep -i name

[root@dev-r630-04 ~]# mlxuptime -d mlx5_1
Measured core frequency        : 400.392871 MHz
Device up time                 : 76:27:14.271228 [h:m:s.usec]

[root@bjglab-18 ~]# mlxfwmanager -d 03:00.0 --query
Querying Mellanox devices firmware ...

Device #1:
----------

Device Type:      ConnectX5
Part Number:      MCX556A-EDA_Ax
Description:      ConnectX-5 VPI adapter card; EDR IB (100Gb/s) and 100GbE; dual-port QSFP28; PCIe4.0 x16; tall bracket; ROHS R6
PSID:             MT_0000000009
PCI Device Name:  03:00.0
Base MAC:         0000248a078827ca
Versions:         Current        Available
 FW             16.19.2134     N/A

Status:           No matching image found


http://www.mellanox.com/supportdownloader/

perfquery

ibportstate <lid> <port>
smpquery -a <lid>
smpquery portinfo -a <lid>

sminfo to get SM lid
smpquery nd <lid> to get the switch series

ibroute

mkdir diagnet-files
ibdiagnet -pc -o diagnet-files
ibdiagnet -P all=1 -o diagnet-files

ibdiagpath -l 9.1 <lid>,<lid>
ibtracert <lid> <lid>

ibv_rc_pingpong/ibv_srq_pingpong/ibv_ud_pingpong

ib_send_lat/ib_read_lat/ib_write_lat

ib_write_bw -a # to start server
ib_write_bw -a <hostname> # to start client

===qemu===

fc28 start vm

[root@dev-r630-03 ~]# start1

error: Failed to start domain vm1
error: unsupported configuration: CPU mode 'custom' for x86_64 kvm domain on x86_64 host is not supported by hypervisor

vi /etc/libvirt/qemu.conf
# Add the following two lines
user = "root"
group = "root"

https://bbs.archlinuxcn.org/viewtopic.php?id=4998

===lnst===

# how to install pip on centos
curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
python get-pip.py

function install-lnst
{
    yum -y install python-devel
    yum -y install python-ethtool
    yum -y install python-pip
    pip install pyroute2
    pip install rpyc
    pip install netifaces
    pip install lxml
    pip install iperf3
}

cp -r /auto/mtbcswgwork/chrism/lnst /root
/root/lnst/setup.py install

lnst-ctl -d --pools=dev13_14 run recipes/ovs_offload/03-vlan_in_host.xml

===debug===

echo "file drivers/net/ethernet/mellanox/mlx5/core/cmd.c +p" > /sys/kernel/debug/dynamic_debug/control
echo "file drivers/net/ethernet/mellanox/mlx5/core/cmd.c -p" > /sys/kernel/debug/dynamic_debug/control

printk(KERN_WARNING "DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);

echo 7 > /proc/sys/kernel/printk

to debug crash enabled kernel
CONFIG_STRICT_DEVMEM=n

Find all symbols containing the string "pipe":

crash> sym -q pipe

Dump the symbols of the mlx5_core module
crash> sym -m mlx5_core
crash> sym -s mlx5_core

crash> dis  tcp_transmit_skb
0xffffffff8a770410 <tcp_transmit_skb>:  nopl   0x0(%rax,%rax,1) [FTRACE NOP]
crash> sym 0xffffffff8a770410
ffffffff8a770410 (t) tcp_transmit_skb /root/chris/linux/net/ipv4/tcp_output.c: 922

Display the source code listing of the mmput() function:
crash> dis -s mmput

display line number
crash> dis -l sys_signal

struct inet_hashinfo tcp_hashinfo


struct file_system_type {
    ...
    struct file_system_type * next;
    ...
};
static struct file_system_type *file_systems;
crash> p file_systems
file_systems = $4 = (struct file_system_type *) 0xffffffff8ae96800
crash> list file_system_type.next -s file_system_type.name,fs_flags 0xffffffff8ae96800
ffffffff8ae96800
name = 0xffffffff8ac8ab04 "sysfs"
fs_flags = 8
ffffffff8ae10460
name = 0xffffffff8ac6ad71 "rootfs"
fs_flags = 0

===routing===


Returning from:  0xffffffff81668b50 : ip_route_output_flow               0/0x50 [kernel]
Returning to  :  0xffffffff816a3e8b : icmp_reply.constprop.31               21b/0x290 [kernel]
0xffffffff816a3f5d : icmp_echo.part.23               5d/0x80 [kernel]
0xffffffff816a3fb0 : icmp_echo               30/0x40 [kernel]
0xffffffff816a45b4 : icmp_rcv               154/0x3c0 [kernel]
0xffffffff8166a908 : ip_local_deliver_finish               68/0x240 [kernel]
0xffffffff8166ad38 : ip_local_deliver               f8/0x110 [kernel]
0xffffffff8166a561 : ip_rcv_finish               e1/0x420 [kernel]
0xffffffff8166aff3 : ip_rcv               2a3/0x430 [kernel]
0xffffffff81620f57 : __netif_receive_skb_core               3a7/0xaf0 [kernel]
0x0 (inexact)

ping www.baidu.com, ip_route_output_flow returns ffff880c834f6900

Returning from:  0xffffffff81668b50 : ip_route_output_flow               0/0x50 [kernel]
Returning to  :  0xffffffff8169cc46 : udp_sendmsg               786/0xa60 [kernel]
0xffffffff816a9f5e : inet_sendmsg               2e/0xf0 [kernel]
0xffffffff81602038 : sock_sendmsg               38/0x50 [kernel]
0xffffffff8160259f : SYSC_sendto               13f/0x180 [kernel]
0xffffffff8160307e : SyS_sendto               e/0x10 [kernel]
0xffffffff8175b677 : entry_SYSCALL_64_fastpath               1a/0xa5 [kernel]
0x0 (inexact)

Returning from:  0xffffffff81668b50 : ip_route_output_flow               0/0x50 [kernel]
Returning to  :  0xffffffff816986d9 : __ip4_datagram_connect               159/0x2c0 [kernel]
0xffffffff8169886c : ip4_datagram_connect               2c/0x50 [kernel]
0xffffffff816a882f : inet_dgram_connect               4f/0x80 [kernel]
0xffffffff816023e8 : SYSC_connect               98/0x110 [kernel]
0xffffffff8160304e : SyS_connect               e/0x10 [kernel]
0xffffffff8175b677 : entry_SYSCALL_64_fastpath               1a/0xa5 [kernel]
0x0 (inexact)

crash> rtable ffff880c834f6900
struct rtable {
dst = {
callback_head = {
  next = 0xffff880c834f7b00,
  func = 0x0
},
child = 0x0,
dev = 0xffff880c7ec18000,
ops = 0xffffffff81cd8640 <ipv4_dst_ops>,
_metrics = 0xffffffff818c2301,
expires = 0x0,
path = 0xffff880c834f6900,
from = 0x0,
xfrm = 0x0,
input = 0xffffffff816117b0 <dst_discard>,
output = 0xffffffff81655330 <ip_output>,
flags = 0x0,
error = 0x0,
obsolete = 0xffff,
header_len = 0x0,
trailer_len = 0x0,
__pad3 = 0x0,
tclassid = 0x0,
__pad_to_align_refcnt = {0x0, 0x0},
__refcnt = {
  counter = 0x0
},
__use = 0x0,
lastuse = 0x103203a31,
lwtstate = 0x0,
{
  next = 0x0,
  rt_next = 0x0,
  rt6_next = 0x0,
  dn_next = 0x0
}
},
rt_genid = 0x57,
rt_flags = 0x0,
rt_type = 0x1,
rt_is_input = 0x0,
rt_uses_gateway = 0x1,
rt_iif = 0x0,
rt_gateway = 0xa00c80a,	# 10.200.0.10
rt_pmtu = 0x0,
rt_table_id = 0xfe,
rt_uncached = {
next = 0xffff880c834f69c0,
prev = 0xffff880c834f69c0
},
rt_uncached_list = 0x0
}

$ ip route
default via 10.200.0.10 dev em1
crash> net | grep ffff880c7ec18000
ffff880c7ec18000  em1    10.200.0.168

ping 192.168.1.19, ip_route_output_flow returns ffff880c58ed7300

crash> rtable ffff880c58ed7300
struct rtable {
dst = {
callback_head = {
  next = 0xffff880c58ed6500,
  func = 0xffffffff81219f40 <file_free_rcu>
},
child = 0x0,
dev = 0xffff880c693a0000,
ops = 0xffffffff81cd8640 <ipv4_dst_ops>,
_metrics = 0xffffffff818c2301,
expires = 0x0,
path = 0xffff880c58ed7300,
from = 0x0,
xfrm = 0x0,
input = 0xffffffff816117b0 <dst_discard>,
output = 0xffffffff81655330 <ip_output>,
flags = 0x0,
error = 0x0,
obsolete = 0xffff,
header_len = 0x0,
trailer_len = 0x0,
__pad3 = 0x0,
tclassid = 0x0,
__pad_to_align_refcnt = {0x0, 0x0},
__refcnt = {
  counter = 0x0
},
__use = 0x0,
lastuse = 0x1030a4b07,
lwtstate = 0x0,
{
  next = 0x0,
  rt_next = 0x0,
  rt6_next = 0x0,
  dn_next = 0x0
}
},
rt_genid = 0x57,
rt_flags = 0x0,
rt_type = 0x1,
rt_is_input = 0x0,
rt_uses_gateway = 0x0,
rt_iif = 0x0,
rt_gateway = 0x0,	# directly connected
rt_pmtu = 0x0,
rt_table_id = 0xfe,
rt_uncached = {
next = 0xffff880c58ed73c0,
prev = 0xffff880c58ed73c0
},
rt_uncached_list = 0xffff880c58ed73d0
}

$ ip route
192.168.1.0/24 dev p4p1 proto kernel scope link src 192.168.1.18
crash> net | grep ffff880c693a0000
ffff880c693a0000  p4p1   192.168.1.18

===arp===


commit 2a4501ae18b52fcdf553404286e6cefabd1d17ec
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Tue Jul 5 11:27:42 2016 +0200

    neigh: Send a notification when DELAY_PROBE_TIME changes

    When the data plane is offloaded the traffic doesn't go through the
    networking stack. Therefore, after first resolving a neighbour the NUD
    state machine will transition it from REACHABLE to STALE until it's
    finally deleted by the garbage collector.

    To prevent such situations the offloading driver should notify the NUD
    state machine on any neighbours that were recently used. The driver's
    polling interval should be set so that the NUD state machine can
    function as if the traffic wasn't offloaded.

    Currently, there are no in-tree drivers that can report confirmation for
    a neighbour, but only 'used' indication. Therefore, the polling interval
    should be set according to DELAY_FIRST_PROBE_TIME, as a neighbour will
    transition from REACHABLE state to DELAY (instead of STALE) if "a packet
    was sent within the last DELAY_FIRST_PROBE_TIME seconds" (RFC 4861).

    Send a netevent whenever the DELAY_FIRST_PROBE_TIME changes - either via
    netlink or sysctl - so that offloading drivers can correctly set their
    polling interval.

    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

0       0       swapper/13      mlx5e_rep_netevent_event
        mlx5e_rep_netevent_event      1 [kernel]
        atomic_notifier_call_chain      1a [kernel]
        call_netevent_notifiers      1b [kernel]
        neigh_update      466 [kernel]
        arp_process      38b [kernel]
        arp_rcv      12b [kernel]
        __netif_receive_skb_one_core      57 [kernel]
        __netif_receive_skb      18 [kernel]
        netif_receive_skb_internal      45 [kernel]
        napi_gro_receive      c5 [kernel]
        mlx5e_handle_rx_cqe_mpwrq      f9 [kernel]
        mlx5e_poll_rx_cq      d5 [kernel]
        mlx5e_napi_poll      b9 [kernel]
        net_rx_action      14d [kernel]
        __softirqentry_text_start      de [kernel]
        irq_exit      f2 [kernel]
        do_IRQ      8a [kernel]
        ret_from_intr      0 [kernel]
        cpuidle_enter_state      a3 [kernel]
        cpuidle_enter      17 [kernel]
        call_cpuidle      23 [kernel]
        do_idle      1e1 [kernel]
        cpu_startup_entry      1d [kernel]
        start_secondary      199 [kernel]
        secondary_startup_64      a4 [kernel]


0       0       swapper/13      mlx5e_rep_netevent_event
        mlx5e_rep_netevent_event      1 [kernel]
        atomic_notifier_call_chain      1a [kernel]
        call_netevent_notifiers      1b [kernel]
        neigh_timer_handler      d4 [kernel]
        call_timer_fn      30 [kernel]
        run_timer_softirq      3ed [kernel]
        __softirqentry_text_start      de [kernel]
        irq_exit      f2 [kernel]
        smp_apic_timer_interrupt      79 [kernel]
        apic_timer_interrupt      f [kernel]
        cpuidle_enter_state      a3 [kernel]
        cpuidle_enter      17 [kernel]
        call_cpuidle      23 [kernel]
        do_idle      1e1 [kernel]
        cpu_startup_entry      1d [kernel]
        start_secondary      199 [kernel]
        secondary_startup_64      a4 [kernel]



8
0xffffffffa02917d0 : mlx5e_xmit                    0/0xa10 [mlx5_core]
0xffffffff81623db0 : dev_hard_start_xmit                    a0/0x230 [kernel]
0xffffffff8165030b : sch_direct_xmit                    fb/0x1b0 [kernel]

0xffffffff81624425 : __dev_queue_xmit                    405/0x680 [kernel]
0xffffffff816246b0 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffff816a14d4 : arp_xmit                    b4/0xc0 [kernel]
0xffffffff816a1518 : arp_send_dst.part.17                    38/0x40 [kernel]
0xffffffff816a1616 : arp_solicit                    f6/0x2f0 [kernel]
0xffffffff8162e06f : neigh_probe                    4f/0x70 [kernel]
0xffffffff8162f638 : __neigh_event_send                    1f8/0x240 [kernel]
0xffffffff8162f96e : neigh_resolve_output                    12e/0x1c0 [kernel]
0xffffffff8166f95b : ip_finish_output2                    17b/0x380 [kernel]
0xffffffff8166fd26 : ip_finish_output                    136/0x1d0 [kernel]
0xffffffff816713e8 : ip_output                    78/0x100 [kernel]
0xffffffff81670ad5 : ip_local_out                    35/0x40 [kernel]
0xffffffff81671d99 : ip_send_skb                    19/0x40 [kernel]
0xffffffff81671df3 : ip_push_pending_frames                    33/0x40 [kernel]
0xffffffff8169a781 : raw_sendmsg                    8e1/0xb10 [kernel]
0xffffffff816aa697 : inet_sendmsg                    37/0xf0 [kernel]
0xffffffff81603de8 : sock_sendmsg                    38/0x50 [kernel]
parms: skb=0xffff880222ff5b00 dev=0xffff88022fca0000
execname: ping
ts: 13
0x7f8f80780803 : __sendto_nocancel                    a/0x57 [/usr/lib64/libc-2.17.so]
0x55b6ef3808ad [/usr/bin/ping                    38ad/0xe000]
9
^C 0xffffffffa02917d0 : mlx5e_xmit                    0/0xa10 [mlx5_core]
0xffffffff81623db0 : dev_hard_start_xmit                    a0/0x230 [kernel]
0xffffffff8165030b : sch_direct_xmit                    fb/0x1b0 [kernel]
0xffffffff81624425 : __dev_queue_xmit                    405/0x680 [kernel]
0xffffffff816246b0 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffff816a14d4 : arp_xmit                    b4/0xc0 [kernel]
0xffffffff816a1518 : arp_send_dst.part.17                    38/0x40 [kernel]
0xffffffff816a1616 : arp_solicit                    f6/0x2f0 [kernel]
0xffffffff8162e06f : neigh_probe                    4f/0x70 [kernel]
0xffffffff8163165f : neigh_timer_handler                    cf/0x290 [kernel]
0xffffffff810fcf25 : call_timer_fn                    35/0x170 [kernel]
0xffffffff810fd56b : run_timer_softirq                    20b/0x490 [kernel]
0xffffffff8174c875 : __do_softirq                    d5/0x2ad [kernel]
0xffffffff8108e68b : irq_exit                    ab/0xb0 [kernel]
0xffffffff8174c2ad : smp_apic_timer_interrupt                    3d/0x50 [kernel]
0xffffffff8174aa53 : apic_timer_interrupt                    93/0xa0 [kernel]



RTM_NEWNEIGH
RTNLGRP_NEIGH
NETEVENT_NEIGH_UPDATE

P725
0xffffffff81688250 : inet_select_addr                    0/0xd0 [kernel]
0xffffffff81685244 : arp_solicit                    94/0x2b0 [kernel]
0xffffffff816128aa : neigh_probe                    4a/0x70 [kernel]
0xffffffff81615cea : neigh_timer_handler                    ca/0x280 [kernel]
0xffffffff810f08e5 : call_timer_fn                    35/0x140 [kernel]
0xffffffff810f14d1 : run_timer_softirq                    1e1/0x440 [kernel]
0xffffffff8172d46d : __do_softirq                    ed/0x278 [kernel]
0xffffffff8108b086 : irq_exit                    b6/0xc0 [kernel]
0xffffffff8172cf4d : smp_apic_timer_interrupt                    3d/0x50 [kernel]
0xffffffff8172b893 : apic_timer_interrupt                    93/0xa0 [kernel]
0x0 (inexact)
parms: dev=0xffff880c69340000 dst=0x1301a8c0 scope=0xfd


struct neigh_parms {
net = {
net = 0xffffffff81cd2640 <init_net>
},
dev = 0xffff880c69340000,
list = {
next = 0xffff880c8773b5d0,
prev = 0xffff880c68407150
},
neigh_setup = 0x0,
neigh_cleanup = 0x0,
tbl = 0xffffffff81cd93c0 <arp_tbl>,
sysctl_table = 0xffff880c7fe6f000,
dead = 0x0,
refcnt = {
counter = 0x4
},
callback_head = {
next = 0x0,
func = 0x0
},
reachable_time = 0x9d6f,
data = {0x3, 0x3, 0x0, 0x0, 0x3e8, 0x7530, 0x1388, 0xea60, 0x10000, 0x40, 0x3e8, 0x320, 0x3e8},
data_state = {0x1fff}
}

NEIGH_VAR_DELAY_PROBE_TIME = 6
crash> eval 0x1388
hexadecimal: 1388
decimal: 5000
  octal: 11610
 binary: 0000000000000000000000000000000000000000000000000001001110001000


neigh_hh_output

0xffffffff816851b0 : arp_solicit                    0/0x2b0 [kernel]
0xffffffff816128aa : neigh_probe                    4a/0x70 [kernel]
0xffffffff81613bfb : __neigh_event_send                    1eb/0x230 [kernel]
0xffffffff8161406e : neigh_resolve_output                    12e/0x1c0 [kernel]
0xffffffff816539dc : ip_finish_output2                    17c/0x380 [kernel]
0xffffffff81653da6 : ip_finish_output                    136/0x1d0 [kernel]
0xffffffff816553a6 : ip_output                    76/0xe0 [kernel]
0xffffffff81654b05 : ip_local_out                    35/0x40 [kernel]
0xffffffff8169dd6d : iptunnel_xmit                    13d/0x1b0 [kernel]
0xffffffffa114540d : udp_tunnel_xmit_skb                    ed/0x100 [udp_tunnel]
0xffffffffa115c26e : vxlan_xmit_one                    86e/0xa90 [vxlan]

0xffffffff816851b0 : arp_solicit                    0/0x2b0 [kernel]
0xffffffff816128aa : neigh_probe                    4a/0x70 [kernel]
0xffffffff81615cea : neigh_timer_handler                    ca/0x280 [kernel]
0xffffffff810f08e5 : call_timer_fn                    35/0x140 [kernel]
0xffffffff810f14d1 : run_timer_softirq                    1e1/0x440 [kernel]
0xffffffff8172d46d : __do_softirq                    ed/0x278 [kernel]
0xffffffff8108b086 : irq_exit                    b6/0xc0 [kernel]
0xffffffff8172cf4d : smp_apic_timer_interrupt                    3d/0x50 [kernel]
0xffffffff8172b893 : apic_timer_interrupt                    93/0xa0 [kernel]

dst_neigh_lookup
    ipv4_dst_op {
            ipv4_neigh_lookup

mlx5e_create_encap_header_ipv4
    mlx5e_route_lookup_ipv4
            ip_route_output_key
            ip4_dst_hoplimit
            dst_neigh_lookup

# cat /proc/sys/net/ipv4/neigh/$link/base_reachable_time
30

arp_netdev_event
neigh_changeaddr
NETDEV_CHANGEADDR

neigh_flush_dev
neigh_cleanup_and_release
neigh_release
neigh_destroy

ip link set dev p4p1 address 24:8a:07:88:27:ca


0xffffffff81619f20 : neigh_flush_dev.isra.36                    0/0x140 [kernel]
0xffffffff8161a093 : neigh_changeaddr                    33/0x50 [kernel]
0xffffffff816e71b5 : ndisc_netdev_event                    45/0x100 [kernel]
0xffffffff810a6299 : notifier_call_chain                    49/0x70 [kernel]
0xffffffff810a63b6 : raw_notifier_call_chain                    16/0x20 [kernel]
0xffffffff816059c5 : call_netdevice_notifiers_info                    35/0x60 [kernel]
0xffffffff8160716c : dev_set_mac_address                    8c/0xb0 [kernel]
0xffffffff8161efae : do_setlink                    3be/0xc60 [kernel]
0xffffffff816239e4 : rtnl_newlink                    4f4/0x8c0 [kernel]
0xffffffff81623e5c : rtnetlink_rcv_msg                    ac/0x240 [kernel]
0xffffffff816472dd : netlink_rcv_skb                    ed/0x120 [kernel]
0xffffffff8161de38 : rtnetlink_rcv                    28/0x30 [kernel]
0xffffffff81646a41 : netlink_unicast                    181/0x240 [kernel]
0xffffffff81646dc2 : netlink_sendmsg                    2c2/0x3b0 [kernel]
0xffffffff815ed248 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815edb9a : ___sys_sendmsg                    27a/0x290 [kernel]
0xffffffff815ef164 : __sys_sendmsg                    54/0x90 [kernel]
0xffffffff815ef1b2 : sys_sendmsg                    12/0x20 [kernel]
0xffffffff81003a07 : do_syscall_64                    67/0x150 [kernel]
0xffffffff817335a7 : return_from_SYSCALL_64                    0/0x6a [kernel]
parms: dev=0xffff880c6a720000 tbl=?
execname: ip
ts: 1
0x7fcf9d7617a0 : __sendmsg_nocancel                    7/0x57 [/usr/lib64/libc-2.17.so]
0x4441b4 : __rtnl_talk                    c4/0x3f0 [/usr/sbin/ip]
0x41efc7 : iplink_modify                    267/0x4b0 [/usr/sbin/ip]
0x41f422 : do_iplink                    e2/0xf80 [/usr/sbin/ip]
0x408504 : do_cmd                    44/0x80 [/usr/sbin/ip]
0x40801f : main                    20f/0x577 [/usr/sbin/ip]
0x7fcf9d68ab35 : __libc_start_main                    f5/0x1c0 [/usr/lib64/libc-2.17.so]
0x4083b0 : _start                    29/0x39 [/usr/sbin/ip]


0xffffffff8161bfa0 : __neigh_create                    0/0x590 [kernel]
0xffffffff81657fd7 : ip_finish_output2                    197/0x390 [kernel]
0xffffffff81659686 : ip_finish_output                    136/0x1e0 [kernel]
0xffffffff8165a136 : ip_output                    76/0xe0 [kernel]
0xffffffff81659885 : ip_local_out                    35/0x40 [kernel]
0xffffffff816a1f8e : iptunnel_xmit                    13e/0x1a0 [kernel]
0xffffffffa116142c : udp_tunnel_xmit_skb                    fc/0x110 [udp_tunnel]
0xffffffffa116b3f7 : vxlan_xmit_one                    7e7/0xa40 [vxlan]
0xffffffffa116c7ca : vxlan_xmit                    35a/0x0 [vxlan]
0xffffffff8160d9c1 : dev_hard_start_xmit                    a1/0x210 [kernel]
0xffffffff8160e130 : __dev_queue_xmit                    510/0x630 [kernel]
0xffffffff8160e260 : dev_queue_xmit                    10/0x20 [kernel]
0xffffffffa114a792 : ovs_vport_send                    c2/0x150 [openvswitch]
0xffffffffa113c103 : do_output                    53/0xf0 [openvswitch]
0xffffffffa113d5cc : do_execute_actions                    9bc/0x9d0 [openvswitch]
0xffffffffa113d9c0 : ovs_execute_actions                    40/0x120 [openvswitch]
0xffffffffa1141334 : ovs_dp_process_packet                    84/0x120 [openvswitch]
0xffffffffa114a673 : ovs_vport_receive                    73/0xd0 [openvswitch]
0xffffffffa114b093 : netdev_frame_hook                    d3/0x160 [openvswitch]
0xffffffff8160c3a6 : __netif_receive_skb_core                    1e6/0xa20 [kernel]
parms: tbl=0xffffffff81cd9a40 pkey=0xffff880c8ec833cc dev=0xffff880c6a720000 want_ref=0x0
execname: swapper/10


neighbour.primary_key is the IP address

neigh_update_hhs is called when changing mac address

crash> net_device.header_ops ffff880c6a720000
header_ops = 0xffffffff818c4740 <eth_header_ops>
crash> eth_header_ops
eth_header_ops = $5 = {
create = 0xffffffff81638600 <eth_header>,
parse = 0xffffffff81638530 <eth_header_parse>,
cache = 0xffffffff81638560 <eth_header_cache>,
cache_update = 0xffffffff816385c0 <eth_header_cache_update>,
validate = 0x0
}

#define NUD_INCOMPLETE  0x01
#define NUD_REACHABLE   0x02
#define NUD_STALE       0x04
#define NUD_DELAY       0x08
#define NUD_PROBE       0x10
#define NUD_FAILED      0x20

0xffffffff8161b2b0 : neigh_update                    0/0x5c0 [kernel]
0xffffffff8168a274 : arp_process                    224/0x720 [kernel]
0xffffffff8168a8d0 : arp_rcv                    140/0x1c0 [kernel]
0xffffffff8160c556 : __netif_receive_skb_core                    396/0xa20 [kernel]
0xffffffff8160cbf8 : __netif_receive_skb                    18/0x60 [kernel]
0xffffffff8160e2cf : netif_receive_skb_internal                    4f/0x3e0 [kernel]
0xffffffff8160f17d : napi_gro_receive                    cd/0x140 [kernel]
0xffffffffa01ae811 : mlx5e_handle_rx_cqe_mpwrq                    4a1/0x820 [mlx5_core]
0xffffffffa01aeb18 : mlx5e_handle_rx_cqe_mpwrq                    7a8/0x820 [mlx5_core]
0xffffffffa01aff9a : mlx5e_rx_am                    2ea/0x2f0 [mlx5_core]
0xffffffff8160eb2c : net_rx_action                    26c/0x3b0 [kernel]
0xffffffff81736df9 : __irqentry_text_end                    c9/0x269 [kernel]
0xffffffff8108bf35 : irq_exit                    a5/0xb0 [kernel]
0xffffffff81735f91 : do_IRQ                    51/0xd0 [kernel]
0xffffffff81733e93 : ret_from_intr                    0/0x19 [kernel]
0x0 (inexact)
parms: neigh=0xffff880aa005b600 lladdr=0xffff880bb60055d6 new=0x2 flags=0x0 nlmsg_pid=0x0

crash> neighbour 0xffff880aa005b600

nud_state = 0x8,

hh = {
hh_len = 0xe,
hh_lock = {
  seqcount = {
    sequence = 0x0
  },
  lock = {
    {
      rlock = {
        raw_lock = {
          val = {
            counter = 0x0
          }
        }
      }
    }
  }
},
hh_data = {0x6adfb074959e0000, 0x85018e2d02502, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
},

output = 0xffffffff81619240 <neigh_resolve_output>,
ops = 0xffffffff818c6820 <arp_hh_ops>,
rcu = {
next = 0x0,
func = 0x0
},
dev = 0xffff880c85800000,
primary_key = 0xffff880aa005b758 "\001\001\001\v"
}

crash> neighbour.ha 0xffff880aa005b600 -o
struct neighbour {
[ffff880aa005b6a0] unsigned char ha[32];
}
crash> rd -8 ffff880aa005b6a0 6
ffff880aa005b6a0:  9e 95 74 b0 df 6a                                 ..t..j

crash> arp_hh_ops
arp_hh_ops = $4 = {
family = 0x2,
solicit = 0xffffffff816899a0 <arp_solicit>,
error_report = 0xffffffff81689310 <arp_error_report>,
output = 0xffffffff81619240 <neigh_resolve_output>,
connected_output = 0xffffffff81619240 <neigh_resolve_output>
}

crash> p neigh_tables
neigh_tables = $3 =
{0xffffffff81cd9a40 <arp_tbl>, 0xffffffff81cdec60 <nd_tbl>, 0x0}
crash> neigh_table  0xffffffff81cd9a40
crash> neigh_table  arp_tbl

crash> neigh_table.nht  arp_tbl
nht = 0xffff880bb65c9900
crash> neigh_hash_table  0xffff880bb65c9900
struct neigh_hash_table {
hash_buckets = 0xffff880c7f6c2900,
hash_shift = 0x5,
hash_rnd = {0x8b82355f, 0xdf4571fd, 0x12153b3b, 0xe5a068dd},
rcu = {
next = 0x0,
func = 0x0
}
}
crash> rd 0xffff880c7f6c2900 32
ffff880c7f6c2900:  0000000000000000 0000000000000000   ................
ffff880c7f6c2910:  0000000000000000 0000000000000000   ................
ffff880c7f6c2920:  0000000000000000 ffff880a9b63f800   ..........c.....
ffff880c7f6c2930:  ffff880b11898600 0000000000000000   ................
ffff880c7f6c2940:  0000000000000000 ffff880b0179dc00   ..........y.....
ffff880c7f6c2950:  0000000000000000 ffff880b4a81e000   ...........J....
ffff880c7f6c2960:  0000000000000000 ffff880b00e8ee00   ................
ffff880c7f6c2970:  0000000000000000 ffff880afdef3400   .........4......
ffff880c7f6c2980:  0000000000000000 0000000000000000   ................
ffff880c7f6c2990:  0000000000000000 0000000000000000   ................
ffff880c7f6c29a0:  ffff880b00e8ea00 0000000000000000   ................
ffff880c7f6c29b0:  0000000000000000 0000000000000000   ................
ffff880c7f6c29c0:  0000000000000000 ffff880b728a7e00   .........~.r....
ffff880c7f6c29d0:  ffff880b00ebe000 ffff880b102c7000   .........p,.....
ffff880c7f6c29e0:  ffff880b102dba00 0000000000000000   ..-.............
ffff880c7f6c29f0:  ffff880aa005b600 0000000000000000   ................

crash> neighbour ffff880a9b63f800

same as 

crash> net -a


include/uapi/linux/if_arp.h

struct arphdr {
    __be16          ar_hrd;         /* format of hardware address   */
    __be16          ar_pro;         /* format of protocol address   */
    unsigned char   ar_hln;         /* length of hardware address   */
    unsigned char   ar_pln;         /* length of protocol address   */
    __be16          ar_op;          /* ARP opcode (command)         */

#if 0
     /*
      *      Ethernet looks like this : This bit is variable sized however...
      */
    unsigned char           ar_sha[ETH_ALEN];       /* sender hardware address      */
    unsigned char           ar_sip[4];              /* sender IP address            */
    unsigned char           ar_tha[ETH_ALEN];       /* target hardware address      */
    unsigned char           ar_tip[4];              /* target IP address            */
#endif

};

====== Packet ======
Packet size: 65 bytes
ffffffff ffff0225 d0e21850 08060001
08000604 00010225 d0e21850 01010101
00000000 00000101 01130000 00000000
00000000 00000000 00000000 824798d6
00000000

#define ARPHRD_ETHER    1               /* Ethernet 10Mbps              */
#define ETH_P_IP 0x0800

ar_hln = 6
ar_pln = 4

/* ARP protocol opcodes. */
#define ARPOP_REQUEST   1               /* ARP request                  */
#define ARPOP_REPLY     2               /* ARP reply                    */
#define ARPOP_RREQUEST  3               /* RARP request                 */
#define ARPOP_RREPLY    4               /* RARP reply                   */
#define ARPOP_InREQUEST 8               /* InARP request                */
#define ARPOP_InREPLY   9               /* InARP reply                  */
#define ARPOP_NAK       10              /* (ATM)ARP NAK                 */


find /proc/ -name proxy_arp -exec echo {} \; -exec cat {} \;

[root@localhost network-scripts]# sysctl -a | grep gc_thresh
net.ipv4.neigh.default.gc_thresh1 = 128
net.ipv4.neigh.default.gc_thresh2 = 512
net.ipv4.neigh.default.gc_thresh3 = 1024
net.ipv4.route.gc_thresh = -1
net.ipv4.xfrm4_gc_thresh = 32768
net.ipv6.neigh.default.gc_thresh1 = 128
net.ipv6.neigh.default.gc_thresh2 = 512
net.ipv6.neigh.default.gc_thresh3 = 1024
net.ipv6.route.gc_thresh = 1024
net.ipv6.xfrm6_gc_thresh = 32768

===kernel===

cat /proc/kallsyms

# CONFIG_STRICT_DEVMEM is not set
# CONFIG_MODVERSIONS is not set
CONFIG_NET_SWITCHDEV=y

===makefile===

http://wiki.ubuntu.org.cn/跟我一起写Makefile:使用函数

===skills===

linux16 /vmlinuz-5.5.0-rc4+ root=/dev/mapper/fedora-root
initrd16 /initramfs-5.5.0-rc4+.img

du -sh * | sort -hr
find . -type f -exec ls -lShd {} +

kill -0 $pid
If sig is 0, then no signal is sent, but error checking is still performed; 
this can be used to check for the existence of a process ID or process 
group ID.

size_t x = ...;
ssize_t y = ...;
printf("%zu\n", x);  // prints as unsigned decimal
printf("%zx\n", x);  // prints as hex
printf("%zd\n", y);  // prints as signed decimal

pgrep -xn bash

find -type f -empty -exec rm {} \;

%rdi，%rsi，%rdx，%rcx，%r8，%r9

https://github.com/vim-scripts/Conque-GDB

lspci -vv -s 04:00.0

# echo $((16#a))
10

[chrism@dev-r630-03 udev3]$ a=1234567
[chrism@dev-r630-03 udev3]$ echo ${a%3*}
12
[chrism@dev-r630-03 udev3]$ echo ${a##*6}
7
[chrism@dev-r630-03 udev3]$

+       if (IS_ERR(priv->devcom))

ARRAY_SIZE

devlink dev info pci/0000:82:00.0

echo mishuang > /dev/kmsg

last three chars
echo ${a: -3}
echo ${a:: -3}

ibdev2netdev

virsh autostart vm1
virsh autostart vm1 --disable

> instance = kzalloc(struct_size(instance, entry, count), GFP_KERNEL);

DECLARE_BITMAP
for_each_set_bit

lshw -numeric -C display

# echo clear > /sys/kernel/debug/kmemleak ... test your kernel or modules ...
# echo scan > /sys/kernel/debug/kmemleak ... Then get your report with:
# cat /sys/kernel/debug/kmemleak


yum --showduplicates list httpd | expand

# see contens without installing
rpm -qpl packetname

shuf -n 2 filename

depmod

kzalloc change to kcalloc

-               c->rq.state |= BIT(MLX5E_RQ_STATE_AM);
+               __set_bit(MLX5E_RQ_STATE_AM, &c->rq.state);

-       if (sq->state & BIT(MLX5E_SQ_STATE_IPSEC)) {
+       if (test_bit(MLX5E_SQ_STATE_IPSEC, &sq->state)) {

ip -s link show dev $link

expe1  expe10  expe100  expe11  expe2  expe3  expe4  expe5  expe6  expe7  expe8  expe9
ls expe* | sort -k1.5n
ls expe* | sort -V

make M=net/psample  V=1

win + r
mspaint

fontconfig infinality 

https://elixir.bootlin.com/linux/v4.15.1/source/drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c 

roundup_pow_of_two

n etstat -s

xdp, VcXsrv

/mswg/release/mft/latest 

dnf install @gnome-desktop-environment 

rpm -e --nodeps  kernel-headers-4.13.0_rc5_00103_g57df82c-1.x86_64

    print_hex_dump(KERN_WARNING, "mlmsg: ",
            DUMP_PREFIX_ADDRESS, 32, 4, n,
            n->nlmsg_len, 0);

    print_hex_dump(KERN_WARNING, "mlx5e_sq_xmit: ", DUMP_PREFIX_ADDRESS, 16, 1, skb->data, len, true);

INIT_LIST_HEAD

-       return IS_ERR(block_cb) ? PTR_ERR(block_cb) : 0;
+       return PTR_ERR_OR_ZERO(block_cb);

IS_ERR
PTR_ERR
ERR_PTR

sysconf

WARN_ON(index < 0);

mlxfwup

sleep .5

dump_stack()

ifstat

4.10-rc1 4.10-rc2 4.10-rc3 .. 4.10 (4.10.1 4.10.2 4.10.3) 4.11-rc1 4.11-rc2 .. 4.11 (linus tree) 4.12-rc1 (net-next)  4.11.1 (linux-stable tree)

dmidecode

msleep(250);

-			msleep(1);
+			usleep_range(1000, 2000);


rxdump -d 03:00.0 -s 0

[root@bjglab-18 ~]# rpm -qf /usr/bin/rxdump
mft-int-4.6.0-46.x86_64

screen -x

2    802  include/linux/kernel.h <<min_t>>
         #define min_t(type, x, y) \

for_each_set_bit


lscpu
nproc
dmidecode -t 4
cpuid
inxi

yum install iptraf

make headers_install ARCH=i386 INSTALL_HDR_PATH=/usr

sudo apt-get install grub-customizer

chkconfig NetworkManager off

rpm -ql systemtap

[root@bjglab-18 ~]# ls -l /sys/class/net/em1/device/driver/module
lrwxrwxrwx. 1 root root 0 Mar 15 02:39 /sys/class/net/em1/device/driver/module -> ../../../../module/igb

===hosts===

TYPE=Ethernet
BOOTPROTO=static
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=em1
UUID=69b82430-695f-4650-8249-813146f59b80
DEVICE=em1
ONBOOT=yes

IPADDR=10.12.205.13
GATEWAY=10.12.205.1
NETMASK=255.255.255.0
DNS1=10.12.68.102
DNS2=10.12.68.101

DOMAIN="mtbc.labs.mlnx labs.mlnx mlnx lab.mtl.com mtl.com"

===boot===

/lib/systemd/system/NetworkManager-wait-online.service

http://xmodulo.com/how-to-configure-linux-bridge-interface.html

===gdm===

service gdm status
service gdm stop
ps aux | grep gnome
service gdm start


/etc/inittab

systemctl get-default
graphical.target

systemctl get-default
systemctl set-default multi-user.target

===kdump===

[root@dev-r630-03 ~]# kexec1
bzImage64
do_bzImage64_load is called
add_memmap: type: 0, addr: 1000, size: 9b000, align: 400
add_memmap: type: 0, addr: 13000000, size: 20000000, align: 400
add_memmap: type: 3, addr: 7af0b000, size: a30000, align: 400
add_memmap: type: 2, addr: 7b93b000, size: 17c000, align: 400
add_memmap: type: 2, addr: 7bae9000, size: 16000, align: 400

Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: do_bzImage64_load is called
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: load_crashdump_segments is called
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: add_memmap: type: 0, addr: 1000, size: 9b000, align: 400
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: add_memmap: type: 0, addr: 14000000, size: 20000000, align: 400
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: add_memmap: type: 3, addr: 7af0b000, size: a30000, align: 400
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: add_memmap: type: 2, addr: 7b93b000, size: 17c000, align: 400
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: add_memmap: type: 2, addr: 7bae9000, size: 16000, align: 400
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: kexec: loaded kdump kernel
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx kdumpctl[12902]: Starting kdump: [OK]
Aug 14 21:03:01 dev-r630-04.mtbc.labs.mlnx systemd[1]: Started Crash recovery kernel arming.
[root@dev-r630-04 ~]#

ver=4.14.0-rc4+
/sbin/kexec -p '--command-line=BOOT_IMAGE=/vmlinuz-$ver								\
    root=/dev/mapper/centos-root ro rd.lvm.lv=centos/root rd.lvm.lv=centos/swap intel_iommu=on irqpoll	\
    nr_cpus=1 reset_devices cgroup_disable=memory mce=off numa=off udev.children-max=2 panic=10		\
    rootflags=nofail acpi_no_memhotplug transparent_hugepage=never disable_cpu_apicid=0'			\
    --initrd=/boot/initramfs-${ver}kdump.img /boot/vmlinuz-$ver

/sys/kernel/kexec_crash_size

echo 1 > /proc/sys/kernel/sysrq
echo c > /proc/sysrq-trigger

[root@localhost boot]# systemctl status kdump
● kdump.service - Crash recovery kernel arming
Loaded: loaded (/usr/lib/systemd/system/kdump.service; enabled; vendor preset: enabled)
Active: active (exited) since Tue 2017-05-23 02:19:19 EDT; 9min ago
Main PID: 1192 (code=exited, status=0/SUCCESS)
CGroup: /system.slice/kdump.service

May 23 02:19:18 localhost.localdomain dracut[3733]: drwxr-xr-x   2 root     root            0 May 23 02:19 usr/share/zoneinfo/America
May 23 02:19:18 localhost.localdomain dracut[3733]: -rw-r--r--   1 root     root         3519 Oct  3  2016 usr/share/zoneinfo/America/New_York
May 23 02:19:18 localhost.localdomain dracut[3733]: drwxr-xr-x   2 root     root            0 May 23 02:18 var
May 23 02:19:18 localhost.localdomain dracut[3733]: lrwxrwxrwx   1 root     root           11 May 23 02:18 var/lock -> ../run/lock
May 23 02:19:18 localhost.localdomain dracut[3733]: lrwxrwxrwx   1 root     root            6 May 23 02:18 var/run -> ../run
May 23 02:19:18 localhost.localdomain dracut[3733]: ========================================================================
May 23 02:19:18 localhost.localdomain dracut[3733]: *** Creating initramfs image file '/boot/initramfs-3.10.0-514.el7.x86_64kdump.img' done ***
May 23 02:19:19 localhost.localdomain kdumpctl[1192]: kexec: loaded kdump kernel
May 23 02:19:19 localhost.localdomain kdumpctl[1192]: Starting kdump: [OK]
May 23 02:19:19 localhost.localdomain systemd[1]: Started Crash recovery kernel arming.

===crash===

mod -s mlx5_core /lib/modules/3.10.0-957.el7.x86_64/extra/mlnx-ofa_kernel/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.ko
objdump  -D /lib/modules/4.19.36+/kernel/net/sched/cls_flower.ko > 1.txt
addr2line -e /lib/modules/4.19.36+/kernel/net/sched/cls_flower.ko -a 0x1f


CONFIG_RELOCATABLE=y
CONFIG_RANDOMIZE_BASE=y
CONFIG_DEBUG_INFO_REDUCED=n

git remote set-url origin git@github.com:crash-utility/crash.git

crash> foreach bt

print_struct()
output *(struct mlx5e_priv *)0xffff8810020e08c0

STRUCT_SIZE("mlx5e_priv")

gdb_get_datatype
show_net_devices_v3

crash> list ffff88021faf60f8 -l mlx5_eq.list -s mlx5_eq.irqn
ffff88021faf60f8
irqn = 0
ffff88021fee1350
irqn = 41
ffff88021f383e50
irqn = 42
ffff88021f382450
irqn = 43
ffff88021f382950
irqn = 44
ffff88021f382150
irqn = 45
ffff88021f383450
irqn = 46
ffff88021f382d50
irqn = 47
ffff88021f383250
irqn = 48
ffff88021f383a50
irqn = 49
ffff88021f382050
irqn = 50
ffff88021f382650
irqn = 51
ffff88021f383350
irqn = 52

[root@bjglab-18 ~]# ls /proc/sysrq-trigger
/proc/sysrq-trigger
[root@bjglab-18 ~]# cat  /proc/sys/kernel/sysrq
16

https://en.wikipedia.org/wiki/Magic_SysRq_key

list module.list -H modules -s module.name
list module.list -H modules -s module

git clone git://github.com/crash-utility/crash.git
https://bugzilla.redhat.com/show_bug.cgi?id=1421657

git clone git://sourceware.org/git/systemtap.git 

===mem===

https://www.kernel.org/doc/gorman/html/understand/index.html

struct pglist_data contig_page_data

#define swapper_pg_dir init_top_pgt
p/x init_top_pgt

ps | grep bash
struct task_struct.mm ffff880339a28000
struct mm_struct.mmap 0xffff880339ae83c0
list vm_area_struct.vm_next 0xffff88033b016cf0 -s vm_area_struct

crash> list vm_area_struct.vm_next 0xffff88039860dc08 -s vm_area_struct.vm_start,vm_end
ffff88039860dc08
vm_start = 0x400000
vm_end = 0x401000
ffff88039860d2b0
vm_start = 0x600000
vm_end = 0x601000
ffff88039860ce60
vm_start = 0x601000
vm_end = 0x602000
ffff88039860c2e0
vm_start = 0x16ad000
vm_end = 0x16ce000
ffff88039860ca10
vm_start = 0x7f4717905000
vm_end = 0x7f4717ae0000
ffff88039860d420
vm_start = 0x7f4717ae0000
vm_end = 0x7f4717ce0000
ffff88039860de30
vm_start = 0x7f4717ce0000
vm_end = 0x7f4717ce4000
ffff88039860d648
vm_start = 0x7f4717ce4000
vm_end = 0x7f4717ce6000
ffff88039860cb80
vm_start = 0x7f4717ce6000
vm_end = 0x7f4717cea000
ffff88039860c508
vm_start = 0x7f4717cea000
vm_end = 0x7f4717d12000
ffff88039860d140
vm_start = 0x7f4717eed000
vm_end = 0x7f4717ef0000
ffff88039860d870
vm_start = 0x7f4717f0f000
vm_end = 0x7f4717f11000
ffff88039860dd78
vm_start = 0x7f4717f11000
vm_end = 0x7f4717f12000
ffff88039860c0b8
vm_start = 0x7f4717f12000
vm_end = 0x7f4717f13000
ffff88039860dcc0
vm_start = 0x7f4717f13000
vm_end = 0x7f4717f14000
ffff88039860cac8
vm_start = 0x7ffd14107000
vm_end = 0x7ffd14128000
ffff88039860c000
vm_start = 0x7ffd141a3000
vm_end = 0x7ffd141a6000
ffff88039860cc38
vm_start = 0x7ffd141a6000
vm_end = 0x7ffd141a8000

data_vm = 0x2f,
exec_vm = 0x206,
stack_vm = 0x21,
def_flags = 0x0,
start_code = 0x400000,
end_code = 0x400778,
start_data = 0x600e10,
end_data = 0x60102c,
start_brk = 0x16ad000,
brk = 0x16ce000,
start_stack = 0x7ffd14125c50,
arg_start = 0x7ffd14127731,
arg_end =   0x7ffd14127738,
env_start = 0x7ffd14127738,
env_end =   0x7ffd14127ff1,

===fs===

list -H super_blocks -s super_block
list -H super_blocks -s super_block.s_type
list -H super_blocks -s super_block.s_fs_info

list -H ffff880124d62b20(d_subdirs) -s dentry.d_iname -l dentry.d_child

===sysfs===

/sys/class/net/$rep1/queues/tx-0/byte_queue_limits

===flow===

esw_create_legacy_fdb_table
    table_size = BIT(MLX5_CAP_ESW_FLOWTABLE_FDB(dev, log_max_ft_size));
    MLX5_SET(create_flow_group_in, flow_group_in, end_flow_index, table_size - 3);

    [256921.683047] alloc_flow_group: fg->max_ftes: 3ffffe

about 4M

0xffffffffa07589b0 : mlx5_cmd_create_flow_table                    0/0x150 [mlx5_core]
0xffffffffa075b0bf : __mlx5_create_flow_table.constprop.29                    22f/0x460 [mlx5_core]
0xffffffffa075b359 : mlx5_create_auto_grouped_flow_table                    69/0x90 [mlx5_core]
0xffffffffa0766df6 : esw_create_offloads_fast_fdb_table                    a6/0x180 [mlx5_core]
0xffffffffa07677f2 : esw_offloads_init                    a2/0x680 [mlx5_core]
0xffffffffa076542d : mlx5_eswitch_enable_sriov                    ed/0x5c0 [mlx5_core]
0xffffffffa07682b6 : mlx5_devlink_eswitch_mode_set                    e6/0x200 [mlx5_core]
0xffffffffa04b8305 : devlink_nl_cmd_eswitch_set_doit                    45/0xb0 [devlink]
0xffffffff81643f68 : genl_family_rcv_msg                    1f8/0x3d0 [kernel]
0xffffffff8164418c : genl_rcv_msg                    4c/0x90 [kernel]
0xffffffff81643647 : netlink_rcv_skb                    e7/0x120 [kernel]
0xffffffff81643d58 : genl_rcv                    28/0x40 [kernel]
0xffffffff81642dbc : netlink_unicast                    18c/0x240 [kernel]
0xffffffff81643135 : netlink_sendmsg                    2c5/0x3b0 [kernel]
0xffffffff815e9f18 : sock_sendmsg                    38/0x50 [kernel]
0xffffffff815ea501 : SYSC_sendto                    101/0x190 [kernel]
0xffffffff815eb09e : SyS_sendto                    e/0x10 [kernel]
0xffffffff81003bb7 : do_syscall_64                    67/0x150 [kernel]
0xffffffff8172b8a7 : return_from_SYSCALL_64                    0/0x6a [kernel]
0x0 (inexact)
parms: dev=0xffff8809a6d00060 vport=0x0 op_mod=0x0 type=0x4 level=0x0 log_size=0x12 next_ft=0x0 table_id=0xffff880a316e5668 flags=0x1
execname: devlink

esw_create_offloads_fast_fdb_table
    esw_size = min_t(int, MLX5_CAP_GEN(dev, max_flow_counter) * ESW_OFFLOADS_NUM_GROUPS,
                     1 << MLX5_CAP_ESW_FLOWTABLE_FDB(dev, log_max_ft_size));

    fdb = mlx5_create_auto_grouped_flow_table(root_ns, FDB_FAST_PATH,
                                              esw_size,
                                              ESW_OFFLOADS_NUM_GROUPS, 0,
                                              flags);

create_autogroup
    if (ft->autogroup.num_groups < ft->autogroup.required_groups)
            /* We save place for flow groups in addition to max types */
            group_size = ft->max_fte / (ft->autogroup.required_groups + 1);
create_flow_group_common
alloc_flow_group

vlan to l2 to tcp

fs_node 0xffff88063bb0fbc0
mlx5_flow_namespace 0xffff88063bb0fbc0
FS_TYPE_NAMESPACE
    ||
    \/
fs_node 0xffff88052c7a9280
fs_prio 0xffff88052c7a9280
FS_TYPE_PRIO
    ||
    \/
fs_node 0xffff88052c7a9080
FS_TYPE_NAMESPACE
    ||
    \/
fs_node 0xffff88052c7a9100
fs_prio 0xffff88052c7a9100
FS_TYPE_PRIO
num_levels = 1,
start_level = 30,
prio = 0,
num_ft = 1
    ||
    \/
fs_node 0xffff880bdd667700
mlx5_flow_table 0xffff880bdd667700
type = FS_TYPE_FLOW_TABLE,

id = 8,
vport = 0,
max_fte = 1024,
level = 30,
type = FS_FT_NIC_RX,

    ||
    \/
fs_node 0xffff880b93d59c00
mlx5_flow_group 0xffff880b93d59c00 -x
type = FS_TYPE_FLOW_GROUP,
    ||
    \/
fs_node 0xffff880b93d5a800
fs_fte 0xffff880b93d5a800 -x
type = FS_TYPE_FLOW_ENTRY,
    ||
    \/
fs_node 0xffff880bda6dc240
mlx5_flow_rule 0xffff880bda6dc240
type = FS_TYPE_FLOW_DEST,

===stap===

https://sourceware.org/systemtap/examples/profiling/latencytap.stp

run_make_cmd
stap_system

===nc===

[root@bjglab-18 ~]#  nc -l -p 80 < /dev/zero
[root@bjglab-19 ~]#  nc 1.1.1.18 80 > /dev/null

iptraf

===iptables===

systemctl stop iptables
systemctl disable iptables

systemctl stop firewalld
systemctl disable firewalld
yum install iptables-services
systemctl start iptables
systemctl enable iptables
iptables -L INPUT --line-numbers 
iptables -I INPUT 5 -p udp --dport 4789 -j ACCEPT
/usr/libexec/iptables/iptables.init save

iptables -L INPUT --line-numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    ACCEPT     all  --  anywhere             anywhere             state RELATED,ESTABLISHED
2    ACCEPT     icmp --  anywhere             anywhere
3    ACCEPT     all  --  anywhere             anywhere
4    ACCEPT     tcp  --  anywhere             anywhere             state NEW tcp dpt:ssh
5    REJECT     all  --  anywhere             anywhere             reject-with icmp-host-prohibited

iptables -I INPUT 5 -p udp --dport 4789 -j ACCEPT

/usr/libexec/iptables/iptables.init save
iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]

iptables -L INPUT --line-numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    ACCEPT     all  --  anywhere             anywhere             state RELATED,ESTABLISHED
2    ACCEPT     icmp --  anywhere             anywhere
3    ACCEPT     all  --  anywhere             anywhere
4    ACCEPT     tcp  --  anywhere             anywhere             state NEW tcp dpt:ssh
5    ACCEPT     udp  --  anywhere             anywhere             udp dpt:4789
6    REJECT     all  --  anywhere             anywhere             reject-with icmp-host-prohibited

iptables -I INPUT 5 -p tcp --dport 20000 -j ACCEPT

iptables -S
iptables -F
iptables -X

iptables -I INPUT 1 -p udp --dport 4789 -j ACCEPT
iptables -I INPUT 2 -p tcp --dport 20000 -j ACCEPT

===sockperf===

Server side:
[root@gen-l-vrt-106-005 ~]# sockperf server --ip=11.137.134.5

Client side:
[root@gen-l-vrt-107-005 ~]# for i in $(seq 0 21) ; do sockperf tp --ip=11.137.134.5 --port=1000$i --pps=max --msg-size=14 -t 60 --sender-affinity $i & done | grep Rate | awk '{SUM+=$6} END { print "Total: " SUM "Mpps" }'
Total: 9280130Mpps

---
server
sockperf sr -i 1.1.1.13

client
for C in {0..7} ;   do ( taskset -c $C sockperf tp -i 1.1.1.13 -m 14 -t 10  & ) ; done

===performance===

For high performance capture they can use DPDK:
https://software.intel.com/en-us/articles/dpdk-packet-capture-framework
https://github.com/dpdkcap/dpdkcap

# ethtool  -c $link
Coalesce parameters for ens9:
Adaptive RX: on  TX: off
stats-block-usecs: 0
sample-interval: 0
pkt-rate-low: 0
pkt-rate-high: 0

rx-usecs: 8
rx-frames: 128
rx-usecs-irq: 0
rx-frames-irq: 0

tx-usecs: 16
tx-frames: 32
tx-usecs-irq: 0
tx-frames-irq: 0

rx-usecs-low: 0
rx-frame-low: 0
tx-usecs-low: 0
tx-frame-low: 0

rx-usecs-high: 0
rx-frame-high: 0
tx-usecs-high: 0
tx-frame-high: 0

alias tune1="ethtool -C $link adaptive-rx off rx-usecs 64 rx-frames 128 tx-usecs 64 tx-frames 32"
alias tune2="ethtool -C $link adaptive-rx on  rx-usecs  8 rx-frames 128 tx-usecs 16 tx-frames 32"

https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Performance_Tuning_Guide/s-cpu-irq.html

# grep com /proc/interrupts
 36:         20          0          0          0          0          0          0          0          0          0          0          0   PCI-MSI 147460-edge      mlx5_comp0@pci:0000:00:09.0
 37:          1          0          0          0          0          0         16          0          0          0          0          0   PCI-MSI 147461-edge      mlx5_comp1@pci:0000:00:09.0
...

echo 000001 > /proc/irq/36/smp_affinity
echo 000002 > /proc/irq/37/smp_affinity
echo 000004 > /proc/irq/38/smp_affinity
echo 000008 > /proc/irq/39/smp_affinity

function watchi
{
	watch -d -n 1 "egrep \"mlx5_comp|CPU\" /proc/interrupts"
}

ethtool -x $link
RX flow hash indirection table for ens9 with 2 RX ring(s):
    0:      0     1     0     1     0     1     0     1
    8:      0     1     0     1     0     1     0     1
   16:      0     1     0     1     0     1     0     1
   24:      0     1     0     1     0     1     0     1
   32:      0     1     0     1     0     1     0     1
   40:      0     1     0     1     0     1     0     1
   48:      0     1     0     1     0     1     0     1
   56:      0     1     0     1     0     1     0     1
   64:      0     1     0     1     0     1     0     1
   72:      0     1     0     1     0     1     0     1
   80:      0     1     0     1     0     1     0     1
   88:      0     1     0     1     0     1     0     1
   96:      0     1     0     1     0     1     0     1
  104:      0     1     0     1     0     1     0     1
  112:      0     1     0     1     0     1     0     1
  120:      0     1     0     1     0     1     0     1
RSS hash key:
64:bd:4d:ae:a4:c6:65:ac:7f:e5:33:e4:55:8f:f7:52:ee:53:eb:5c:1e:16:76:e9:65:50:56:d9:64:b7:73:44:47:e2:d7:de:c7:30:ba:29

watch -d -n 1 "ethtool -S $link | grep rx[0-9]_pack"

watch -d -n 1 "ethtool -S $link | grep \"rx[0-9]*_packets:\""

watch -d -n 1 "ethtool -S $link | grep \"tx[0-9]*_packets:\""

===rpyc===

rpyc_classic.py

===review===

https://patchwork.ozlabs.org/project/netdev/list/

===cscope===

http://cscope.sourceforge.net/large_projects.html

1 . Generate cscope.files
find /my/src -name '*.c' -o -name '*.h' > /my/db/cscope.files

2 . Run cscope on the generated result
cscope -i /my/db/cscope.files

3 . Export to environment variable
CSCOPE_DB=/my/db/cscope.out; export CSCOPE_DB 

===nfs===

[root@dev-r630-03 ~]# cat /etc/exports
/home1/chrism   10.12.205.0/24(rw,sync,no_root_squash)

[root@dev-r630-03 ~]#  exportfs -arv
exporting 10.12.205.0/24:/home1/chrism

[root@dev-r630-03 ~]# showmount -e 10.12.205.13
Export list for 10.12.205.13:
/home1/chrism 10.12.205.0/24

[root@dev-chrism-vm1 ~]# mount 10.12.205.13:/home1/chrism /mnt

===ecmp===

pci_sriov_get_totalvfs

init_one
	load_one
		mlx5_init_once
			mlx5_eswitch_init
				mlx5_eswitch_compat_debugfs_init

 0xffffffffa07a1380 : mlx5_devlink_eswitch_mode_set               0/0x230 [mlx5_core]
 0xffffffffa07a6bff : esw_compat_write               15f/0x1b0 [mlx5_core]
 0xffffffff811de5cd : vfs_write               bd/0x1e0 [kernel]
 0xffffffff811df06f : sys_write               7f/0xe0 [kernel]
 0xffffffff81645b12 : tracesys               dd/0xe2 [kernel]
parms: devlink=0xffff880849e80000 mode=0x1
execname: bash

esw_mode_to_devlink
mlx5_devlink_eswitch_mode_set
	esw_offloads_start
	esw_offloads_stop

IPv4: Hash-based multipath routing. When the routing cache was removed in 3.6, the IPv4 multipath algorithm changed from more or less being destination-based into being quasi-random per-packet scheduling. This increased the risk of out-of-order packets and made it impossible to use multipath together with anycast services. In this release, the multipath routing implementation is replaced with a flow-based load balancing based on a hash over the source and destination addresses merge commit

https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=07355737a8badd951e6b72aa8609a2d6eed0a7e7

fib_select_path
	fib_multipath_hash
	fib_select_multipath

 0xffffffff815aa390 : fib_select_multipath               0/0x110 [kernel]
 0xffffffff81562f58 : __ip_route_output_key               8f8/0x930 [kernel]
 0xffffffff8156324c : ip_route_output_flow               1c/0x60 [kernel]
 0xffffffffa07674b8 : vxlan_tnl_send               b8/0x270 [vport_vxlan]
 0xffffffffa0bedf84 : ovs_vport_send               14/0x50 [openvswitch]
 0xffffffffa0be11c5 : do_output               25/0x40 [openvswitch]
 0xffffffffa0be21aa : do_execute_actions               58a/0x730 [openvswitch]
 0xffffffffa0be238c : ovs_execute_actions               3c/0xf0 [openvswitch]
 0xffffffffa0be4b3a : ovs_packet_cmd_execute               2aa/0x2e0 [openvswitch]
 0xffffffff8155bfdd : genl_family_rcv_msg               1cd/0x400 [kernel]
 0xffffffff8155c2a1 : genl_rcv_msg               91/0xd0 [kernel]
 0xffffffff8155a209 : netlink_rcv_skb               a9/0xc0 [kernel]
 0xffffffff8155a738 : genl_rcv               28/0x40 [kernel]
 0xffffffff8155981d : netlink_unicast               ed/0x1b0 [kernel]
 0xffffffff81559c10 : netlink_sendmsg               330/0x770 [kernel]
 0xffffffff81510d10 : sock_sendmsg               b0/0xf0 [kernel]
 0xffffffff81511149 : ___sys_sendmsg               3a9/0x3c0 [kernel]
 0xffffffff81512031 : __sys_sendmsg               51/0x90 [kernel]
 0xffffffff81512082 : sys_sendmsg               12/0x20 [kernel]
 0xffffffff81645b12 : tracesys               dd/0xe2 [kernel]
parms: res=0xffff88080e4337b8

Returning from:  0xffffffff81563230 : ip_route_output_flow               0/0x60 [kernel]
Returning to  :  0xffffffffa07674b8 : vxlan_tnl_send               b8/0x270 [vport_vxlan]
 0xffffffffa0bedf84 : ovs_vport_send               14/0x50 [openvswitch]
 0xffffffffa0be11c5 : do_output               25/0x40 [openvswitch]
 0xffffffffa0be21aa : do_execute_actions               58a/0x730 [openvswitch]
 0xffffffffa0be238c : ovs_execute_actions               3c/0xf0 [openvswitch]
 0xffffffffa0be4b3a : ovs_packet_cmd_execute               2aa/0x2e0 [openvswitch]
 0xffffffff8155bfdd : genl_family_rcv_msg               1cd/0x400 [kernel]
 0xffffffff8155c2a1 : genl_rcv_msg               91/0xd0 [kernel]
 0xffffffff8155a209 : netlink_rcv_skb               a9/0xc0 [kernel]
 0xffffffff8155a738 : genl_rcv               28/0x40 [kernel]
 0xffffffff8155981d : netlink_unicast               ed/0x1b0 [kernel]
 0xffffffff81559c10 : netlink_sendmsg               330/0x770 [kernel]
 0xffffffff81510d10 : sock_sendmsg               b0/0xf0 [kernel]
 0xffffffff81511149 : ___sys_sendmsg               3a9/0x3c0 [kernel]
 0xffffffff81512031 : __sys_sendmsg               51/0x90 [kernel]
 0xffffffff81512082 : sys_sendmsg               12/0x20 [kernel]
 0xffffffff81645b12 : tracesys               dd/0xe2 [kernel]
ffff8808072fc700        -131906915023104

crash> rtable  ffff8808072fc700
  rt_uses_gateway = 0x1,
  rt_iif = 0x0,
  rt_gateway = 0x10a0107,	7.1.10.1

mlx5e_rep_neigh_update
	mlx5e_rep_update_flows
		mlx5e_tc_encap_flows_del
			mlx5_eswitch_del_offloaded_rule

/mswg/release/BUILDS/fw-4119/fw-4119-rel-16_21_2030-build-001/etc/syndrome_list.log
BAD_PARAM           | 0x0D5EF2 |  set_flow_table_entry: currently only one flow counter is supported per flow

rateswatch.sh 
ethtool_phy_pps_BW.sh 
 
esw_offloads_init
	mlx5_lag_set_multipath_ready

mlx5_lag_deactivate_multipath
mlx5_lag_activate_multipath

mlx5_lag_netdev_event

mlx5_handle_changeupper_event
mlx5_lag_set_affinity
create_lag_debugfs_files

[74309.482135] mlx5_core 0000:04:00.0: mlx5_lag_activate_multipath:867:(pid 27933): Cannot find lag device

[ 1428.921673] mlx5_lag_add 1
[ 1428.921693] mlx5_lag_add 1
[ 1428.921709] mlx5_lag_add 2

===baidu===

list intf_list
list mlx5_dev_list

list -H intf_list -l mlx5_interface.list -s mlx5_interface
list -H mlx5_dev_list -l mlx5_priv.dev_list -s mlx5_priv.name

mlxconfig -d $link_bdf q | grep KEEP_ETH

 0xffffffffa0bc4050 : mlx5e_create_netdev                   0/0xf0 [mlx5_core]
 0xffffffffa0bc454d : mlx5e_add                   10d/0x330 [mlx5_core]
 0xffffffffa0bb346a : mlx5_add_device                   5a/0x160 [mlx5_core]
 0xffffffffa0bb35ea : mlx5_register_interface                   7a/0xd0 [mlx5_core]
 0xffffffffa0bc478a : mlx5e_init                   1a/0x20 [mlx5_core]
 0xffffffffa022905a [stap_28811                   5a/0x0]
 0x0 (inexact)
parms: mdev=0xffff8807bf440060 profile=0xffffffffa0bdefe0 ppriv=0xffff8807cc3fe600
execname: modprobe
ts: 355
 0x7fb2617fb0d9 : syscall                   19/0x40 [/usr/lib64/libc-2.26.so]
 0xdca05af4db [/usr/bin/kmod                   134db/0x23000]

===switch===

https://docs.google.com/document/d/17tc3eqHhP5iske11G0vPikOaYKXfeeaUu5UWVStBR9U/edit#heading=h.ll18b5d3okav

enable
configure terminal
ip l3
ip routing
protocol ospf

interface ethernet 1/3 no switchport force
interface ethernet 1/3 ip address 8.2.10.1/24

interface ethernet 1/1 no switchport force
interface ethernet 1/1 ip address 7.1.10.1/24

interface ethernet 1/2 no switchport force
interface ethernet 1/2 ip address 7.2.10.1/24

ip route vrf default 9.0.10.0 255.255.255.0 8.2.10.13
ip route vrf default 6.0.10.0 255.255.255.0 7.1.10.14
ip route vrf default 6.0.10.0 255.255.255.0 7.2.10.14

show ip route

ip route vrf default 9.0.10.0 255.255.255.0 8.2.10.74

interface ethernet 1/2 shutdown
interface ethernet 1/2 no shutdown

show interfaces ethernet status

===bonding===
===bond===

mlx5e_nic_enable
	mlx5_lag_add

mlx5_queue_bond_work

[Tue Nov 19 17:05:41 2019] Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)
[Tue Nov 19 17:05:41 2019] MII link monitoring set to 100 ms
[Tue Nov 19 17:05:42 2019] IPv6: ADDRCONF(NETDEV_UP): bond0: link is not ready
[Tue Nov 19 17:05:45 2019] mlx5_core 0000:04:00.0 enp4s0f0: Link down
[Tue Nov 19 17:05:46 2019] bond0: Enslaving enp4s0f0 as a backup interface with a down link
[Tue Nov 19 17:05:47 2019] mlx5_core 0000:04:00.1 enp4s0f1: Link down
[Tue Nov 19 17:05:47 2019] bond0: Enslaving enp4s0f1 as a backup interface with a down link
[Tue Nov 19 17:05:47 2019] mlx5_core 0000:04:00.0: lag map port 1:2 port 2:2 shared_fdb(1)
[Tue Nov 19 17:05:47 2019] mlx5_core 0000:04:00.0: Operation mode is single FDB
[Tue Nov 19 17:05:49 2019] mlx5_core 0000:04:00.0 enp4s0f0: Link up
[Tue Nov 19 17:05:49 2019] bond0: link status definitely up for interface enp4s0f0, 100000 Mbps full duplex
[Tue Nov 19 17:05:49 2019] bond0: Warning: No 802.3ad response from the link partner for any adapters in the bond
[Tue Nov 19 17:05:49 2019] bond0: first active interface up!
[Tue Nov 19 17:05:49 2019] mlx5_core 0000:04:00.0: modify lag map port 1:1 port 2:1
[Tue Nov 19 17:05:49 2019] IPv6: ADDRCONF(NETDEV_CHANGE): bond0: link becomes ready
[Tue Nov 19 17:05:50 2019] mlx5_core 0000:04:00.2: enabling device (0000 -> 0002)
[Tue Nov 19 17:05:50 2019] mlx5_core 0000:04:00.2: firmware version: 16.26.1200



 0xffffffffa0225fe0 : mlx5e_xmit              0/0x80 [mlx5_core]
 0xffffffff81628b8b : dev_hard_start_xmit              9b/0x230 [kernel]
 0xffffffff8165d8df : sch_direct_xmit              ef/0x270 [kernel]
 0xffffffff81629529 : __dev_queue_xmit              749/0x8b0 [kernel]
 0xffffffffa0930056 : ad_lacpdu_send              156/0x170 [bonding] (inexact)
 0xffffffffa0932ef2 : bond_3ad_state_machine_handler              d92/0x10d0 [bonding] (inexact)
 0xffffffff810a3d3d : process_one_work              16d/0x380 [kernel] (inexact)
 0xffffffff810a3f7e : worker_thread              2e/0x380 [kernel] (inexact)
 0xffffffff810aa001 : kthread              111/0x130 [kernel] (inexact)
 0xffffffff81800215 : ret_from_fork              35/0x40 [kernel] (inexact)
parms: skb=0xffff8803ff9ffc00 dev=0xffff8803dd780000
execname: kworker/u32:0


 0xffffffffa0213fe0 : mlx5e_xmit             0/0x80 [mlx5_core]
 0xffffffff81628b8b : dev_hard_start_xmit             9b/0x230 [kernel]
 0xffffffff8165d8df : sch_direct_xmit             ef/0x270 [kernel]
 0xffffffff81629529 : __dev_queue_xmit             749/0x8b0 [kernel]
 0xffffffffa092082d : bond_start_xmit             24d/0x410 [bonding] (inexact)
 0xffffffff81628b8b : dev_hard_start_xmit             9b/0x230 [kernel] (inexact)
 0xffffffff816295ec : __dev_queue_xmit             80c/0x8b0 [kernel] (inexact)
 0xffffffff81680122 : ip_finish_output2             252/0x3b0 [kernel] (inexact)
 0xffffffff8168198e : ip_output             6e/0x110 [kernel] (inexact)
 0xffffffff816822b5 : ip_send_skb             15/0x40 [kernel] (inexact)
 0xffffffff816ab095 : raw_sendmsg             815/0xa70 [kernel] (inexact)
 0xffffffff81607a10 : sock_sendmsg             30/0x40 [kernel] (inexact)
 0xffffffff81608e9e : __sys_sendto             10e/0x140 [kernel] (inexact)
 0xffffffff81608ef4 : __x64_sys_sendto             24/0x30 [kernel] (inexact)
 0xffffffff810041b5 : do_syscall_64             55/0x170 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe             44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: skb=0xffff8803ec7a4800 dev=0xffff8803dc840000
execname: ping
ts: 0
 0x7fe3fb32d44a : sendto             1a/0xd0 [/usr/lib64/libc-2.26.so]
 0x55e1df93878c [/usr/bin/ping             378c/0xe000]


 0xffffffffa091e170 : bond_handle_frame            0/0x270 [bonding]
 0xffffffff8162724b : __netif_receive_skb_core            29b/0xbb0 [kernel]
 0xffffffff8162a1da : netif_receive_skb_internal            4a/0x130 [kernel] (inexact)
 0xffffffff8162af7e : napi_gro_receive            ce/0xf0 [kernel] (inexact)
 0xffffffffa0217796 : mlx5e_handle_rx_cqe_mpwrq            256/0x680 [mlx5_core] (inexact)
 0xffffffffa0217c7c : mlx5e_poll_rx_cq            bc/0x920 [mlx5_core] (inexact)
 0xffffffffa02187e2 : mlx5e_napi_poll            a2/0xc70 [mlx5_core] (inexact)
 0xffffffff8162a688 : net_rx_action            158/0x410 [kernel] (inexact)
 0xffffffff81a000e8 : __softirqentry_text_start            e8/0x2ca [kernel] (inexact)
 0xffffffff8108d7d3 : irq_exit            a3/0xb0 [kernel] (inexact)
 0xffffffff81801ca3 : do_IRQ            83/0xe0 [kernel] (inexact)
 0xffffffff8180098f : ret_from_intr            0/0x1d [kernel] (inexact)
 0xffffffff815d658b : cpuidle_enter_state            9b/0x2e0 [kernel] (inexact)
 0xffffffff810b9fd0 : do_idle            200/0x260 [kernel] (inexact)
 0xffffffff810ba22f : cpu_startup_entry            6f/0x80 [kernel] (inexact)
 0xffffffff8247104f : start_kernel            4a6/0x4c6 [kernel] (inexact)
 0xffffffff810000d5 : secondary_startup_64            a5/0xb0 [kernel] (inexact)
parms: pskb=0xffff8803fe403cb8

===snmp===

include/uapi/linux/snmp.h

struct net{
	struct netns_mib        mib;

ipstats_mib

ip_rcv
        __IP_INC_STATS(net, IPSTATS_MIB_INHDRERRORS);

static const struct snmp_mib snmp4_ipstats_list[] = {
        SNMP_MIB_ITEM("InReceives", IPSTATS_MIB_INPKTS),
        SNMP_MIB_ITEM("InHdrErrors", IPSTATS_MIB_INHDRERRORS),

===mirror_ovs===

mlx5e_handle_rx_cqe_mpwrq

	printk(KERN_WARNING "%s: %p, cstrides: %d, cqe_bcnt: %d, wi->consumed_strides: %d, rq->mpwqe_num_strides: %d\n",
		__func__,  cqe, cstrides, cqe_bcnt, wi->consumed_strides, rq->mpwqe_num_strides);

mlx5e_handle_rx_cqe

mlx5e_handle_rx_cqe_rep

mlx5e_free_rq

static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(20, 30);
VLOG_ERR_RL(&rl,  "%s is called", __func__);

VLOG_ERR("%s is called", __func__);

OVS_ACTION_ATTR_OUTPUT

xlate_actions
	mirror_ingress_packet
		mirror_packet
			output_normal
				compose_output_action
	do_xlate_actions

Thread 13 "handler92" hit Breakpoint 1, compose_output_action__ (ctx=ctx@entry=0x7f4833fbd010, ofp_port=4, xr=xr@entry=0x0, check_stp=check_stp@entry=true) at ofproto/ofproto-dpif-xlate.c:3720
3720    {
(gdb) bt
#0  compose_output_action__ (ctx=ctx@entry=0x7f4833fbd010, ofp_port=4, xr=xr@entry=0x0, check_stp=check_stp@entry=true) at ofproto/ofproto-dpif-xlate.c:3720
#1  0x00000000004425f0 in compose_output_action (xr=0x0, ofp_port=<optimized out>, ctx=0x7f4833fbd010) at ofproto/ofproto-dpif-xlate.c:3890

#2  output_normal (ctx=ctx@entry=0x7f4833fbd010, out_xbundle=out_xbundle@entry=0x1c42250, xvlan=xvlan@entry=0x7f4833fbba84) at ofproto/ofproto-dpif-xlate.c:2221
#3  0x0000000000445e47 in xlate_normal (ctx=0x7f4833fbd010) at ofproto/ofproto-dpif-xlate.c:2826
#4  xlate_output_action (ctx=ctx@entry=0x7f4833fbd010, port=<optimized out>, max_len=<optimized out>, may_packet_in=may_packet_in@entry=true) at ofproto/ofproto-dpif-xlate.c:4858
#5  0x0000000000444606 in do_xlate_actions (ofpacts=ofpacts@entry=0x1c4c278, ofpacts_len=ofpacts_len@entry=16, ctx=ctx@entry=0x7f4833fbd010) at ofproto/ofproto-dpif-xlate.c:6193

#6  0x0000000000448aac in xlate_actions (xin=xin@entry=0x7f4833fbda80, xout=xout@entry=0x7f4833fdf6a0) at ofproto/ofproto-dpif-xlate.c:7099
#7  0x000000000043a994 in upcall_xlate (wc=0x7f4833fdf6f8, odp_actions=0x7f4833fdf6b8, upcall=0x7f4833fdf640, udpif=0x1c474e0) at ofproto/ofproto-dpif-upcall.c:1153
#8  process_upcall (udpif=udpif@entry=0x1c474e0, upcall=upcall@entry=0x7f4833fdf640, odp_actions=odp_actions@entry=0x7f4833fdf6b8, wc=wc@entry=0x7f4833fdf6f8) at ofproto/ofproto-dpif-upcall.c:1347
#9  0x000000000043b6a3 in recv_upcalls (handler=<optimized out>, handler=<optimized out>) at ofproto/ofproto-dpif-upcall.c:824
#10 0x000000000043bc32 in udpif_upcall_handler (arg=0x1c72e00) at ofproto/ofproto-dpif-upcall.c:746
#11 0x00000000004dc294 in ovsthread_wrapper (aux_=<optimized out>) at lib/ovs-thread.c:348
#12 0x00007f4850bff609 in start_thread () from /lib64/libpthread.so.0
#13 0x00007f48503cfe6f in clone () from /lib64/libc.so.6


Thread 13 "handler220" hit Breakpoint 1, compose_output_action__ (ctx=ctx@entry=0x7f4833fbd010, ofp_port=1, xr=xr@entry=0x0, check_stp=check_stp@entry=true) at ofproto/ofproto-dpif-xlate.c:3720
3720    {
(gdb) bt
#0  compose_output_action__ (ctx=ctx@entry=0x7f4833fbd010, ofp_port=1, xr=xr@entry=0x0, check_stp=check_stp@entry=true) at ofproto/ofproto-dpif-xlate.c:3720
#1  0x00000000004425f0 in compose_output_action (xr=0x0, ofp_port=<optimized out>, ctx=0x7f4833fbd010) at ofproto/ofproto-dpif-xlate.c:3890

#2  output_normal (ctx=ctx@entry=0x7f4833fbd010, out_xbundle=<optimized out>, xvlan=xvlan@entry=0x7f4833fbbc14) at ofproto/ofproto-dpif-xlate.c:2221
#3  0x0000000000442826 in mirror_packet (ctx=ctx@entry=0x7f4833fbd010, xbundle=<optimized out>, mirrors=1) at ofproto/ofproto-dpif-xlate.c:1903
#4  0x00000000004491bb in mirror_ingress_packet (ctx=0x7f4833fbd010) at ofproto/ofproto-dpif-xlate.c:1934

#5  xlate_actions (xin=xin@entry=0x7f4833fbda80, xout=xout@entry=0x7f4833fdf6a0) at ofproto/ofproto-dpif-xlate.c:7098
#6  0x000000000043a994 in upcall_xlate (wc=0x7f4833fdf6f8, odp_actions=0x7f4833fdf6b8, upcall=0x7f4833fdf640, udpif=0x1c40c40) at ofproto/ofproto-dpif-upcall.c:1153
#7  process_upcall (udpif=udpif@entry=0x1c40c40, upcall=upcall@entry=0x7f4833fdf640, odp_actions=odp_actions@entry=0x7f4833fdf6b8, wc=wc@entry=0x7f4833fdf6f8) at ofproto/ofproto-dpif-upcall.c:1347
#8  0x000000000043b6a3 in recv_upcalls (handler=<optimized out>, handler=<optimized out>) at ofproto/ofproto-dpif-upcall.c:824
#9  0x000000000043bc32 in udpif_upcall_handler (arg=0x1c6c1f0) at ofproto/ofproto-dpif-upcall.c:746
#10 0x00000000004dc294 in ovsthread_wrapper (aux_=<optimized out>) at lib/ovs-thread.c:348
#11 0x00007f4850bff609 in start_thread () from /lib64/libpthread.so.0
#12 0x00007f48503cfe6f in clone () from /lib64/libc.so.6

===fix===

ffff8800369f5000

 -l cls_fl_filter.list -s cls_fl_filter.handle

tcb 10000

real    0m5.628s
user    0m0.108s
sys     0m3.090s

list act_base -s tc_action_ops

tcb 64000

with cls_flower idr

1 min

with cls_flower idr and act_gact 65535 hash entry

real    0m16.515s
user    0m0.716s
sys     0m2.710s

tcb 1000000

real    4m57.623s
user    0m12.292s
sys     0m45.528s


original code

real    0m9.082s
user    0m0.186s
sys     0m4.062s


[root@dev-r630-04 ~]# tcb 1000000
+ [[ 1 == 0 ]]
+ n=1000000
+ file=/tmp/b.txt
+ TC=/auto/mtbcswgwork/chrism/iproute2/tc/tc
+ TC=/home1/chrism/iproute2/tc/tc
+ TC=tc
+ sudo tc qdisc del dev enp4s0f0 ingress
+ sudo tc qdisc add dev enp4s0f0 ingress
+ sudo ethtool -K enp4s0f0 hw-tc-offload on
ethtool: bad command line argument(s)
For more information run ethtool -h
+ sudo /labhome/chrism/bin/tdc_batch.py -o -n 1000000 enp4s0f0 /tmp/b.txt
+ tc -b /tmp/b.txt

real    63m20.729s
user    0m22.333s
sys     56m27.614s
+ set +x

===qinq===

__netdev_update_features

rxvlan on

[Thu May 16 11:24:01 2019] mlx5e_handle_rx_cqe_mpwrq: vlan_present: 1, vlan_tci: 5, protoco: 8
[Thu May 16 11:24:01 2019] dump: 000000008dcd94bb: 24 8a 07 88 27 ca 24 8a 07 88 27 9a 08 00 45 00
[Thu May 16 11:24:01 2019] dump: 00000000f46289c6: 00 54 ed 15 40 00 40 01 ca 27 c0 a8 01 0d c0 a8

rxvlan off

[Thu May 16 11:24:54 2019] mlx5e_handle_rx_cqe_mpwrq: vlan_present: 0, vlan_tci: 0, protoco: 81
[Thu May 16 11:24:54 2019] dump: 0000000094229a96: 24 8a 07 88 27 ca 24 8a 07 88 27 9a 81 00 00 05
[Thu May 16 11:24:54 2019] dump: 000000006b28b692: 08 00 45 00 00 54 4e c9 40 00 40 01 68 74 c0 a8


#define FLOW_MAX_VLAN_HEADERS 2
#define LEGACY_MAX_VLAN_HEADERS 1

vlan-limit
flow_vlan_limit

commit f0fb825a3785320430686834741c718ff4f8ebf4
Author: Eric Garver <e@erig.me>
Date:   Wed Mar 1 17:47:59 2017 -0500

    Add support for 802.1ad (QinQ tunneling)

    Flow key handling changes:
     - Add VLAN header array in struct flow, to record multiple 802.1q VLAN
       headers.
     - Add dpif multi-VLAN capability probing. If datapath supports
       multi-VLAN, increase the maximum depth of nested OVS_KEY_ATTR_ENCAP.

    Refactor VLAN handling in dpif-xlate:
     - Introduce 'xvlan' to track VLAN stack during flow processing.
     - Input and output VLAN translation according to the xbundle type.

    Push VLAN action support:
     - Allow ethertype 0x88a8 in VLAN headers and push_vlan action.
     - Support push_vlan on dot1q packets.

    Use other_config:vlan-limit in table Open_vSwitch to limit maximum VLANs
    that can be matched. This allows us to preserve backwards compatibility.

    Add test cases for VLAN depth limit, Multi-VLAN actions and QinQ VLAN
    handling

    Co-authored-by: Thomas F Herbert <thomasfherbert@gmail.com>
    Signed-off-by: Thomas F Herbert <thomasfherbert@gmail.com>
    Co-authored-by: Xiao Liang <shaw.leon@gmail.com>
    Signed-off-by: Xiao Liang <shaw.leon@gmail.com>
    Signed-off-by: Eric Garver <e@erig.me>
    Signed-off-by: Ben Pfaff <blp@ovn.org>




commit fed8962aff57f552163ef718cc1b0db582f2295e
Author: Eric Garver <e@erig.me>
Date:   Wed Mar 1 17:48:00 2017 -0500

    Add new port VLAN mode "dot1q-tunnel"

     - Example:
         ovs-vsctl set Port p1 vlan_mode=dot1q-tunnel tag=100
       Pushes another VLAN 100 header on packets (tagged and untagged) on
       ingress, and pops it on egress.
     - Customer VLAN check:
         ovs-vsctl set Port p1 vlan_mode=dot1q-tunnel tag=100 cvlans=10,20
       Only customer VLAN of 10 and 20 are allowed.

    Co-authored-by: Xiao Liang <shaw.leon@gmail.com>
    Signed-off-by: Xiao Liang <shaw.leon@gmail.com>
    Signed-off-by: Eric Garver <e@erig.me>
    Signed-off-by: Ben Pfaff <blp@ovn.org>


skb->head + skb->mac_header is the start address of mac header

crash> rd -8 0xffff9e17d2432044 32
ffff9e17d2432044:  02 25 d0 14 01 02 02 25 d0 13 01 02 81 00 00 05   .%.....%........
ffff9e17d2432054:  08 06 00 01 08 00 06 04 00 02 02 25 d0 13 01 02   ...........%....

crash> sk_buff.protocol,vlan_proto,vlan_tci,vlan_present ffff9e1fd80e7000
  protocol = 0x81
  vlan_proto = 0xa888
  vlan_tci = 0x3e8
  vlan_present = 0x1

===nat===

iptables -t nat -A POSTROUTING -o $link -j MASQUERADE

0       0       swapper/12      nf_nat_manip_pkt
        nf_nat_manip_pkt
        nf_nat_inet_fn
        nf_nat_ipv4_fn
        nf_nat_ipv4_out
        nf_hook_slow
        ip_output
        ip_forward_finish
        ip_forward
        ip_rcv_finish
        ip_rcv
        __netif_receive_skb_one_core+0x57 [kernel]
        __netif_receive_skb+0x18 [kernel]
        netif_receive_skb_internal+0x45 [kernel]
        napi_gro_receive+0xc5 [kernel]
        mlx5e_handle_rx_cqe_mpwrq+0x2ff [kernel]
        mlx5e_poll_rx_cq+0xd5 [kernel]
        mlx5e_napi_poll+0xb9 [kernel]
        net_rx_action+0x13c [kernel]
        __softirqentry_text_start+0xde [kernel]
        irq_exit+0xf2 [kernel]
        do_IRQ+0x8a [kernel]
        ret_from_intr+0x0 [kernel]
        cpuidle_enter_state+0xb0 [kernel]
        cpuidle_enter+0x17 [kernel]
        call_cpuidle+0x23 [kernel]
        do_idle+0x1e1 [kernel]
        cpu_startup_entry+0x1d [kernel]
        start_secondary+0x199 [kernel]
        secondary_startup_64+0xa4 [kernel]

===ovs_ct===

openvswitch: NAT support.
https://lwn.net/Articles/671459/

ovs_ct_execute
        handle_fragments
                ip_defrag
                        ip_frag_queue
                                ip_frag_reasm


add_flow_start
rule_collection_add

rule_dpif_lookup_from_table
classifier_lookup__

revalidate
revalidate_ukey
xlate_push_stats
xlate_push_stats_entry
rule_dpif_credit_stats
rule_dpif_credit_stats__

do_futex

rule_get_stats

WARNING: DWARF expression stack underflow in CFI
WARNING: Missing unwind data for a module, rerun with 'stap -d (unknown; retry with -DDEBUG_UNWIND)'
 0xffffffffc0801010 : ovs_dp_upcall   0/0x60 [openvswitch]
 0xffffffffc080117d : ovs_dp_process_packet   10d/0x130 [openvswitch]
 0xffffffffc080d21c : ovs_vport_receive   ac/0x100 [openvswitch]
 0xffffffffc080dd33 : netdev_frame_hook   d3/0x160 [openvswitch]
 0xffffffff816b0b1a : __netif_receive_skb_core   2ba/0xc90 [kernel]
 0xffffffff816b0b1a : __netif_receive_skb_core   2ba/0xc90 [kernel]
 0xffffffff816b152b : __netif_receive_skb_one_core   3b/0x80 [kernel]
 0xffffffff816b15a8 : __netif_receive_skb   18/0x60 [kernel]
 0xffffffff816b0755 : netif_receive_skb_internal   45/0xe0 [kernel]
 0xffffffff816b26a5 : napi_gro_receive   c5/0xf0 [kernel]
 0xffffffffc02e1069 : mlx5e_handle_rx_cqe_mpwrq   f9/0x1b0 [mlx5_core]
 0xffffffffc02e11f5 : mlx5e_poll_rx_cq   d5/0x9a0 [mlx5_core]
 0xffffffffc02e1f99 : mlx5e_napi_poll   b9/0xcf0 [mlx5_core]
 0xffffffff816b1d1c : net_rx_action   13c/0x3b0 [kernel]
 0xffffffff81c000de : __do_softirq   de/0x2e7 [kernel]
 0xffffffff81079502 : irq_exit   f2/0x100 [kernel]
 0xffffffff81a01b4a : do_IRQ   8a/0xe0 [kernel]
 0xffffffff81a0098f : ret_from_intr   0/0x18 [kernel]
 0xffffffff8165e550 : cpuidle_enter_state   b0/0x310 [kernel]
 0xffffffff8165e7e7 : cpuidle_enter   17/0x20 [kernel]
 0xffffffff810a8733 : call_cpuidle   23/0x40 [kernel]
 0xffffffff810a8ad1 : do_idle   1e1/0x240 [kernel]
 0xffffffff810a8cbd : cpu_startup_entry   1d/0x20 [kernel]
 0xffffffff81046199 : start_secondary   199/0x1e0 [kernel]
 0xffffffff810000d4 : secondary_startup_64   a4/0xb0 [kernel]
parms: dp=0xffff88102dd4a600 skb=0xffff88082ad20f00 key=0xffff88085fac3a18 upcall_info=0xffff88085fac39b0 cutlen=0x0
execname: swapper/6
ts: 5, 1
<no user backtrace at module("openvswitch").function("ovs_dp_upcall@net/openvswitch/datapath.c:274")>

 0xffffffffc0801010 : ovs_dp_upcall   0/0x60 [openvswitch]
 0xffffffffc080117d : ovs_dp_process_packet   10d/0x130 [openvswitch]
 0xffffffffc07fd3db : clone_execute   1bb/0x1e0 [openvswitch]
 0xffffffffc07fc9d1 : do_execute_actions   351/0xba0 [openvswitch]
 0xffffffffc07fd44c : ovs_execute_actions   4c/0x120 [openvswitch]
 0xffffffffc080077f : ovs_packet_cmd_execute   24f/0x290 [openvswitch]
 0xffffffff817090ce : genl_family_rcv_msg   20e/0x420 [kernel]
 0xffffffff8170932c : genl_rcv_msg   4c/0x90 [kernel]
 0xffffffff817072c4 : netlink_rcv_skb   54/0x130 [kernel]
 0xffffffff81707a88 : genl_rcv   28/0x40 [kernel]
 0xffffffff81706afa : netlink_unicast   20a/0x2c0 [kernel]
 0xffffffff81706e81 : netlink_sendmsg   2d1/0x3d0 [kernel]
 0xffffffff8168b449 : sock_sendmsg   39/0x50 [kernel]
 0xffffffff8168d5c0 : ___sys_sendmsg   2a0/0x2f0 [kernel]
 0xffffffff8168d5c0 : ___sys_sendmsg   2a0/0x2f0 [kernel]
 0xffffffff8168ea93 : __sys_sendmsg   63/0xa0 [kernel]
 0xffffffff8168eaef : __x64_sys_sendmsg   1f/0x30 [kernel]
 0xffffffff8100262a : do_syscall_64   5a/0x170 [kernel]
 0xffffffff81a0008c : entry_SYSCALL_64_after_hwframe   44/0xa9 [kernel]
parms: dp=0xffff88102dd4a600 skb=0xffff880f7be4cc00 key=0xffffe8ffffacc410 upcall_info=0xffffc90009e277d0 cutlen=0x0
execname: handler4
ts: 5, 2
 0x7f9166aaeef4 : sendmsg   54/0xb0 [/usr/lib64/libpthread-2.26.so]
 0x5bedf1

tc_replace_flower
netdev_tc_flow_put
netdev_flow_put		class->flow_put
parse_flow_put
try_send_to_netdev
dpif_netlink_operate
dpif_operate
handle_upcalls
recv_upcalls
udpif_upcall_handler
ovsthread_wrapper
start_thread

9937    9943    revalidator4    parse_tc_flower_to_match 7f15b37708e0
        parse_tc_flower_to_match  0 [ovs-vswitchd]
        netdev_flow_dump_next  6a [ovs-vswitchd]
        dpif_netlink_flow_dump_next  1f6 [ovs-vswitchd]
        dpif_flow_dump_next  5f [ovs-vswitchd]
        revalidate  109 [ovs-vswitchd]
        udpif_revalidator  1a9 [ovs-vswitchd]
        ovsthread_wrapper  98 [ovs-vswitchd]
        start_thread  db [libpthread-2.26.so]

ovs_dp_upcall


compose_conntrack_action

/* Action structure for NXAST_CT.
 *
 * Pass traffic to the connection tracker.
struct nx_action_conntrack {



[root@dev-r630-03 ~]# ovs-appctl ofproto/trace br in_port=2,dl_dst=24:8a:07:ad:77:99,dl_src=02:25:d0:13:01:02,ip,nw_src=192.168.0.2,nw_dst=8.9.10.11
Flow: ip,in_port=2,vlan_tci=0x0000,dl_src=02:25:d0:13:01:02,dl_dst=24:8a:07:ad:77:99,nw_src=192.168.0.2,nw_dst=8.9.10.11,nw_proto=0,nw_tos=0,nw_ecn=0,nw_ttl=0

bridge("br")
------------
 0. ct_state=-trk,ip, priority 10
    ct(table=1,nat)
    nat
     -> A clone of the packet is forked to recirculate. The forked pipeline will be resumed at table 1.
     -> Sets the packet to an untracked state, and clears all the conntrack fields.

Final flow: unchanged
Megaflow: recirc_id=0,ct_state=-trk,eth,ip,in_port=2,nw_frag=no
Datapath actions: ct(nat),recirc(0x15)

===============================================================================
recirc(0x15) - resume conntrack with default ct_state=trk|new (use --ct-next to customize)
===============================================================================

Flow: recirc_id=0x15,ct_state=new|trk,eth,ip,in_port=2,vlan_tci=0x0000,dl_src=02:25:d0:13:01:02,dl_dst=24:8a:07:ad:77:99,nw_src=192.168.0.2,nw_dst=8.9.10.11,nw_proto=0,nw_tos=0,nw_ecn=0,nw_ttl=0

bridge("br")
------------
    thaw
        Resuming from table 1
 1. ct_state=+new+trk,ip,in_port=2, priority 32768
    ct(commit,nat(src=8.9.10.1:5000-50000))
    nat(src=8.9.10.1:5000-50000)
     -> Sets the packet to an untracked state, and clears all the conntrack fields.
    mod_dl_src:24:8a:07:ad:77:99
    mod_dl_dst:24:8a:07:88:27:ca
    output:5

Final flow: recirc_id=0x15,eth,ip,in_port=2,vlan_tci=0x0000,dl_src=24:8a:07:ad:77:99,dl_dst=24:8a:07:88:27:ca,nw_src=192.168.0.2,nw_dst=8.9.10.11,nw_proto=0,nw_tos=0,nw_ecn=0,nw_ttl=0
Megaflow: recirc_id=0x15,ct_state=+new+trk,eth,ip,in_port=2,dl_src=02:25:d0:13:01:02,dl_dst=24:8a:07:ad:77:99,nw_frag=no
Datapath actions: ct(commit,nat(src=8.9.10.1:5000-50000)),set(eth(src=24:8a:07:ad:77:99,dst=24:8a:07:88:27:ca)),2




ovs_ct_get_info

IPS_CONFIRMED_BIT

action=ct(commit)
__nf_conntrack_confirm
	ct->status |= IPS_CONFIRMED

withtout ct

filter protocol ip pref 1 flower chain 0
filter protocol ip pref 1 flower chain 0 handle 0x1
  dst_mac 24:8a:07:ad:77:99
  src_mac 02:25:d0:14:01:02
  eth_type ipv4
  ip_proto icmp
  dst_ip 8.9.10.11
  src_ip 192.168.0.2
  ip_flags nofrag
  in_hw
        action order 1:  pedit action pipe keys 6
         index 1 ref 1 bind 1 installed 26 sec used 26 sec
         key #0  at ipv4+12: val 08090a01 mask 00000000
         key #1  at ipv4+16: val 08090a0b mask 00000000
         key #2  at eth+4: val 0000248a mask ffff0000
         key #3  at eth+8: val 07ad7799 mask 00000000
         key #4  at eth+0: val 248a0788 mask 00000000
         key #5  at eth+4: val 27ca0000 mask 0000ffff
        Action statistics:
        Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0)
        backlog 0b 0p requeues 0

        action order 2: csum (iph) action pipe
        index 1 ref 1 bind 1 installed 26 sec used 26 sec
        Action statistics:
        Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0)
        backlog 0b 0p requeues 0

        action order 3: mirred (Egress Redirect to device enp4s0f0) stolen
        index 1 ref 1 bind 1 installed 26 sec used 0 sec
        Action statistics:
        Sent 3090 bytes 34 pkt (dropped 0, overlimits 0 requeues 0)
        backlog 0b 0p requeues 0
        cookie 871f3e3de440cf3c61e9df90a0d506ce

jd kernel

 0xffffffffc04cc9f0 : tcp_manip_pkt     0/0xf0 [nf_nat]
 0xffffffffc0571305 : nf_nat_ipv4_manip_pkt     a5/0x160 [nf_nat_ipv4]
 0xffffffffc04cb13a : nf_nat_packet     ba/0xe0 [nf_nat]
 0xffffffffc07f7815 : __ovs_ct_lookup     3a5/0xa70 [openvswitch]
 0xffffffffc07f84d9 : ovs_ct_execute     4f9/0x580 [openvswitch]
 0xffffffffc07e90e2 : do_execute_actions     a2/0x8a0 [openvswitch]
 0xffffffffc07e9920 : ovs_execute_actions     40/0x130 [openvswitch]
 0xffffffffc07ed4e4 : ovs_dp_process_packet     84/0x110 [openvswitch]
 0xffffffffc07f5e95 : ovs_vport_receive     75/0xd0 [openvswitch]
 0xffffffffc07f708e : netdev_frame_hook     de/0x160 [openvswitch]
 0xffffffff81591419 : __netif_receive_skb_core     1e9/0x820 [kernel]
 0xffffffff81591a68 : __netif_receive_skb     18/0x60 [kernel]
 0xffffffff81591af0 : netif_receive_skb_internal     40/0xc0 [kernel]
 0xffffffff81592988 : napi_gro_receive     d8/0x130 [kernel]
 0xffffffffc0680a59 : mlx5e_handle_rx_cqe_mpwrq     2f9/0x7c0 [mlx5_core]
 0xffffffffc0680ff7 : mlx5e_poll_rx_cq     d7/0x960 [mlx5_core]
 0xffffffffc0681b37 : mlx5e_napi_poll     a7/0xa90 [mlx5_core]
 0xffffffff81592013 : net_rx_action     173/0x380 [kernel]
 0xffffffff81094035 : __do_softirq     f5/0x280 [kernel]
 0xffffffff816c9abc : call_softirq     1c/0x30 [kernel]
parms: skb=0xffff881059201300 l3proto=0xffffffffc05720e0 iphdroff=0x0 hdroff=0x14 tuple=0xffff88085e603750 maniptype=0x1
execname: swapper/0
ts: 47, 13
<no user backtrace at module("nf_nat").function("tcp_manip_pkt@net/netfilter/nf_nat_proto_tcp.c:35")>

action=ct(nat(src=8.9.10.1-8.9.10.1:5000-50000)

PID     TID     COMM            FUNC
3365    3401    handler25       nf_conntrack_alter_reply
        nf_conntrack_alter_reply     1 [kernel]
        __ovs_ct_lookup     98a [kernel]
        ovs_ct_execute     cc [kernel]
        do_execute_actions     3bb [kernel]
        ovs_execute_actions     4c [kernel]
        ovs_packet_cmd_execute     249 [kernel]
        genl_family_rcv_msg     20b [kernel]
        genl_rcv_msg     4c [kernel]
        netlink_rcv_skb     51 [kernel]
        genl_rcv     28 [kernel]
        netlink_unicast     1a4 [kernel]
        netlink_sendmsg     2d1 [kernel]
        sock_sendmsg     3e [kernel]
        ___sys_sendmsg     280 [kernel]
        __sys_sendmsg     63 [kernel]
        __x64_sys_sendmsg     1f [kernel]
        do_syscall_64     5a [kernel]
        entry_SYSCALL_64_after_hwframe     44 [kernel]

[root@dev-r630-04 ~]# trace 'nf_nat_manip_pkt "%llx, %d, %d", arg2, arg3, arg4'
PID     TID     COMM            FUNC             -
0       0       swapper/6       nf_nat_manip_pkt ffff9a3ff09392c0, 0, 0
0       0       swapper/6       nf_nat_manip_pkt ffff9a3ff09392c0, 1, 1
0       0       swapper/6       nf_nat_manip_pkt ffff9a3ff09392c0, 0, 0
0       0       swapper/6       nf_nat_manip_pkt ffff9a3ff09392c0, 1, 1

* nat

https://wiki.aalto.fi/download/attachments/69901948/netfilter-paper.pdf

nf_nat_ipv4_in

nf_nat_setup_info
nf_nat_packet
nf_nat_manip_pkt	# important


action=ct(nat(src=8.9.10.1-8.9.10.1:5000-50000)

0       0       swapper/6       nf_nat_setup_info
        nf_nat_setup_info     1 [kernel]
        ovs_ct_execute     cc [kernel]
        do_execute_actions     3bb [kernel]
        ovs_execute_actions     4c [kernel]
        ovs_dp_process_packet     84 [kernel]
        clone_execute     1bb [kernel]
        do_execute_actions     d0 [kernel]
        ovs_execute_actions     4c [kernel]
        ovs_dp_process_packet     84 [kernel]
        ovs_vport_receive     76 [kernel]
        netdev_frame_hook     d0 [kernel]
        __netif_receive_skb_core     2ba [kernel]
        __netif_receive_skb_one_core     3b [kernel]
        __netif_receive_skb     18 [kernel]
        netif_receive_skb_internal     45 [kernel]
        napi_gro_receive     120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq     26f [kernel]
        mlx5e_poll_rx_cq     dd [kernel]
        mlx5e_napi_poll     bb [kernel]
        net_rx_action     14d [kernel]
        __softirqentry_text_start     de [kernel]
        irq_exit     df [kernel]
        do_IRQ     8a [kernel]
        ret_from_intr     0 [kernel]
        cpuidle_enter_state     b4 [kernel]
        cpuidle_enter     17 [kernel]
        call_cpuidle     23 [kernel]
        do_idle     1e1 [kernel]
        cpu_startup_entry     1d [kernel]
        start_secondary     16f [kernel]
        secondary_startup_64     a4 [kernel]


0       0       swapper/6       nf_nat_manip_pkt
        nf_nat_manip_pkt     1 [kernel]
        __ovs_ct_lookup     720 [kernel]
        ovs_ct_execute     424 [kernel]
        do_execute_actions     3bb [kernel]
        ovs_execute_actions     4c [kernel]
        ovs_dp_process_packet     84 [kernel]
        ovs_vport_receive     76 [kernel]
        netdev_frame_hook     d0 [kernel]
        __netif_receive_skb_core     2ba [kernel]
        __netif_receive_skb_one_core     3b [kernel]
        __netif_receive_skb     18 [kernel]
        netif_receive_skb_internal     45 [kernel]
        napi_gro_receive     120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq     26f [kernel]
        mlx5e_poll_rx_cq     dd [kernel]
        mlx5e_napi_poll     bb [kernel]
        net_rx_action     14d [kernel]
        __softirqentry_text_start     de [kernel]
        irq_exit     df [kernel]
        do_IRQ     8a [kernel]
        ret_from_intr     0 [kernel]
        cpuidle_enter_state     b4 [kernel]
        cpuidle_enter     17 [kernel]
        call_cpuidle     23 [kernel]
        do_idle     1e1 [kernel]
        cpu_startup_entry     1d [kernel]
        start_secondary     16f [kernel]
        secondary_startup_64     a4 [kernel]

 ovs_ct_update_key

0       0       swapper/13      nf_nat_packet
        nf_nat_packet     1 [kernel]
        ovs_ct_execute     424 [kernel]
        do_execute_actions     3bb [kernel]
        ovs_execute_actions     4c [kernel]
        ovs_dp_process_packet     84 [kernel]
        ovs_vport_receive     76 [kernel]
        netdev_frame_hook     d0 [kernel]
        __netif_receive_skb_core     2ba [kernel]
        __netif_receive_skb_one_core     3b [kernel]
        __netif_receive_skb     18 [kernel]
        netif_receive_skb_internal     45 [kernel]
        napi_gro_receive     120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq     26f [kernel]
        mlx5e_poll_rx_cq     dd [kernel]
        mlx5e_napi_poll     bb [kernel]
        net_rx_action     14d [kernel]
        __softirqentry_text_start     de [kernel]
        irq_exit     df [kernel]
        do_IRQ     8a [kernel]
        ret_from_intr     0 [kernel]
        cpuidle_enter_state     b4 [kernel]
        cpuidle_enter     17 [kernel]
        call_cpuidle     23 [kernel]
        do_idle     1e1 [kernel]
        cpu_startup_entry     1d [kernel]
        start_secondary     16f [kernel]
        secondary_startup_64     a4 [kernel]

0       0       swapper/8       nf_nat_packet
        nf_nat_packet     1 [kernel]
        nf_nat_ipv4_fn     4b [kernel]
        nf_hook_slow     48 [kernel]
        ip_local_deliver     cd [kernel]
        ip_rcv_finish     84 [kernel]
        ip_rcv     c7 [kernel]
        __netif_receive_skb_one_core     57 [kernel]
        __netif_receive_skb     18 [kernel]
        netif_receive_skb_internal     45 [kernel]
        napi_gro_receive     120 [kernel]
        mlx5e_handle_rx_cqe_mpwrq     26f [kernel]
        mlx5e_poll_rx_cq     dd [kernel]
        mlx5e_napi_poll     bb [kernel]
        net_rx_action     14d [kernel]
        __softirqentry_text_start     de [kernel]
        irq_exit     df [kernel]
        do_IRQ     8a [kernel]
        ret_from_intr     0 [kernel]
        cpuidle_enter_state     b4 [kernel]
        cpuidle_enter     17 [kernel]
        call_cpuidle     23 [kernel]
        do_idle     1e1 [kernel]
        cpu_startup_entry     1d [kernel]
        start_secondary     16f [kernel]
        secondary_startup_64     a4 [kernel]


https://gmd20.github.io/blog/openvswitch%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8BCT%E5%92%8CNAT-action%E7%9A%84%E5%AE%9E%E7%8E%B0/

* openvswitch: NAT support.
https://lists.openwall.net/netdev/2015/11/09/115

OpenvSwtich架构
http://www.cnblogs.com/CasonChan/p/4754620.html

commit 07659514c3c1e8998a4935a998b627d716c559f9
Author: Joe Stringer <joestringer@nicira.com>
Date:   Tue Aug 11 10:56:09 2015 -0700

    Add support for connection tracking.

    This patch adds a new action and fields to OVS that allow connection
    tracking to be performed. This support works in conjunction with the
    Linux kernel support merged into the Linux-4.3 development cycle.

    Packets have two possible states with respect to connection tracking:
    Untracked packets have not previously passed through the connection
    tracker, while tracked packets have previously been through the
    connection tracker. For OpenFlow pipeline processing, untracked packets
    can become tracked, and they will remain tracked until the end of the
    pipeline. Tracked packets cannot become untracked.

    Connections can be unknown, uncommitted, or committed. Packets which are
    untracked have unknown connection state. To know the connection state,
    the packet must become tracked. Uncommitted connections have no
    connection state stored about them, so it is only possible for the
    connection tracker to identify whether they are a new connection or
    whether they are invalid. Committed connections have connection state
    stored beyond the lifetime of the packet, which allows later packets in
    the same connection to be identified as part of the same established
    connection, or related to an existing connection - for instance ICMP
    error responses.



commit 8e53fe8cf7a178cf9702fb1bb916f4645058e5e7
Author: Joe Stringer <joestringer@nicira.com>
Date:   Fri Sep 18 13:58:00 2015 -0700

    Add connection tracking mark support.

    This patch adds a new 32-bit metadata field to the connection tracking
    interface. When a mark is specified as part of the ct action and the
    connection is committed, the value is saved with the current connection.
    Subsequent ct lookups with the table specified will expose this metadata
    as the "ct_mark" field in the flow.

    For example, to allow new TCP connections from port 1->2 and only allow
    established connections from port 2->1, and to associate a mark with those
    connections:

        table=0,priority=1,action=drop
        table=0,arp,action=normal
        table=0,in_port=1,tcp,action=ct(commit,exec(set_field:1->ct_mark)),2
        table=0,in_port=2,ct_state=-trk,tcp,action=ct(table=1)
        table=1,in_port=2,ct_state=+trk,ct_mark=1,tcp,action=1


        OVS_KEY_ATTR_CT_STATE,  /* u32 bitmask of OVS_CS_F_* */
        OVS_KEY_ATTR_CT_ZONE,   /* u16 connection tracking zone. */
+       OVS_KEY_ATTR_CT_MARK,   /* u32 connection tracking mark */

===chain===

commit 3aa447b22d6bada3d2d4002652843f5f84a4c415 (HEAD, master)
Author: Roman Kapl <code@rkapl.cz>
Date:   Fri Nov 24 12:27:58 2017 +0100

    net: sched: crash on blocks with goto chain action

    tcf_block_put_ext has assumed that all filters (and thus their goto
    actions) are destroyed in RCU callback and thus can not race with our
    list iteration. However, that is not true during netns cleanup (see
    tcf_exts_get_net comment).

    Prevent the user after free by holding all chains (except 0, that one is
    already held). foreach_safe is not enough in this case.

    To reproduce, run the following in a netns and then delete the ns:
        ip link add dtest type dummy
        tc qdisc add dev dtest ingress
        tc filter add dev dtest chain 1 parent ffff: handle 1 prio 1 flower action goto chain 2


From d7aa04a5e82b4f254d306926c81eae8df69e5200 Mon Sep 17 00:00:00 2001
From: Roman Kapl <code@rkapl.cz>
Date: Mon, 20 Nov 2017 22:21:13 +0100
Subject: [PATCH] net: sched: fix crash when deleting secondary chains

If you flush (delete) a filter chain other than chain 0 (such as when
deleting the device), the kernel may run into a use-after-free. The
chain refcount must not be decremented unless we are sure we are done
with the chain.

To reproduce the bug, run:

    ip link add dtest type dummy
    tc qdisc add dev dtest ingress
    tc filter add dev dtest chain 1  parent ffff: flower
    ip link del dtest

===skb===

skb_mac_header
ip_hdr
tcp_hdr

===ct===

44.13436 23258   23258   sshd            tcp_in_window
        tcp_in_window+0x1 [kernel]
        nf_conntrack_in+0x1c2 [kernel]
        ipv4_conntrack_local+0x48 [kernel]
        nf_hook_slow+0x48 [kernel]
        __ip_local_out+0xf3 [kernel]
        ip_local_out+0x1c [kernel]
        __ip_queue_xmit+0x160 [kernel]
        ip_queue_xmit+0x10 [kernel]
        __tcp_transmit_skb+0x5a8 [kernel]
        tcp_write_xmit+0x248 [kernel]
        __tcp_push_pending_frames+0x35 [kernel]
        tcp_push+0xdb [kernel]
        tcp_sendmsg_locked+0x413 [kernel]
        tcp_sendmsg+0x2c [kernel]
        inet_sendmsg+0x2e [kernel]
        sock_sendmsg+0x3e [kernel]
        sock_write_iter+0x8c [kernel]
        __vfs_write+0x10c [kernel]
        vfs_write+0xb1 [kernel]
        ksys_write+0x55 [kernel]
        __x64_sys_write+0x1a [kernel]
        do_syscall_64+0x60 [kernel]
        entry_SYSCALL_64_after_hwframe+0x44 [kernel]

ct_list


14855   14855   kworker/u36:1   mlx5_eswitch_del_offloaded_rule
        mlx5_eswitch_del_offloaded_rule 1 [kernel]
        mlx5e_tc_del_fdb_flow_simple 167 [kernel]
        mlx5e_tc_del_fdb_flow 1ed [kernel]
        mlx5e_tc_del_flow b5 [kernel]
        mlx5e_flow_put.part.66 12 [kernel]
        mlx5e_del_miniflow_work 1dd [kernel]
        process_one_work 1b3 [kernel]
        worker_thread 37 [kernel]
        kthread 121 [kernel]
        ret_from_fork 35 [kernel]

14855   14855   kworker/u36:1   mlx5_eswitch_add_offloaded_rule
        mlx5_eswitch_add_offloaded_rule 1 [kernel]
        mlx5e_tc_add_fdb_flow 150 [kernel]
        miniflow_merge_work 614 [kernel]
        process_one_work 1b3 [kernel]
        worker_thread 37 [kernel]
        kthread 121 [kernel]
        ret_from_fork 35 [kernel]

https://blog.csdn.net/jasonchen_gbd/article/details/44874321
http://blog.chinaunix.net/uid-26517122-id-4293135.html
https://www.jianshu.com/p/f1b266e42d93

 
ovs_ct_get_state

IPCT_MARK

ovs_ct_set_mark
 0xffffffffc0a668f0 : ovs_ct_execute           500/0x6d0 [openvswitch]
 0xffffffffc0a5612e : do_execute_actions           4fe/0xa40 [openvswitch]
 0xffffffffc0a56a6c : ovs_execute_actions           4c/0x140 [openvswitch]
 0xffffffffc0a5a7e4 : ovs_dp_process_packet           84/0x120 [openvswitch]
 0xffffffffc0a64193 : ovs_vport_receive           73/0xd0 [openvswitch]
 0xffffffffc0a64c6e : netdev_frame_hook           de/0x180 [openvswitch]
 0xffffffffb59f064a : __netif_receive_skb_core           1fa/0xa20 [kernel]
 0xffffffffb59f0e88 : __netif_receive_skb           18/0x60 [kernel]
 0xffffffffb59f0f10 : netif_receive_skb_internal           40/0xc0 [kernel]
 0xffffffffb59f1b38 : napi_gro_receive           d8/0x100 [kernel]
 0xffffffffc0afef19 : mlx5e_handle_rx_cqe_rep           3b9/0x730 [mlx5_core]
 0xffffffffc0affdd0 : mlx5e_poll_rx_cq           100/0x9c0 [mlx5_core]
 0xffffffffc0b00ed7 : mlx5e_napi_poll           d7/0xb40 [mlx5_core]
 0xffffffffb59f152f : net_rx_action           26f/0x390 [kernel]
 0xffffffffb549dba5 : __do_softirq           f5/0x280 [kernel]
 0xffffffffb5b28cec : call_softirq           1c/0x30 [kernel]
 0xffffffffb542e625 : do_softirq           65/0xa0 [kernel]
 0xffffffffb549df25 : irq_exit           105/0x110 [kernel]
 0xffffffffb5b29fa6 : __irqentry_text_start           56/0xf0 [kernel]
 0xffffffffb5b1c362 : ret_from_intr           0/0x15 [kernel]
parms: key=? mask=0xffffffff ct_mark=0x1 ct=0xffff9db0847a2080
execname: swapper/14
ts: 11
<no user backtrace at module("openvswitch").function("ovs_ct_set_mark@net/openvswitch/conntrack.c:309")>
5


 0xffffffffc08daf60 : nf_ct_deliver_cached_events           0/0x110 [nf_conntrack]
 0xffffffffc082a2ce : ipv4_confirm           4e/0x100 [nf_conntrack_ipv4]
 0xffffffffb5a2c568 : nf_iterate           98/0xe0 [kernel]
 0xffffffffb5a2c658 : nf_hook_slow           a8/0x110 [kernel]
 0xffffffffb5a3cb8e : ip_output           ce/0xe0 [kernel]
 0xffffffffb5a3a727 : ip_local_out_sk           37/0x40 [kernel]
 0xffffffffb5a3aa93 : ip_queue_xmit           143/0x3a0 [kernel]
 0xffffffffb5a54bc4 : tcp_transmit_skb           4e4/0x9e0 [kernel]
 0xffffffffb5a56c3f : tcp_send_ack           11f/0x170 [kernel]
 0xffffffffb5a4b5cb : __tcp_ack_snd_check           6b/0x90 [kernel]
 0xffffffffb5a515a4 : tcp_rcv_established           264/0x770 [kernel]
 0xffffffffb5a5c1aa : tcp_v4_do_rcv           10a/0x350 [kernel]
 0xffffffffb5a44a57 : tcp_prequeue_process           77/0xc0 [kernel]
 0xffffffffb5a459b4 : tcp_recvmsg           884/0xb30 [kernel]
 0xffffffffb5a73b50 : inet_recvmsg           80/0xb0 [kernel]
 0xffffffffb59d09bc : sock_aio_read.part.9           14c/0x170 [kernel]
 0xffffffffb59d0a01 : sock_aio_read           21/0x30 [kernel]
 0xffffffffb561e5c3 : do_sync_read           93/0xe0 [kernel]
 0xffffffffb561f095 : vfs_read           145/0x170 [kernel]
 0xffffffffb561febf : sys_read           7f/0xf0 [kernel]
parms: ct=0xffff9daf003ec000
execname: corrupt
ts: 153

             .pkt_to_tuple = tcp_pkt_to_tuple
             .pkt_to_tuple = ipv4_pkt_to_tuple

 0xffffffffa0d658d0 : __nf_conntrack_alloc            0/0x180 [nf_conntrack]
 0xffffffffa0d65dd0 : init_conntrack            370/0x5b0 [nf_conntrack]
 0xffffffffa0d66d58 : nf_conntrack_in            3c8/0x4e0 [nf_conntrack]
 0xffffffff81680e23 : nf_hook_slow            43/0xc0 [kernel]
 0xffffffff8168c72f : ip_rcv            33f/0x3f0 [kernel]
 0xffffffff81636927 : __netif_receive_skb_core            467/0xbe0 [kernel]
 0xffffffff8163978a : netif_receive_skb_internal            4a/0x130 [kernel] (inexact)
 0xffffffffa0b09050 [bridge] (inexact)
 0xffffffffa0b0925e [bridge] (inexact)
 0xffffffffa0b096df [bridge] (inexact)
 0xffffffff81636767 : __netif_receive_skb_core            2a7/0xbe0 [kernel] (inexact)
 0xffffffff8163978a : netif_receive_skb_internal            4a/0x130 [kernel] (inexact)
 0xffffffff8163a6a1 : napi_gro_receive            d1/0xf0 [kernel] (inexact)
 0xffffffffa00d2794 [tg3] (inexact)
 0xffffffffa00d2c8b [tg3] (inexact)
 0xffffffff81639ccd : net_rx_action            15d/0x430 [kernel] (inexact)
 0xffffffff81a00105 : __softirqentry_text_start            105/0x2fa [kernel] (inexact)
 0xffffffff8108eb7f : irq_exit            af/0xc0 [kernel] (inexact)
 0xffffffff81801ca9 : do_IRQ            89/0xe0 [kernel] (inexact)
 0xffffffff8180098f : ret_from_intr            0/0x1d [kernel] (inexact)
parms: net=0xffffffff820d8f00 zone=0xffffffff81cdb0f8 orig=0xffff88103c5839e0 repl=0xffff88103c583948 gfp=0x480020 hash=0xd094891c
execname: swapper/6
ts: 10
<no user backtrace at module("nf_conntrack").function("__nf_conntrack_alloc@net/netfilter/nf_conntrack_core.c:1111")>



 0xffffffffa0bf9e70 : __nf_conntrack_confirm           0/0x5d0 [nf_conntrack]
 0xffffffffa0c34167 [nf_conntrack_ipv4]
 0xffffffff81680e23 : nf_hook_slow           43/0xc0 [kernel] (inexact)
 0xffffffff81691e32 : ip_output           e2/0x110 [kernel] (inexact)
 0xffffffff816917e5 : ip_queue_xmit           145/0x3e0 [kernel] (inexact)
 0xffffffff816aacf6 : tcp_transmit_skb           536/0xa90 [kernel] (inexact)
 0xffffffff816acbfd : tcp_connect           87d/0xa10 [kernel] (inexact)
 0xffffffff816b2928 : tcp_v4_connect           3e8/0x500 [kernel] (inexact)
 0xffffffff816ca4d6 : __inet_stream_connect           236/0x340 [kernel] (inexact)
 0xffffffff816ca616 : inet_stream_connect           36/0x50 [kernel] (inexact)
 0xffffffff81617df7 : __sys_connect           87/0xf0 [kernel] (inexact)
 0xffffffff81617e76 : __x64_sys_connect           16/0x20 [kernel] (inexact)
 0xffffffff8100421b : do_syscall_64           5b/0x180 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe           44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: skb=0xffff880e373438f0
execname: corrupt
ts: 23
 0x7f6be448512c : __connect           4c/0xa0 [/usr/lib64/libpthread-2.26.so]
 0x401449 [/labhome/chrism/prg/c/corrupt/corrupt_lat_linux/corrupt           1449/0x3000]



[root@dev-r630-04 ~]# grep __nf_conntrack_alloc /proc/kallsyms
ffffffffa0d658d0 t __nf_conntrack_alloc [nf_conntrack]

init_conntrack
	__nf_conntrack_alloc

WARNING: Missing unwind data for a module, rerun with 'stap -d /usr/lib64/libiperf.so.0.0.0'
 0xffffffffa0bf88d0 : __nf_conntrack_alloc           0/0x180 [nf_conntrack]
 0xffffffffa0bf8dd0 : init_conntrack           370/0x5b0 [nf_conntrack]
 0xffffffffa0bf9d58 : nf_conntrack_in           3c8/0x4e0 [nf_conntrack]
 0xffffffff81680e23 : nf_hook_slow           43/0xc0 [kernel]
 0xffffffff8169146a : __ip_local_out           ca/0x100 [kernel]
 0xffffffff816914b7 : ip_local_out           17/0x40 [kernel]
 0xffffffff816917e5 : ip_queue_xmit           145/0x3e0 [kernel]
 0xffffffff816aacf6 : tcp_transmit_skb           536/0xa90 [kernel]
 0xffffffff816acbfd : tcp_connect           87d/0xa10 [kernel]
 0xffffffff816b2928 : tcp_v4_connect           3e8/0x500 [kernel]
 0xffffffff816ca4d6 : __inet_stream_connect           236/0x340 [kernel]
 0xffffffff816ca616 : inet_stream_connect           36/0x50 [kernel]
 0xffffffff81617df7 : __sys_connect           87/0xf0 [kernel]
 0xffffffff81617e76 : __x64_sys_connect           16/0x20 [kernel]
 0xffffffff8100421b : do_syscall_64           5b/0x180 [kernel]
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe           44/0xa9 [kernel]
 0x0 (inexact)
parms: net=0xffffffff820d8f00 zone=0xffffffff81cdb0f8 orig=0xffffc90001f1fb48 repl=0xffffc90001f1fab0 gfp=0x480020 hash=0x82febcc8
execname: iperf3
ts: 18
 0x7f13dd6fbf36 : __connect           16/0xa0 [/usr/lib64/libc-2.26.so]
 0x7f13ddd1fba5 [/usr/lib64/libiperf.so.0.0.0           18ba5/0x225000]

 0xffffffffa0bf88d0 : __nf_conntrack_alloc           0/0x180 [nf_conntrack]
 0xffffffffa0bf8dd0 : init_conntrack           370/0x5b0 [nf_conntrack]
 0xffffffffa0bf9d58 : nf_conntrack_in           3c8/0x4e0 [nf_conntrack]
 0xffffffff81680e23 : nf_hook_slow           43/0xc0 [kernel]
 0xffffffff8169146a : __ip_local_out           ca/0x100 [kernel]
 0xffffffff816914b7 : ip_local_out           17/0x40 [kernel]
 0xffffffff816917e5 : ip_queue_xmit           145/0x3e0 [kernel]
 0xffffffff816aacf6 : tcp_transmit_skb           536/0xa90 [kernel]
 0xffffffff816acbfd : tcp_connect           87d/0xa10 [kernel]
 0xffffffff816b2928 : tcp_v4_connect           3e8/0x500 [kernel]
 0xffffffff816ca4d6 : __inet_stream_connect           236/0x340 [kernel]
 0xffffffff816ca616 : inet_stream_connect           36/0x50 [kernel]
 0xffffffff81617df7 : __sys_connect           87/0xf0 [kernel]
 0xffffffff81617e76 : __x64_sys_connect           16/0x20 [kernel]
 0xffffffff8100421b : do_syscall_64           5b/0x180 [kernel]
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe           44/0xa9 [kernel]
 0x0 (inexact)
parms: net=0xffffffff820d8f00 zone=0xffffffff81cdb0f8 orig=0xffffc90001f1fb48 repl=0xffffc90001f1fab0 gfp=0x480020 hash=0x8dac485a
execname: iperf3
ts: 18
 0x7f13dd6fbf36 : __connect           16/0xa0 [/usr/lib64/libc-2.26.so]
 0x7f13ddd1dc3a [/usr/lib64/libiperf.so.0.0.0           16c3a/0x225000]

# conntrack -s 192.168.1.14 -m 1 -U

ctnetlink_change_conntrack

 0xffffffffc01f4930 : ctnetlink_conntrack_event           0/0x0 [nf_conntrack_netlink]
 0xffffffffc01f3d1b : ctnetlink_new_conntrack           62b/0x6a0 [nf_conntrack_netlink]
 0xffffffffc01ea5a1 : nfnetlink_rcv_msg           2e1/0x2f0 [nfnetlink]
 0xffffffffb5a2a06b : netlink_rcv_skb           ab/0xc0 [kernel]
 0xffffffffc01ea92f : nfnetlink_rcv           28f/0x0 [nfnetlink]
 0xffffffffb5a299f0 : netlink_unicast           170/0x210 [kernel]
 0xffffffffb5a29d98 : netlink_sendmsg           308/0x420 [kernel]
 0xffffffffb59d1396 : sock_sendmsg           b6/0xf0 [kernel]
 0xffffffffb59d1aa1 : SYSC_sendto           121/0x1c0 [kernel]
 0xffffffffb59d347e : SyS_sendto           e/0x10 [kernel]
 0xffffffffb5b25a1b : tracesys           a3/0xc9 [kernel]
 0x7f8774a8dc73
parms: events=0x5f8 item=0xffff9db6ee3bf948
execname: conntrack
ts: 8
 0x7f8774a8dc73 [/usr/lib64/libc-2.17.so           ffc73/0x3cd000]
0

# conntrack -s 192.168.1.14 -D
 0xffffffffc01f15b0 : ctnetlink_del_conntrack          0/0x1d0 [nf_conntrack_netlink]
 0xffffffffc01ea5a1 : nfnetlink_rcv_msg          2e1/0x2f0 [nfnetlink]
 0xffffffffb5a2a06b : netlink_rcv_skb          ab/0xc0 [kernel]
 0xffffffffc01ea92f : nfnetlink_rcv          28f/0x0 [nfnetlink]
 0xffffffffb5a299f0 : netlink_unicast          170/0x210 [kernel]
 0xffffffffb5a29d98 : netlink_sendmsg          308/0x420 [kernel]
 0xffffffffb59d1396 : sock_sendmsg          b6/0xf0 [kernel]
 0xffffffffb59d1aa1 : SYSC_sendto          121/0x1c0 [kernel]
 0xffffffffb59d347e : SyS_sendto          e/0x10 [kernel]
 0xffffffffb5b25a1b : tracesys          a3/0xc9 [kernel]
 0x7f8156170c73
parms: ctnl=0xffff9db884e71000 skb=0xffff9db086eb4800 nlh=0xffff9db0929fb800 cda=0xffff9daef7baba08
execname: conntrack
ts: 117
 0x7f8156170c73 : __sendto_nocancel          a/0x57 [/usr/lib64/libc-2.17.so]
 0x7f815643fe43 [/usr/lib64/libnfnetlink.so.0.2.0          1e43/0x207000]
0



# conntrack -L
 0xffffffffa0dc51a0 : ctnetlink_get_conntrack              0/0x280 [nf_conntrack_netlink]
 0xffffffffa0dbc3dc [nfnetlink]
 0xffffffff8167e40d : netlink_rcv_skb            4d/0x130 [kernel] (inexact)
 0xffffffffa0dbcba3 [nfnetlink] (inexact)
 0xffffffff8167dca6 : netlink_unicast            196/0x230 [kernel] (inexact)
 0xffffffff8167dfee : netlink_sendmsg            2ae/0x3a0 [kernel] (inexact)
 0xffffffff81616b06 : sock_sendmsg            36/0x40 [kernel] (inexact)
 0xffffffff816181be : __sys_sendto            10e/0x140 [kernel] (inexact)
 0xffffffff81618214 : __x64_sys_sendto            24/0x30 [kernel] (inexact)
 0xffffffff8100421b : do_syscall_64            5b/0x180 [kernel] (inexact)
 0xffffffff81800088 : entry_SYSCALL_64_after_hwframe            44/0xa9 [kernel] (inexact)
 0x0 (inexact)
parms: net=0xffffffff820d8f00 ctnl=0xffff88102f668800 skb=0xffff8810311fd000 nlh=0xffff880f4bf62a00 cda=0xffffc900010dbb70 extack=0xffffc900010dbcb8
execname: conntrack
ts: 17
 0x7f0d1eaba43a : sendto            1a/0xd0 [/usr/lib64/libc-2.26.so]
 0x7f0d1ed7be03 [/usr/lib64/libnfnetlink.so.0.2.0            1e03/0x206000]

ctnetlink_dump_table
ctnetlink_fill_info


static const struct nfnl_callback ctnl_cb[IPCTNL_MSG_MAX] = {
        [IPCTNL_MSG_CT_NEW]             = { .call = ctnetlink_new_conntrack,
                                            .attr_count = CTA_MAX,
                                            .policy = ct_nla_policy },
        [IPCTNL_MSG_CT_GET]             = { .call = ctnetlink_get_conntrack,
                                            .attr_count = CTA_MAX,
                                            .policy = ct_nla_policy },
        [IPCTNL_MSG_CT_DELETE]          = { .call = ctnetlink_del_conntrack,
                                            .attr_count = CTA_MAX,
                                            .policy = ct_nla_policy },
        [IPCTNL_MSG_CT_GET_CTRZERO]     = { .call = ctnetlink_get_conntrack,
                                            .attr_count = CTA_MAX,
                                            .policy = ct_nla_policy },
        [IPCTNL_MSG_CT_GET_STATS_CPU]   = { .call = ctnetlink_stat_ct_cpu },
        [IPCTNL_MSG_CT_GET_STATS]       = { .call = ctnetlink_stat_ct },
        [IPCTNL_MSG_CT_GET_DYING]       = { .call = ctnetlink_get_ct_dying },
        [IPCTNL_MSG_CT_GET_UNCONFIRMED] = { .call = ctnetlink_get_ct_unconfirmed },
};


crash> hlist_nulls_head nf_conntrack_hash
struct hlist_nulls_head {
  first = 0xffff880f8f280000
}

net/netfilter/nf_conntrack_core.c
struct hlist_nulls_head *nf_conntrack_hash __read_mostly;

nf_conntrack_max
nf_conntrack_alloc

===objdump===

[root@dev-r630-04 ~]# objdump -d /lib/modules/3.10.0-862.11.6.el7.x86_64.debug/extra/mlnx-ofa_kernel/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.ko --start-address=0x6e270 | less
[root@dev-r630-04 ~]# nm /lib/modules/3.10.0-862.11.6.el7.x86_64.debug/extra/mlnx-ofa_kernel/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.ko | grep mlx5e_stats_flower
000000000006e270 T mlx5e_stats_flower

===centos===

http://vault.centos.org/7.2.1511/isos/x86_64/CentOS-7-x86_64-DVD-1511.iso

centos 7.4:

http://ftp.riken.jp/Linux/cern/centos/7/updates/x86_64/Packages/kernel-devel-3.10.0-693.el7.x86_64.rpm

centos 7.6:

yum install kernel-headers-3.10.0-957.el7.x86_64

http://debuginfo.centos.org/7/x86_64/kernel-debuginfo-common-x86_64-3.10.0-957.el7.x86_64.rpm
http://debuginfo.centos.org/7/x86_64/kernel-debuginfo-3.10.0-957.el7.x86_64.rpm

You should identify the kernels you build. all builds have same version and we cannot distinguish the kernels.
In the url you paste they mention how to do it for the centos src rpm.

This must be uncommented and given a value to avoid a conflict with your currently installed kernel. Change the line in a similar manner to the example below:
%define buildid .your_identifier


http://vault.centos.org/7.2.1511/updates/Source/SPackages/kernel-3.10.0-327.36.3.el7.src.rpm
http://vault.centos.org/7.4.1708/updates/Source/SPackages/kernel-3.10.0-693.1.1.el7.src.rpm
http://vault.centos.org/7.5.1804/updates/Source/SPackages/kernel-3.10.0-862.11.6.el7.src.rpm

http://vault.centos.org/7.4.1708/updates/Source/SPackages/kernel-3.10.0-693.21.1.el7.src.rpm

rpm -e ... --nodeps
rpm -q <kernel-name> --changelog

https://wiki.centos.org/HowTos/Custom_Kernel
https://wiki.centos.org/HowTos/I_need_the_Kernel_Source
http://vault.centos.org/7.4.1708/updates/Source/SPackages/

yum --enablerepo=base-debuginfo install -y kernel-debuginfo-$(uname -r)
yum install kernel-devel

centos 7.5:

http://debuginfo.centos.org/7/x86_64/kernel-debuginfo-common-x86_64-3.10.0-862.el7.x86_64.rpm
http://debuginfo.centos.org/7/x86_64/kernel-debuginfo-3.10.0-862.el7.x86_64.rpm

https://mirrors.aliyun.com/centos/7.5.1804/updates/x86_64/Packages/

https://ask.fedoraproject.org/en/question/51444/how-to-install-specific-kernel-version/

centos 7.6:
http://debuginfo.centos.org/7/x86_64/kernel-debuginfo-common-x86_64-3.10.0-957.el7.x86_64.rpm
http://debuginfo.centos.org/7/x86_64/kernel-debuginfo-3.10.0-957.el7.x86_64.rpm

===lwn===

https://lwn.net/Articles/743391/
net: sched: allow qdiscs to share filter block instances

===cgroup===

crash> list -H cgroup_roots -o cgroup_root.root_list -s cgroup_root.hierarchy_id
ffffa08b572be000
  hierarchy_id = 0xc
ffffa08b572bc000
  hierarchy_id = 0xb
ffffa08b572ba000
  hierarchy_id = 0xa
ffffa08b572b8000
  hierarchy_id = 0x9
ffffa08b572b6000
  hierarchy_id = 0x8
ffffa08b572b4000
  hierarchy_id = 0x7
ffffa08b572b2000
  hierarchy_id = 0x6
ffffa08b572b0000
  hierarchy_id = 0x5
ffffa08b57188000
  hierarchy_id = 0x4
ffffa08b5718a000
  hierarchy_id = 0x3
ffffa08b5718c000
  hierarchy_id = 0x2
ffffa08b5718e000
  hierarchy_id = 0x1
ffffffff922b0a20
  hierarchy_id = 0x0

===bcc===

BPF_CGROUP_INET_INGRESS
	BPF_PROG_TYPE_CGROUP_SKB

cgroup_bpf_prog_attach

array_map_get_next_key
	struct bpf_array *array = container_of(map, struct bpf_array, map);

crash> bpf_array ffffa0934b6cd000
crash> bpf_map   ffffa0934b6cd000
struct bpf_map {
  ops = 0xffffffff91e2e3e0,
  inner_map_meta = 0x0,
  security = 0xffffa08a2efa70a8,
  map_type = BPF_MAP_TYPE_PERF_EVENT_ARRAY,
  key_size = 0x4,
  value_size = 0x4,
  max_entries = 0x10,
  map_flags = 0x0,
  pages = 0x1,
  id = 0x3a,
  numa_node = 0xffffffff,
  btf_key_type_id = 0x0,
  btf_value_type_id = 0x0,
  btf = 0x0,
  unpriv_array = 0x0,
  user = 0xffffffff9224d4e0,
  refcnt = {
    counter = 0x2
  },
  usercnt = {
    counter = 0x1
  },
  work = {
    data = {
      counter = 0x0
    },
    entry = {
      next = 0x0,
      prev = 0x0
    },
    func = 0x0
  },
  name = "events\000\000\000\000\000\000\000\000\000"
}
crash> sym 0xffffffff91e2e3e0
ffffffff91e2e3e0 (R) perf_event_array_map_ops


BPF_PROG_RUN

tree -t xarray map_idr

static struct inode *anon_inode_inode;
inode anon_inode_inode

anon_inode_getfd

kernel/bpf/syscall.c

2970    2970    tcpv4connect.py htab_map_alloc
        htab_map_alloc      1 [kernel]
        __x64_sys_bpf      106 [kernel]
        do_syscall_64      5a [kernel]
        entry_SYSCALL_64_after_hwframe      44 [kernel]

ffffffff91e2e200 (R) htab_map_ops


setup_arg_pages

trace 'pci_alloc_dev "%llx", arg1'
trace 'r::pci_alloc_dev "%llx", retval'

trace -s /lib64/libc.so.6,/bin/ping 'p:c:inet_pton' -U
ping -c1 google.com

trace 'tc:tc_filter_modify "%d", arg1'

===wq===

list -H workqueues -s workqueue_struct.name -l workqueue_struct.list

tree -t radix  worker_pool_idr -s worker_pool.cpu

===ubuntu===

# crash needs it
sudo apt-get install libncurses5-dev

systemctl add-wants multi-user.target rpcbind.service

sudo apt-get install  openssh-client=1:6.6p1-2ubuntu1

===link===

https://mirrors.tuna.tsinghua.edu.cn
https://mirrors.huaweicloud.com/debian-cd/10.2.0/amd64/iso-cd/debian-10.2.0-amd64-netinst.iso

===header_rewrite===

Table 1710 - SET ACTION Input Structure Layout

enum {
        MLX5_ACTION_IN_FIELD_OUT_SMAC_47_16    = 0x1,
        MLX5_ACTION_IN_FIELD_OUT_SMAC_15_0     = 0x2,
        MLX5_ACTION_IN_FIELD_OUT_ETHERTYPE     = 0x3,
        MLX5_ACTION_IN_FIELD_OUT_DMAC_47_16    = 0x4,
        MLX5_ACTION_IN_FIELD_OUT_DMAC_15_0     = 0x5,
        MLX5_ACTION_IN_FIELD_OUT_IP_DSCP       = 0x6,
        MLX5_ACTION_IN_FIELD_OUT_TCP_FLAGS     = 0x7,
        MLX5_ACTION_IN_FIELD_OUT_TCP_SPORT     = 0x8,
        MLX5_ACTION_IN_FIELD_OUT_TCP_DPORT     = 0x9,
        MLX5_ACTION_IN_FIELD_OUT_IP_TTL        = 0xa,
        MLX5_ACTION_IN_FIELD_OUT_UDP_SPORT     = 0xb,
        MLX5_ACTION_IN_FIELD_OUT_UDP_DPORT     = 0xc,
        MLX5_ACTION_IN_FIELD_OUT_SIPV6_127_96  = 0xd,
        MLX5_ACTION_IN_FIELD_OUT_SIPV6_95_64   = 0xe,
        MLX5_ACTION_IN_FIELD_OUT_SIPV6_63_32   = 0xf,
        MLX5_ACTION_IN_FIELD_OUT_SIPV6_31_0    = 0x10,
        MLX5_ACTION_IN_FIELD_OUT_DIPV6_127_96  = 0x11,
        MLX5_ACTION_IN_FIELD_OUT_DIPV6_95_64   = 0x12,
        MLX5_ACTION_IN_FIELD_OUT_DIPV6_63_32   = 0x13,
        MLX5_ACTION_IN_FIELD_OUT_DIPV6_31_0    = 0x14,
        MLX5_ACTION_IN_FIELD_OUT_SIPV4         = 0x15,
        MLX5_ACTION_IN_FIELD_OUT_DIPV4         = 0x16,
        MLX5_ACTION_IN_FIELD_OUT_IPV6_HOPLIMIT = 0x47,
};

FLOW_ACTION_ADD		1
add ttl ee
ffff904c39577c38:  ee00000000000a20                     .......

FLOW_ACTION_MANGLE	0
set ttl ee
ffff904c39577878:  ee00000008000a10                    ........

vlan modify 10 to 11
ffff943bd47502f8:  0b0000000c001710                    ........

vlan modify 50 to 40
ffff9433f2ebaf78:  280000000c001710                    .......(

change source ip address to 192.168.0.2 and change tcp dport to 0x870a
ffff9268474d3a50:  0200a8c000001610 0a87000010000910   ................
change dest mac address 4/5
ffff9268474d3a60:  14d0250200000410 0201000010000510   .....%..........
change source mac address 1/2
ffff9268474d3a70:  ad078a2400000110 9977000010000210   ....$.........w.


crash> rd 0xffff91f7e68a9a50 6
change dest ip address to 192.168.0.2 and change tcp sport to 0x870a
ffff91f7e68a9a50:  010a090800001510 b2a0000010000810   ................
ffff91f7e68a9a60:  14d0250200000410 0201000010000510   .....%..........
ffff91f7e68a9a70:  ad078a2400000110 9977000010000210   ....$.........w.

===iperf3===

get_parameters

@@ -1783,6 +1783,7 @@ get_parameters(struct iperf_test *test)
            test->server_affinity = j_p->valueint;
        if ((j_p = cJSON_GetObjectItem(j, "time")) != NULL)
            test->duration = j_p->valueint;
+            printf("%s: %d\n", __func__, test->duration);
        if ((j_p = cJSON_GetObjectItem(j, "num")) != NULL)
            test->settings->bytes = j_p->valueint;
        if ((j_p = cJSON_GetObjectItem(j, "blockcount")) != NULL)

===uplink rep===

commit d9ee0491c2ffbb5bc8bc418dd857a045d0d0130f
Author: Or Gerlitz <ogerlitz@mellanox.com>
Date:   Tue Feb 13 15:48:30 2018 +0200

    net/mlx5e: Use dedicated uplink vport netdev representor

    Currently, when running in sriov switchdev mode, we are using the PF
    netdevice as the uplink representor, this is problematic from few aspects:

    - will break when the PF isn't eswitch manager (e.g smart NIC env)
    - misalignment with other NIC switchdev drivers
    - makes us have and maintain special code, hurts the driver quality/robustness
    - which in turn opens the door for future bugs

    As of each and all of the above, we move to have a dedicated netdev representor
    for the uplink vport in a similar manner done for for the VF vports.

    This includes the following:

    1. have an uplink rep netdev as we have for VF reps
    2. all reps use same load/unload functions
    3. HW stats for uplink based on physical port counters and not vport counters
    4. link state for the uplink managed through PAOS and not vport state
    5. the uplink rep has sysfs link to the PF PCI function && uses the PF MAC address

    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>


mlx5e_netdev_ops_vf_rep
mlx5e_netdev_ops_uplink_rep

===br===

12.01276 0       0       swapper/2       br_fdb_update
        br_fdb_update+0x1 [kernel]
        br_nf_hook_thresh+0x50 [kernel]
        br_nf_pre_routing_finish_ipv6+0x14c [kernel]
        br_nf_pre_routing_ipv6+0xf7 [kernel]
        br_nf_pre_routing+0x395 [kernel]
        nf_hook_slow+0x48 [kernel]
        br_handle_frame+0x213 [kernel]
        __netif_receive_skb_core+0x2db [kernel]
        __netif_receive_skb_one_core+0x3b [kernel]
        __netif_receive_skb+0x18 [kernel]
        netif_receive_skb_internal+0x6b [kernel]
        napi_gro_receive+0xeb [kernel]
        mlx5e_handle_rx_cqe_mpwrq+0xd3 [kernel]
        mlx5e_poll_rx_cq+0x90 [kernel]
        mlx5e_napi_poll+0xfe [kernel]
        net_rx_action+0x14f [kernel]
        __do_softirq+0xf9 [kernel]
        irq_exit+0xf8 [kernel]
        do_IRQ+0x8a [kernel]
        ret_from_intr+0x0 [kernel]
        mwait_idle+0x7f [kernel]
        arch_cpu_idle+0x15 [kernel]
        default_idle_call+0x23 [kernel]
        do_idle+0x1bf [kernel]
        cpu_startup_entry+0x73 [kernel]
        start_secondary+0x1ab [kernel]
        secondary_startup_64+0xa4 [kernel]

===ip_veth===

Breakpoint 1, veth_parse_opt (lu=0x4a2aa0 <veth_link_util>, argc=3, argv=0x7fffffffe398, n=0x7fffffffdd90) at link_veth.c:34
34              char *type = NULL;
(gdb) bt
#0  veth_parse_opt (lu=0x4a2aa0 <veth_link_util>, argc=3, argv=0x7fffffffe398, n=0x7fffffffdd90) at link_veth.c:34
#1  0x00000000004294ea in iplink_modify (cmd=16, flags=1536, argc=3, argv=0x7fffffffe398) at iplink.c:1064
#2  0x000000000042ada8 in do_iplink (argc=7, argv=0x7fffffffe378) at iplink.c:1637
#3  0x0000000000408b7b in do_cmd (argv0=0x7fffffffe64e "link", argc=8, argv=0x7fffffffe370) at ip.c:113
#4  0x00000000004094ed in main (argc=9, argv=0x7fffffffe368) at ip.c:317
(gdb) file ip
Reading symbols from ip...
(gdb) p *argv
$3 = 0x7fffffffe667 "peer"
(gdb) p *argv+1
$4 = 0x7fffffffe668 "eer"
(gdb) p *(argv+1)
$5 = 0x7fffffffe66c "name"
(gdb) p *(argv+2)
$6 = 0x7fffffffe671 "host1_rep"
(gdb) p *n
$8 = {
  nlmsg_len = 60,
  nlmsg_type = 16,	# RTM_NEWLINK     = 16,
  nlmsg_flags = 1537,
  nlmsg_seq = 0,
  nlmsg_pid = 0
}
(gdb) p/x *n
$9 = {
  nlmsg_len = 0x3c,
  nlmsg_type = 0x10,
  nlmsg_flags = 0x601,
  nlmsg_seq = 0x0,
  nlmsg_pid = 0x0
}

===bnxt===

bnxt_tc_add_flow

===route===

ip_rcv_finish
	ip_rcv_finish_core
		ip_route_input_noref
			ip_route_input_rcu
				ip_route_input_slow
					rt_dst_alloc(RTCF_LOCAL)
					ip_mkroute_input
						__mkroute_input
							rt_dst_alloc
							rth->dst.input = ip_forward;
	dst_input
		skb_dst(skb)->input(skb)	# ip_forward or ip_local_diliver

===atomic===

test_and_set_bit

static int __esw_offloads_load_rep(struct mlx5_eswitch *esw,
                                   struct mlx5_eswitch_rep *rep, u8 rep_type)
{
        int err = 0;

        if (atomic_cmpxchg(&rep->rep_if[rep_type].state,
                           REP_REGISTERED, REP_LOADED) == REP_REGISTERED) {
                err = rep->rep_if[rep_type].load(esw->dev, rep);
                if (err)
                        atomic_set(&rep->rep_if[rep_type].state,
                                   REP_REGISTERED);
        }

        return err;
}

===vhost===

https://www.cnblogs.com/ck1020/category/884534.html
https://blog.csdn.net/majieyue/article/details/51354232

 25 ffff8e148b474d80 ffff8e0c96975b80 ffff8e0c96e85068 CHR  /dev/net/tun
 27 ffff8e148b476d00 ffff8e0c8bbfcc80 ffff8e0c8c2a4090 CHR  /dev/vhost-net

static const struct net_device_ops tun_netdev_ops = {
        .ndo_uninit             = tun_net_uninit,
        .ndo_open               = tun_net_open,
        .ndo_stop               = tun_net_close,
        .ndo_start_xmit         = tun_net_xmit,
        .ndo_fix_features       = tun_net_fix_features,
        .ndo_select_queue       = tun_select_queue,
        .ndo_set_rx_headroom    = tun_set_headroom,
        .ndo_get_stats64        = tun_net_get_stats64,
};


/* Ops structure to mimic raw sockets with tun */
static const struct proto_ops tun_socket_ops = {
        .peek_len = tun_peek_len,
        .sendmsg = tun_sendmsg,
        .recvmsg = tun_recvmsg,
};

tun_do_read
	tun_ring_recv
		ptr_ring_consume
			__ptr_ring_consume

        worker = kthread_create(vhost_worker, dev, "vhost-%d", current->pid);

crash> vhost_net_misc
vhost_net_misc = $1 = {
  minor = 0xee,
  name = 0xffffffffc0308439 "vhost-net",
  fops = 0xffffffffc03080a0 <vhost_net_fops>,
  list = {
    next = 0xffffffffc02ec078,
    prev = 0xffffffffc04b8058
  },
  parent = 0x0,
  this_device = 0xffff8e14fc616800,
  groups = 0x0,
  nodename = 0x0,
  mode = 0x0
}

crash> vhost_net.poll 0xffff8e1496d60000
  poll = {{
      table = {
        _qproc = 0xffffffffc03131a0 <vhost_poll_func>,
        _key = 0xffffffff
      },
      wqh = 0xffff8e0c41b92500,
      wait = {
        flags = 0x0,
        private = 0x0,
        func = 0xffffffffc0314950 <vhost_poll_wakeup>,
        entry = {
          next = 0xffff8e0c41b92548,
          prev = 0xffff8e0c41b92548
        }
      },
      work = {
        node = {
          next = 0x0
        },
        fn = 0xffffffffc0307af0 <handle_rx_net>,
        flags = 0x0
      },
      mask = 0x1,
      dev = 0xffff8e1496d60000
    }, {
      table = {
        _qproc = 0xffffffffc03131a0 <vhost_poll_func>,
        _key = 0xffffffff
      },
      wqh = 0x0,
      wait = {
        flags = 0x0,
        private = 0x0,
        func = 0xffffffffc0314950 <vhost_poll_wakeup>,
        entry = {
          next = 0xdead000000000100,
          prev = 0xdead000000000200
        }
      },
      work = {
        node = {
          next = 0x0
        },
        fn = 0xffffffffc03062e0 <handle_tx_net>,
        flags = 0x0
      },
      mask = 0x4,
      dev = 0xffff8e1496d60000
    }},

[chrism@dev-r630-03 linux]$ gg "vhost-net"
Documentation/admin-guide/devices.txt:374:              238 = /dev/vhost-net    Host kernel accelerator for virtio net
drivers/vhost/net.c:1592:       .name = "vhost-net",
drivers/vhost/net.c:1615:MODULE_ALIAS("devname:vhost-net");
include/uapi/linux/vhost.h:192:/* vhost-net should add virtio_net_hdr for RX, and strip for TX packets. */
tools/include/uapi/linux/vhost.h:192:/* vhost-net should add virtio_net_hdr for RX, and strip for TX packets. */

/dev/vhost-net

handle_rx_net

handle_rx
handle_tx

===python3===

https://docs.python.org/3/tutorial/inputoutput.html

===fib===

cat /proc/net/fib_trie
fib_trie_seq_start

===trex===

https://trex-tgn.cisco.com/trex/release/latest

===xdp===

mlx5e_xdp_handle
mlx5e_skb_from_cqe_mpwrq_linear
mlx5e_xmit_xdp_frame_mpwqe

===veth===

[root@dev-r630-03 ~]# trace veth_newlink -K
TIME     PID     TID     COMM            FUNC
5.391614 11556   11556   ip              veth_newlink
        veth_newlink
	rtnl_newlink	ops->newlink
        rtnetlink_rcv_msg	doit
        netlink_rcv_skb+0x54 [kernel]
        rtnetlink_rcv+0x15 [kernel]
        netlink_unicast+0x19c [kernel]
        netlink_sendmsg+0x2d1 [kernel]
        sock_sendmsg+0x3e [kernel]
        ___sys_sendmsg+0x283 [kernel]
        __sys_sendmsg+0x63 [kernel]
        __x64_sys_sendmsg+0x1f [kernel]
        do_syscall_64+0x60 [kernel]
        entry_SYSCALL_64_after_hwframe+0x44 [kernel]

===end===
